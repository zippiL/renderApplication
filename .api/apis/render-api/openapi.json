{
  "openapi": "3.0.2",
  "info": {
    "title": "Render Public API",
    "description": "Manage everything about your Render services",
    "version": "1.0.0",
    "contact": {
      "name": "Render API",
      "url": "https://community.render.com",
      "email": "support@render.com"
    }
  },
  "x-readme": {
    "metrics-enabled": false
  },
  "servers": [
    {
      "url": "https://api.render.com/v1"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Custom Domains"
    },
    {
      "name": "Deploys"
    },
    {
      "name": "Disks"
    },
    {
      "name": "Environments",
      "description": "A collection of environment variable groups, services, Postgres, and Redis instances"
    },
    {
      "name": "Environment Variable Groups",
      "description": "A collection of environment variables that can be shared across services"
    },
    {
      "name": "Jobs"
    },
    {
      "name": "Metrics",
      "description": "The `Metrics` endpoints allow you to retrieve metrics for your Render services."
    },
    {
      "name": "Notification Settings"
    },
    {
      "name": "Owners",
      "description": "The `Owners` endpoints supply more information about the users and teams that your API key has access to."
    },
    {
      "name": "Postgres"
    },
    {
      "name": "Projects",
      "description": "A collection of environments"
    },
    {
      "name": "Redis"
    },
    {
      "name": "Registry Credentials"
    },
    {
      "name": "Services"
    },
    {
      "name": "Services / Headers",
      "description": "Use HTTP headers to inject response headers in static site responses. You can also use wildcards like /path/* to add headers to responses for all matching request paths."
    },
    {
      "name": "Services / Routes",
      "description": "Add Redirect or Rewrite Rules to modify requests to your site without writing code. You can use URL parameters to capture path segments, and wildcards to redirect everything under a given path."
    }
  ],
  "paths": {
    "/owners": {
      "get": {
        "summary": "List authorized users and teams",
        "operationId": "get-owners",
        "tags": [
          "Owners"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "description": "Cursor to begin retrieving entries for this query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Max number of items that can be returned",
            "schema": {
              "type": "number",
              "default": 20,
              "minimum": 1,
              "maximum": 100,
              "description": "Defaults to 20"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "owner": {
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "email",
                          "type"
                        ],
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "user",
                              "team"
                            ]
                          }
                        }
                      },
                      "cursor": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/owners/{ownerId}": {
      "parameters": [
        {
          "name": "ownerId",
          "in": "path",
          "required": true,
          "description": "The ID of the user or team",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve user or team",
        "operationId": "get-owner",
        "tags": [
          "Owners"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "email",
                    "type"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "user",
                        "team"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/registrycredentials": {
      "get": {
        "summary": "List registry credentials",
        "operationId": "get-registry-credentials",
        "tags": [
          "Registry Credentials"
        ],
        "description": "List registry credentials",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "description": "Filter for the name of a credential"
          },
          {
            "name": "username",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "description": "Filter for the username of a credential"
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "GITHUB",
                  "GITLAB",
                  "DOCKER"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "description": "Filter for the registry type for the credential"
          },
          {
            "name": "createdBefore",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for services created before a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-06-17T08:15:30Z"
          },
          {
            "name": "createdAfter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for services created after a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-02-17T08:15:30Z"
          },
          {
            "name": "updatedBefore",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for services updated before a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-06-17T08:15:30Z"
          },
          {
            "name": "updatedAfter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for services updated after a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-02-17T08:15:30Z"
          },
          {
            "name": "ownerId",
            "in": "query",
            "description": "The ID of the owner (team or personal user) whose resources should be returned",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "description": "Cursor to begin retrieving entries for this query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Max number of items that can be returned",
            "schema": {
              "type": "number",
              "default": 20,
              "minimum": 1,
              "maximum": 100,
              "description": "Defaults to 20"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "username",
                      "registry"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier for this credential"
                      },
                      "name": {
                        "type": "string",
                        "description": "Descriptive name for this credential"
                      },
                      "registry": {
                        "type": "string",
                        "enum": [
                          "GITHUB",
                          "GITLAB",
                          "DOCKER"
                        ],
                        "description": "The registry to use this credential with"
                      },
                      "username": {
                        "type": "string",
                        "description": "The username associated with the credential"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create registry credential",
        "description": "Create registry credential",
        "operationId": "create-registry-credential",
        "tags": [
          "Registry Credentials"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "registry",
                  "username",
                  "authToken",
                  "ownerId"
                ],
                "properties": {
                  "registry": {
                    "type": "string",
                    "enum": [
                      "GITHUB",
                      "GITLAB",
                      "DOCKER"
                    ]
                  },
                  "name": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "authToken": {
                    "type": "string"
                  },
                  "ownerId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "username",
                    "registry"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for this credential"
                    },
                    "name": {
                      "type": "string",
                      "description": "Descriptive name for this credential"
                    },
                    "registry": {
                      "type": "string",
                      "enum": [
                        "GITHUB",
                        "GITLAB",
                        "DOCKER"
                      ],
                      "description": "The registry to use this credential with"
                    },
                    "username": {
                      "type": "string",
                      "description": "The username associated with the credential"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "You must enter payment information to perform this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "The current state of the resource conflicts with this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/registrycredentials/{registryCredentialId}": {
      "parameters": [
        {
          "name": "registryCredentialId",
          "in": "path",
          "required": true,
          "description": "The ID of the registry credential",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve registry credentials",
        "description": "Retrieve registry credentials",
        "tags": [
          "Registry Credentials"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "username",
                    "registry"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for this credential"
                    },
                    "name": {
                      "type": "string",
                      "description": "Descriptive name for this credential"
                    },
                    "registry": {
                      "type": "string",
                      "enum": [
                        "GITHUB",
                        "GITLAB",
                        "DOCKER"
                      ],
                      "description": "The registry to use this credential with"
                    },
                    "username": {
                      "type": "string",
                      "description": "The username associated with the credential"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update registry credential",
        "description": "Update registry credential. Services that use this credential must be redeployed to use the updated values.",
        "operationId": "update-registry-credential",
        "tags": [
          "Registry Credentials"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "registry",
                  "username",
                  "authToken"
                ],
                "properties": {
                  "registry": {
                    "type": "string",
                    "enum": [
                      "GITHUB",
                      "GITLAB",
                      "DOCKER"
                    ]
                  },
                  "name": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "authToken": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "username",
                    "registry"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for this credential"
                    },
                    "name": {
                      "type": "string",
                      "description": "Descriptive name for this credential"
                    },
                    "registry": {
                      "type": "string",
                      "enum": [
                        "GITHUB",
                        "GITLAB",
                        "DOCKER"
                      ],
                      "description": "The registry to use this credential with"
                    },
                    "username": {
                      "type": "string",
                      "description": "The username associated with the credential"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "You must enter payment information to perform this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "The current state of the resource conflicts with this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete registry credential",
        "description": "Delete registry credential",
        "operationId": "delete-registry-credential",
        "tags": [
          "Registry Credentials"
        ],
        "responses": {
          "204": {
            "description": "Registry credential deleted"
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services": {
      "get": {
        "summary": "List services",
        "operationId": "get-services",
        "tags": [
          "Services"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "description": "Filter by resource name"
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "static_site",
                  "web_service",
                  "private_service",
                  "background_worker",
                  "cron_job"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "description": "Filter for types of services"
          },
          {
            "name": "env",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "docker",
                  "elixir",
                  "go",
                  "node",
                  "python",
                  "ruby",
                  "rust",
                  "image"
                ],
                "description": "Environment (runtime)"
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "description": "Filter for environments (runtimes) of services"
          },
          {
            "name": "region",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "frankfurt",
                  "oregon",
                  "ohio",
                  "singapore"
                ],
                "default": "oregon",
                "description": "Defaults to \"oregon\""
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "description": "Filter by resource region"
          },
          {
            "name": "suspended",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "suspended",
                  "not_suspended"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "description": "Filter resources based on whether they're suspended or not suspended"
          },
          {
            "name": "createdBefore",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for resources created before a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-06-17T08:15:30Z"
          },
          {
            "name": "createdAfter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for resources created after a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-02-17T08:15:30Z"
          },
          {
            "name": "updatedBefore",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for resources updated before a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-06-17T08:15:30Z"
          },
          {
            "name": "updatedAfter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for resources updated after a certain time (specified as an ISO 8601 timestamp)"
          },
          {
            "name": "ownerId",
            "in": "query",
            "description": "The ID of the owner (team or personal user) whose resources should be returned",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "description": "Cursor to begin retrieving entries for this query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Max number of items that can be returned",
            "schema": {
              "type": "number",
              "default": 20,
              "minimum": 1,
              "maximum": 100,
              "description": "Defaults to 20"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "service": {
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "ownerId",
                          "type",
                          "createdAt",
                          "updatedAt",
                          "suspended",
                          "suspenders",
                          "autoDeploy",
                          "notifyOnFail",
                          "slug",
                          "serviceDetails",
                          "rootDir"
                        ],
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "autoDeploy": {
                            "type": "string",
                            "enum": [
                              "yes",
                              "no"
                            ]
                          },
                          "branch": {
                            "type": "string"
                          },
                          "buildFilter": {
                            "type": "object",
                            "required": [
                              "paths",
                              "ignoredPaths"
                            ],
                            "properties": {
                              "paths": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "ignoredPaths": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "environmentId": {
                            "type": "string"
                          },
                          "imagePath": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "notifyOnFail": {
                            "type": "string",
                            "enum": [
                              "default",
                              "notify",
                              "ignore"
                            ]
                          },
                          "ownerId": {
                            "type": "string"
                          },
                          "registryCredential": {
                            "type": "object",
                            "required": [
                              "id",
                              "name"
                            ],
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "repo": {
                            "type": "string",
                            "example": "https://github.com/render-examples/flask-hello-world"
                          },
                          "rootDir": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "suspended": {
                            "type": "string",
                            "enum": [
                              "suspended",
                              "not_suspended"
                            ]
                          },
                          "suspenders": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "admin",
                                "billing",
                                "user",
                                "parent_service",
                                "unknown"
                              ]
                            }
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "static_site",
                              "web_service",
                              "private_service",
                              "background_worker",
                              "cron_job"
                            ]
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "serviceDetails": {
                            "oneOf": [
                              {
                                "type": "object",
                                "required": [
                                  "buildCommand",
                                  "publishPath",
                                  "pullRequestPreviewsEnabled",
                                  "url",
                                  "buildPlan"
                                ],
                                "properties": {
                                  "buildCommand": {
                                    "type": "string"
                                  },
                                  "parentServer": {
                                    "required": [
                                      "id",
                                      "name"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "publishPath": {
                                    "type": "string"
                                  },
                                  "pullRequestPreviewsEnabled": {
                                    "type": "string",
                                    "enum": [
                                      "yes",
                                      "no"
                                    ]
                                  },
                                  "url": {
                                    "type": "string"
                                  },
                                  "buildPlan": {
                                    "type": "string",
                                    "enum": [
                                      "starter",
                                      "performance"
                                    ],
                                    "default": "starter"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "env",
                                  "envSpecificDetails",
                                  "plan",
                                  "region",
                                  "pullRequestPreviewsEnabled",
                                  "numInstances",
                                  "buildPlan",
                                  "healthCheckPath",
                                  "openPorts",
                                  "url"
                                ],
                                "properties": {
                                  "autoscaling": {
                                    "type": "object",
                                    "required": [
                                      "enabled",
                                      "min",
                                      "max",
                                      "criteria"
                                    ],
                                    "properties": {
                                      "enabled": {
                                        "type": "boolean",
                                        "default": false
                                      },
                                      "min": {
                                        "type": "integer",
                                        "description": "The minimum number of instances for the service"
                                      },
                                      "max": {
                                        "type": "integer",
                                        "description": "The maximum number of instances for the service"
                                      },
                                      "criteria": {
                                        "type": "object",
                                        "required": [
                                          "cpu",
                                          "memory"
                                        ],
                                        "properties": {
                                          "cpu": {
                                            "type": "object",
                                            "required": [
                                              "enabled",
                                              "percentage"
                                            ],
                                            "properties": {
                                              "enabled": {
                                                "type": "boolean",
                                                "default": false
                                              },
                                              "percentage": {
                                                "type": "integer",
                                                "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                              }
                                            }
                                          },
                                          "memory": {
                                            "type": "object",
                                            "required": [
                                              "enabled",
                                              "percentage"
                                            ],
                                            "properties": {
                                              "enabled": {
                                                "type": "boolean",
                                                "default": false
                                              },
                                              "percentage": {
                                                "type": "integer",
                                                "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "disk": {
                                    "type": "object",
                                    "required": [
                                      "id",
                                      "name",
                                      "sizeGB",
                                      "mountPath"
                                    ],
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "sizeGB": {
                                        "type": "integer"
                                      },
                                      "mountPath": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "env": {
                                    "type": "string",
                                    "enum": [
                                      "docker",
                                      "elixir",
                                      "go",
                                      "node",
                                      "python",
                                      "ruby",
                                      "rust",
                                      "image"
                                    ],
                                    "description": "Environment (runtime)"
                                  },
                                  "envSpecificDetails": {
                                    "oneOf": [
                                      {
                                        "type": "object",
                                        "required": [
                                          "dockerCommand",
                                          "dockerContext",
                                          "dockerfilePath"
                                        ],
                                        "properties": {
                                          "dockerCommand": {
                                            "type": "string"
                                          },
                                          "dockerContext": {
                                            "type": "string"
                                          },
                                          "dockerfilePath": {
                                            "type": "string"
                                          },
                                          "preDeployCommand": {
                                            "type": "string"
                                          },
                                          "registryCredential": {
                                            "type": "object",
                                            "required": [
                                              "id",
                                              "name",
                                              "username",
                                              "registry"
                                            ],
                                            "properties": {
                                              "id": {
                                                "type": "string",
                                                "description": "Unique identifier for this credential"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "Descriptive name for this credential"
                                              },
                                              "registry": {
                                                "type": "string",
                                                "enum": [
                                                  "GITHUB",
                                                  "GITLAB",
                                                  "DOCKER"
                                                ],
                                                "description": "The registry to use this credential with"
                                              },
                                              "username": {
                                                "type": "string",
                                                "description": "The username associated with the credential"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "buildCommand",
                                          "startCommand"
                                        ],
                                        "properties": {
                                          "buildCommand": {
                                            "type": "string"
                                          },
                                          "startCommand": {
                                            "type": "string"
                                          },
                                          "preDeployCommand": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "healthCheckPath": {
                                    "type": "string"
                                  },
                                  "numInstances": {
                                    "type": "integer",
                                    "description": "For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."
                                  },
                                  "openPorts": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "port",
                                        "protocol"
                                      ],
                                      "properties": {
                                        "port": {
                                          "type": "integer",
                                          "example": 10000
                                        },
                                        "protocol": {
                                          "type": "string",
                                          "enum": [
                                            "TCP",
                                            "UDP"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "parentServer": {
                                    "required": [
                                      "id",
                                      "name"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "plan": {
                                    "type": "string",
                                    "enum": [
                                      "starter",
                                      "starter_plus",
                                      "standard",
                                      "standard_plus",
                                      "pro",
                                      "pro_plus",
                                      "pro_max",
                                      "pro_ultra",
                                      "free",
                                      "custom"
                                    ],
                                    "example": "starter",
                                    "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                                  },
                                  "pullRequestPreviewsEnabled": {
                                    "type": "string",
                                    "enum": [
                                      "yes",
                                      "no"
                                    ]
                                  },
                                  "region": {
                                    "type": "string",
                                    "enum": [
                                      "frankfurt",
                                      "oregon",
                                      "ohio",
                                      "singapore"
                                    ],
                                    "default": "oregon",
                                    "description": "Defaults to \"oregon\""
                                  },
                                  "url": {
                                    "type": "string"
                                  },
                                  "buildPlan": {
                                    "type": "string",
                                    "enum": [
                                      "starter",
                                      "performance"
                                    ],
                                    "default": "starter"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "env",
                                  "envSpecificDetails",
                                  "plan",
                                  "region",
                                  "pullRequestPreviewsEnabled",
                                  "numInstances",
                                  "buildPlan",
                                  "openPorts",
                                  "url"
                                ],
                                "properties": {
                                  "autoscaling": {
                                    "type": "object",
                                    "required": [
                                      "enabled",
                                      "min",
                                      "max",
                                      "criteria"
                                    ],
                                    "properties": {
                                      "enabled": {
                                        "type": "boolean",
                                        "default": false
                                      },
                                      "min": {
                                        "type": "integer",
                                        "description": "The minimum number of instances for the service"
                                      },
                                      "max": {
                                        "type": "integer",
                                        "description": "The maximum number of instances for the service"
                                      },
                                      "criteria": {
                                        "type": "object",
                                        "required": [
                                          "cpu",
                                          "memory"
                                        ],
                                        "properties": {
                                          "cpu": {
                                            "type": "object",
                                            "required": [
                                              "enabled",
                                              "percentage"
                                            ],
                                            "properties": {
                                              "enabled": {
                                                "type": "boolean",
                                                "default": false
                                              },
                                              "percentage": {
                                                "type": "integer",
                                                "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                              }
                                            }
                                          },
                                          "memory": {
                                            "type": "object",
                                            "required": [
                                              "enabled",
                                              "percentage"
                                            ],
                                            "properties": {
                                              "enabled": {
                                                "type": "boolean",
                                                "default": false
                                              },
                                              "percentage": {
                                                "type": "integer",
                                                "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "disk": {
                                    "type": "object",
                                    "required": [
                                      "id",
                                      "name",
                                      "sizeGB",
                                      "mountPath"
                                    ],
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "sizeGB": {
                                        "type": "integer"
                                      },
                                      "mountPath": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "env": {
                                    "type": "string",
                                    "enum": [
                                      "docker",
                                      "elixir",
                                      "go",
                                      "node",
                                      "python",
                                      "ruby",
                                      "rust",
                                      "image"
                                    ],
                                    "description": "Environment (runtime)"
                                  },
                                  "envSpecificDetails": {
                                    "oneOf": [
                                      {
                                        "type": "object",
                                        "required": [
                                          "dockerCommand",
                                          "dockerContext",
                                          "dockerfilePath"
                                        ],
                                        "properties": {
                                          "dockerCommand": {
                                            "type": "string"
                                          },
                                          "dockerContext": {
                                            "type": "string"
                                          },
                                          "dockerfilePath": {
                                            "type": "string"
                                          },
                                          "preDeployCommand": {
                                            "type": "string"
                                          },
                                          "registryCredential": {
                                            "type": "object",
                                            "required": [
                                              "id",
                                              "name",
                                              "username",
                                              "registry"
                                            ],
                                            "properties": {
                                              "id": {
                                                "type": "string",
                                                "description": "Unique identifier for this credential"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "Descriptive name for this credential"
                                              },
                                              "registry": {
                                                "type": "string",
                                                "enum": [
                                                  "GITHUB",
                                                  "GITLAB",
                                                  "DOCKER"
                                                ],
                                                "description": "The registry to use this credential with"
                                              },
                                              "username": {
                                                "type": "string",
                                                "description": "The username associated with the credential"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "buildCommand",
                                          "startCommand"
                                        ],
                                        "properties": {
                                          "buildCommand": {
                                            "type": "string"
                                          },
                                          "startCommand": {
                                            "type": "string"
                                          },
                                          "preDeployCommand": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "numInstances": {
                                    "type": "integer",
                                    "description": "For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."
                                  },
                                  "openPorts": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "port",
                                        "protocol"
                                      ],
                                      "properties": {
                                        "port": {
                                          "type": "integer",
                                          "example": 10000
                                        },
                                        "protocol": {
                                          "type": "string",
                                          "enum": [
                                            "TCP",
                                            "UDP"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "parentServer": {
                                    "required": [
                                      "id",
                                      "name"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "plan": {
                                    "type": "string",
                                    "enum": [
                                      "starter",
                                      "starter_plus",
                                      "standard",
                                      "standard_plus",
                                      "pro",
                                      "pro_plus",
                                      "pro_max",
                                      "pro_ultra",
                                      "free",
                                      "custom"
                                    ],
                                    "example": "starter",
                                    "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                                  },
                                  "pullRequestPreviewsEnabled": {
                                    "type": "string",
                                    "enum": [
                                      "yes",
                                      "no"
                                    ]
                                  },
                                  "region": {
                                    "type": "string",
                                    "enum": [
                                      "frankfurt",
                                      "oregon",
                                      "ohio",
                                      "singapore"
                                    ],
                                    "default": "oregon",
                                    "description": "Defaults to \"oregon\""
                                  },
                                  "url": {
                                    "type": "string"
                                  },
                                  "buildPlan": {
                                    "type": "string",
                                    "enum": [
                                      "starter",
                                      "performance"
                                    ],
                                    "default": "starter"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "env",
                                  "envSpecificDetails",
                                  "plan",
                                  "region",
                                  "pullRequestPreviewsEnabled",
                                  "numInstances",
                                  "buildPlan"
                                ],
                                "properties": {
                                  "autoscaling": {
                                    "type": "object",
                                    "required": [
                                      "enabled",
                                      "min",
                                      "max",
                                      "criteria"
                                    ],
                                    "properties": {
                                      "enabled": {
                                        "type": "boolean",
                                        "default": false
                                      },
                                      "min": {
                                        "type": "integer",
                                        "description": "The minimum number of instances for the service"
                                      },
                                      "max": {
                                        "type": "integer",
                                        "description": "The maximum number of instances for the service"
                                      },
                                      "criteria": {
                                        "type": "object",
                                        "required": [
                                          "cpu",
                                          "memory"
                                        ],
                                        "properties": {
                                          "cpu": {
                                            "type": "object",
                                            "required": [
                                              "enabled",
                                              "percentage"
                                            ],
                                            "properties": {
                                              "enabled": {
                                                "type": "boolean",
                                                "default": false
                                              },
                                              "percentage": {
                                                "type": "integer",
                                                "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                              }
                                            }
                                          },
                                          "memory": {
                                            "type": "object",
                                            "required": [
                                              "enabled",
                                              "percentage"
                                            ],
                                            "properties": {
                                              "enabled": {
                                                "type": "boolean",
                                                "default": false
                                              },
                                              "percentage": {
                                                "type": "integer",
                                                "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "disk": {
                                    "type": "object",
                                    "required": [
                                      "id",
                                      "name",
                                      "sizeGB",
                                      "mountPath"
                                    ],
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "sizeGB": {
                                        "type": "integer"
                                      },
                                      "mountPath": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "env": {
                                    "type": "string",
                                    "enum": [
                                      "docker",
                                      "elixir",
                                      "go",
                                      "node",
                                      "python",
                                      "ruby",
                                      "rust",
                                      "image"
                                    ],
                                    "description": "Environment (runtime)"
                                  },
                                  "envSpecificDetails": {
                                    "oneOf": [
                                      {
                                        "type": "object",
                                        "required": [
                                          "dockerCommand",
                                          "dockerContext",
                                          "dockerfilePath"
                                        ],
                                        "properties": {
                                          "dockerCommand": {
                                            "type": "string"
                                          },
                                          "dockerContext": {
                                            "type": "string"
                                          },
                                          "dockerfilePath": {
                                            "type": "string"
                                          },
                                          "preDeployCommand": {
                                            "type": "string"
                                          },
                                          "registryCredential": {
                                            "type": "object",
                                            "required": [
                                              "id",
                                              "name",
                                              "username",
                                              "registry"
                                            ],
                                            "properties": {
                                              "id": {
                                                "type": "string",
                                                "description": "Unique identifier for this credential"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "Descriptive name for this credential"
                                              },
                                              "registry": {
                                                "type": "string",
                                                "enum": [
                                                  "GITHUB",
                                                  "GITLAB",
                                                  "DOCKER"
                                                ],
                                                "description": "The registry to use this credential with"
                                              },
                                              "username": {
                                                "type": "string",
                                                "description": "The username associated with the credential"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "buildCommand",
                                          "startCommand"
                                        ],
                                        "properties": {
                                          "buildCommand": {
                                            "type": "string"
                                          },
                                          "startCommand": {
                                            "type": "string"
                                          },
                                          "preDeployCommand": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "numInstances": {
                                    "type": "integer",
                                    "description": "For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."
                                  },
                                  "parentServer": {
                                    "required": [
                                      "id",
                                      "name"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "plan": {
                                    "type": "string",
                                    "enum": [
                                      "starter",
                                      "starter_plus",
                                      "standard",
                                      "standard_plus",
                                      "pro",
                                      "pro_plus",
                                      "pro_max",
                                      "pro_ultra",
                                      "free",
                                      "custom"
                                    ],
                                    "example": "starter",
                                    "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                                  },
                                  "pullRequestPreviewsEnabled": {
                                    "type": "string",
                                    "enum": [
                                      "yes",
                                      "no"
                                    ]
                                  },
                                  "region": {
                                    "type": "string",
                                    "enum": [
                                      "frankfurt",
                                      "oregon",
                                      "ohio",
                                      "singapore"
                                    ],
                                    "default": "oregon",
                                    "description": "Defaults to \"oregon\""
                                  },
                                  "buildPlan": {
                                    "type": "string",
                                    "enum": [
                                      "starter",
                                      "performance"
                                    ],
                                    "default": "starter"
                                  }
                                }
                              },
                              {
                                "required": [
                                  "env",
                                  "envSpecificDetails",
                                  "plan",
                                  "region",
                                  "schedule",
                                  "buildPlan"
                                ],
                                "type": "object",
                                "properties": {
                                  "env": {
                                    "type": "string",
                                    "enum": [
                                      "docker",
                                      "elixir",
                                      "go",
                                      "node",
                                      "python",
                                      "ruby",
                                      "rust",
                                      "image"
                                    ],
                                    "description": "Environment (runtime)"
                                  },
                                  "envSpecificDetails": {
                                    "oneOf": [
                                      {
                                        "type": "object",
                                        "required": [
                                          "dockerCommand",
                                          "dockerContext",
                                          "dockerfilePath"
                                        ],
                                        "properties": {
                                          "dockerCommand": {
                                            "type": "string"
                                          },
                                          "dockerContext": {
                                            "type": "string"
                                          },
                                          "dockerfilePath": {
                                            "type": "string"
                                          },
                                          "preDeployCommand": {
                                            "type": "string"
                                          },
                                          "registryCredential": {
                                            "type": "object",
                                            "required": [
                                              "id",
                                              "name",
                                              "username",
                                              "registry"
                                            ],
                                            "properties": {
                                              "id": {
                                                "type": "string",
                                                "description": "Unique identifier for this credential"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "Descriptive name for this credential"
                                              },
                                              "registry": {
                                                "type": "string",
                                                "enum": [
                                                  "GITHUB",
                                                  "GITLAB",
                                                  "DOCKER"
                                                ],
                                                "description": "The registry to use this credential with"
                                              },
                                              "username": {
                                                "type": "string",
                                                "description": "The username associated with the credential"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "buildCommand",
                                          "startCommand"
                                        ],
                                        "properties": {
                                          "buildCommand": {
                                            "type": "string"
                                          },
                                          "startCommand": {
                                            "type": "string"
                                          },
                                          "preDeployCommand": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "lastSuccessfulRunAt": {
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "plan": {
                                    "type": "string",
                                    "enum": [
                                      "starter",
                                      "starter_plus",
                                      "standard",
                                      "standard_plus",
                                      "pro",
                                      "pro_plus",
                                      "pro_max",
                                      "pro_ultra",
                                      "free",
                                      "custom"
                                    ],
                                    "example": "starter",
                                    "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                                  },
                                  "region": {
                                    "type": "string",
                                    "enum": [
                                      "frankfurt",
                                      "oregon",
                                      "ohio",
                                      "singapore"
                                    ],
                                    "default": "oregon",
                                    "description": "Defaults to \"oregon\""
                                  },
                                  "schedule": {
                                    "type": "string"
                                  },
                                  "buildPlan": {
                                    "type": "string",
                                    "enum": [
                                      "starter",
                                      "performance"
                                    ],
                                    "default": "starter"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "cursor": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create service",
        "operationId": "create-service",
        "tags": [
          "Services"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "type",
                  "name",
                  "ownerId"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "static_site",
                      "web_service",
                      "private_service",
                      "background_worker",
                      "cron_job"
                    ]
                  },
                  "name": {
                    "type": "string"
                  },
                  "ownerId": {
                    "type": "string"
                  },
                  "repo": {
                    "type": "string",
                    "example": "https://github.com/render-examples/flask-hello-world",
                    "description": "Do not include the branch in the repo string. You can instead supply a 'branch' parameter."
                  },
                  "autoDeploy": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ],
                    "default": "yes",
                    "description": "Defaults to \"yes\""
                  },
                  "branch": {
                    "type": "string",
                    "description": "If left empty, this will fall back to the default branch of the repository"
                  },
                  "image": {
                    "type": "object",
                    "required": [
                      "imagePath",
                      "ownerId"
                    ],
                    "properties": {
                      "ownerId": {
                        "type": "string",
                        "description": "The ID of the owner for this image. This should match the owner of the service as well as the owner of any specified registry credential."
                      },
                      "registryCredentialId": {
                        "type": "string",
                        "description": "Optional reference to the registry credential passed to the image repository to retrieve this image."
                      },
                      "imagePath": {
                        "type": "string",
                        "description": "Path to the image used for this server (e.g docker.io/library/nginx:latest)."
                      }
                    }
                  },
                  "buildFilter": {
                    "type": "object",
                    "required": [
                      "paths",
                      "ignoredPaths"
                    ],
                    "properties": {
                      "paths": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "ignoredPaths": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "rootDir": {
                    "type": "string"
                  },
                  "envVars": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "key",
                            "value"
                          ],
                          "properties": {
                            "key": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "key",
                            "generateValue"
                          ],
                          "properties": {
                            "key": {
                              "type": "string"
                            },
                            "generateValue": {
                              "type": "boolean"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "secretFiles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "content"
                      ],
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "content": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "serviceDetails": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "buildCommand": {
                            "type": "string"
                          },
                          "headers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "path",
                                "name",
                                "value"
                              ],
                              "properties": {
                                "path": {
                                  "type": "string",
                                  "description": "The request path to add the header to. Wildcards will cause headers to be applied to all matching paths.",
                                  "example": "/static/*"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Header name",
                                  "example": "Cache-Control"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Header value",
                                  "example": "public, max-age=604800"
                                }
                              }
                            }
                          },
                          "publishPath": {
                            "type": "string",
                            "description": "Defaults to \"public\""
                          },
                          "pullRequestPreviewsEnabled": {
                            "type": "string",
                            "enum": [
                              "yes",
                              "no"
                            ],
                            "default": "no",
                            "description": "Defaults to \"no\""
                          },
                          "routes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "source",
                                "destination"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "redirect",
                                    "rewrite"
                                  ]
                                },
                                "source": {
                                  "type": "string",
                                  "example": "/:bar/foo"
                                },
                                "destination": {
                                  "type": "string",
                                  "example": "/foo/:bar"
                                },
                                "priority": {
                                  "type": "integer",
                                  "description": "Redirect and Rewrite Rules are applied in priority order starting at 0. Defaults to last in the priority list."
                                }
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "env"
                        ],
                        "properties": {
                          "autoscaling": {
                            "type": "object",
                            "required": [
                              "enabled",
                              "min",
                              "max",
                              "criteria"
                            ],
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "default": false
                              },
                              "min": {
                                "type": "integer",
                                "description": "The minimum number of instances for the service"
                              },
                              "max": {
                                "type": "integer",
                                "description": "The maximum number of instances for the service"
                              },
                              "criteria": {
                                "type": "object",
                                "required": [
                                  "cpu",
                                  "memory"
                                ],
                                "properties": {
                                  "cpu": {
                                    "type": "object",
                                    "required": [
                                      "enabled",
                                      "percentage"
                                    ],
                                    "properties": {
                                      "enabled": {
                                        "type": "boolean",
                                        "default": false
                                      },
                                      "percentage": {
                                        "type": "integer",
                                        "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                      }
                                    }
                                  },
                                  "memory": {
                                    "type": "object",
                                    "required": [
                                      "enabled",
                                      "percentage"
                                    ],
                                    "properties": {
                                      "enabled": {
                                        "type": "boolean",
                                        "default": false
                                      },
                                      "percentage": {
                                        "type": "integer",
                                        "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "disk": {
                            "type": "object",
                            "required": [
                              "name",
                              "mountPath"
                            ],
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "mountPath": {
                                "type": "string"
                              },
                              "sizeGB": {
                                "type": "integer",
                                "minimum": 1,
                                "description": "Defaults to 1"
                              }
                            }
                          },
                          "env": {
                            "type": "string",
                            "enum": [
                              "docker",
                              "elixir",
                              "go",
                              "node",
                              "python",
                              "ruby",
                              "rust",
                              "image"
                            ],
                            "description": "Environment (runtime)"
                          },
                          "envSpecificDetails": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "dockerCommand": {
                                    "type": "string"
                                  },
                                  "dockerContext": {
                                    "type": "string"
                                  },
                                  "dockerfilePath": {
                                    "type": "string",
                                    "description": "Defaults to \"./Dockerfile\""
                                  },
                                  "registryCredentialId": {
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "buildCommand",
                                  "startCommand"
                                ],
                                "properties": {
                                  "buildCommand": {
                                    "type": "string"
                                  },
                                  "startCommand": {
                                    "type": "string"
                                  }
                                },
                                "description": "Fields for native environment (runtime) services"
                              }
                            ]
                          },
                          "healthCheckPath": {
                            "type": "string"
                          },
                          "numInstances": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "Defaults to 1"
                          },
                          "plan": {
                            "type": "string",
                            "enum": [
                              "starter",
                              "standard",
                              "pro",
                              "pro_plus",
                              "pro_max",
                              "pro_ultra"
                            ],
                            "default": "starter",
                            "description": "Defaults to \"starter\""
                          },
                          "preDeployCommand": {
                            "type": "string"
                          },
                          "pullRequestPreviewsEnabled": {
                            "type": "string",
                            "enum": [
                              "yes",
                              "no"
                            ],
                            "default": "no",
                            "description": "Defaults to \"no\""
                          },
                          "region": {
                            "type": "string",
                            "enum": [
                              "frankfurt",
                              "oregon",
                              "ohio",
                              "singapore"
                            ],
                            "default": "oregon",
                            "description": "Defaults to \"oregon\""
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "env"
                        ],
                        "properties": {
                          "autoscaling": {
                            "type": "object",
                            "required": [
                              "enabled",
                              "min",
                              "max",
                              "criteria"
                            ],
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "default": false
                              },
                              "min": {
                                "type": "integer",
                                "description": "The minimum number of instances for the service"
                              },
                              "max": {
                                "type": "integer",
                                "description": "The maximum number of instances for the service"
                              },
                              "criteria": {
                                "type": "object",
                                "required": [
                                  "cpu",
                                  "memory"
                                ],
                                "properties": {
                                  "cpu": {
                                    "type": "object",
                                    "required": [
                                      "enabled",
                                      "percentage"
                                    ],
                                    "properties": {
                                      "enabled": {
                                        "type": "boolean",
                                        "default": false
                                      },
                                      "percentage": {
                                        "type": "integer",
                                        "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                      }
                                    }
                                  },
                                  "memory": {
                                    "type": "object",
                                    "required": [
                                      "enabled",
                                      "percentage"
                                    ],
                                    "properties": {
                                      "enabled": {
                                        "type": "boolean",
                                        "default": false
                                      },
                                      "percentage": {
                                        "type": "integer",
                                        "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "disk": {
                            "type": "object",
                            "required": [
                              "name",
                              "mountPath"
                            ],
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "mountPath": {
                                "type": "string"
                              },
                              "sizeGB": {
                                "type": "integer",
                                "minimum": 1,
                                "description": "Defaults to 1"
                              }
                            }
                          },
                          "env": {
                            "type": "string",
                            "enum": [
                              "docker",
                              "elixir",
                              "go",
                              "node",
                              "python",
                              "ruby",
                              "rust",
                              "image"
                            ],
                            "description": "Environment (runtime)"
                          },
                          "envSpecificDetails": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "dockerCommand": {
                                    "type": "string"
                                  },
                                  "dockerContext": {
                                    "type": "string"
                                  },
                                  "dockerfilePath": {
                                    "type": "string",
                                    "description": "Defaults to \"./Dockerfile\""
                                  },
                                  "registryCredentialId": {
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "buildCommand",
                                  "startCommand"
                                ],
                                "properties": {
                                  "buildCommand": {
                                    "type": "string"
                                  },
                                  "startCommand": {
                                    "type": "string"
                                  }
                                },
                                "description": "Fields for native environment (runtime) services"
                              }
                            ]
                          },
                          "numInstances": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "description": "Defaults to 1"
                          },
                          "plan": {
                            "type": "string",
                            "enum": [
                              "starter",
                              "standard",
                              "pro",
                              "pro_plus",
                              "pro_max",
                              "pro_ultra"
                            ],
                            "default": "starter",
                            "description": "Defaults to \"starter\""
                          },
                          "preDeployCommand": {
                            "type": "string"
                          },
                          "pullRequestPreviewsEnabled": {
                            "type": "string",
                            "enum": [
                              "yes",
                              "no"
                            ],
                            "default": "no",
                            "description": "Defaults to \"no\""
                          },
                          "region": {
                            "type": "string",
                            "enum": [
                              "frankfurt",
                              "oregon",
                              "ohio",
                              "singapore"
                            ],
                            "default": "oregon",
                            "description": "Defaults to \"oregon\""
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "env"
                        ],
                        "properties": {
                          "autoscaling": {
                            "type": "object",
                            "required": [
                              "enabled",
                              "min",
                              "max",
                              "criteria"
                            ],
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "default": false
                              },
                              "min": {
                                "type": "integer",
                                "description": "The minimum number of instances for the service"
                              },
                              "max": {
                                "type": "integer",
                                "description": "The maximum number of instances for the service"
                              },
                              "criteria": {
                                "type": "object",
                                "required": [
                                  "cpu",
                                  "memory"
                                ],
                                "properties": {
                                  "cpu": {
                                    "type": "object",
                                    "required": [
                                      "enabled",
                                      "percentage"
                                    ],
                                    "properties": {
                                      "enabled": {
                                        "type": "boolean",
                                        "default": false
                                      },
                                      "percentage": {
                                        "type": "integer",
                                        "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                      }
                                    }
                                  },
                                  "memory": {
                                    "type": "object",
                                    "required": [
                                      "enabled",
                                      "percentage"
                                    ],
                                    "properties": {
                                      "enabled": {
                                        "type": "boolean",
                                        "default": false
                                      },
                                      "percentage": {
                                        "type": "integer",
                                        "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "disk": {
                            "type": "object",
                            "required": [
                              "name",
                              "mountPath"
                            ],
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "mountPath": {
                                "type": "string"
                              },
                              "sizeGB": {
                                "type": "integer",
                                "minimum": 1,
                                "description": "Defaults to 1"
                              }
                            }
                          },
                          "env": {
                            "type": "string",
                            "enum": [
                              "docker",
                              "elixir",
                              "go",
                              "node",
                              "python",
                              "ruby",
                              "rust",
                              "image"
                            ],
                            "description": "Environment (runtime)"
                          },
                          "envSpecificDetails": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "dockerCommand": {
                                    "type": "string"
                                  },
                                  "dockerContext": {
                                    "type": "string"
                                  },
                                  "dockerfilePath": {
                                    "type": "string",
                                    "description": "Defaults to \"./Dockerfile\""
                                  },
                                  "registryCredentialId": {
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "buildCommand",
                                  "startCommand"
                                ],
                                "properties": {
                                  "buildCommand": {
                                    "type": "string"
                                  },
                                  "startCommand": {
                                    "type": "string"
                                  }
                                },
                                "description": "Fields for native environment (runtime) services"
                              }
                            ]
                          },
                          "numInstances": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "description": "Defaults to 1"
                          },
                          "plan": {
                            "type": "string",
                            "enum": [
                              "starter",
                              "standard",
                              "pro",
                              "pro_plus",
                              "pro_max",
                              "pro_ultra"
                            ],
                            "default": "starter",
                            "description": "Defaults to \"starter\""
                          },
                          "preDeployCommand": {
                            "type": "string"
                          },
                          "pullRequestPreviewsEnabled": {
                            "type": "string",
                            "enum": [
                              "yes",
                              "no"
                            ],
                            "default": "no",
                            "description": "Defaults to \"no\""
                          },
                          "region": {
                            "type": "string",
                            "enum": [
                              "frankfurt",
                              "oregon",
                              "ohio",
                              "singapore"
                            ],
                            "default": "oregon",
                            "description": "Defaults to \"oregon\""
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "env",
                          "schedule"
                        ],
                        "properties": {
                          "env": {
                            "type": "string",
                            "enum": [
                              "docker",
                              "elixir",
                              "go",
                              "node",
                              "python",
                              "ruby",
                              "rust",
                              "image"
                            ],
                            "description": "Environment (runtime)"
                          },
                          "envSpecificDetails": {
                            "oneOf": [
                              {
                                "type": "object",
                                "required": [
                                  "dockerCommand",
                                  "dockerContext",
                                  "dockerfilePath"
                                ],
                                "properties": {
                                  "dockerCommand": {
                                    "type": "string"
                                  },
                                  "dockerContext": {
                                    "type": "string"
                                  },
                                  "dockerfilePath": {
                                    "type": "string"
                                  },
                                  "preDeployCommand": {
                                    "type": "string"
                                  },
                                  "registryCredential": {
                                    "type": "object",
                                    "required": [
                                      "id",
                                      "name",
                                      "username",
                                      "registry"
                                    ],
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "Unique identifier for this credential"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Descriptive name for this credential"
                                      },
                                      "registry": {
                                        "type": "string",
                                        "enum": [
                                          "GITHUB",
                                          "GITLAB",
                                          "DOCKER"
                                        ],
                                        "description": "The registry to use this credential with"
                                      },
                                      "username": {
                                        "type": "string",
                                        "description": "The username associated with the credential"
                                      }
                                    }
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "buildCommand",
                                  "startCommand"
                                ],
                                "properties": {
                                  "buildCommand": {
                                    "type": "string"
                                  },
                                  "startCommand": {
                                    "type": "string"
                                  },
                                  "preDeployCommand": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          },
                          "plan": {
                            "type": "string",
                            "enum": [
                              "starter",
                              "standard",
                              "pro",
                              "pro_plus",
                              "pro_max",
                              "pro_ultra"
                            ],
                            "default": "starter",
                            "description": "Defaults to \"starter\""
                          },
                          "region": {
                            "type": "string",
                            "enum": [
                              "frankfurt",
                              "oregon",
                              "ohio",
                              "singapore"
                            ],
                            "default": "oregon",
                            "description": "Defaults to \"oregon\""
                          },
                          "schedule": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "service": {
                      "type": "object",
                      "required": [
                        "id",
                        "name",
                        "ownerId",
                        "type",
                        "createdAt",
                        "updatedAt",
                        "suspended",
                        "suspenders",
                        "autoDeploy",
                        "notifyOnFail",
                        "slug",
                        "serviceDetails",
                        "rootDir"
                      ],
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "autoDeploy": {
                          "type": "string",
                          "enum": [
                            "yes",
                            "no"
                          ]
                        },
                        "branch": {
                          "type": "string"
                        },
                        "buildFilter": {
                          "type": "object",
                          "required": [
                            "paths",
                            "ignoredPaths"
                          ],
                          "properties": {
                            "paths": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "ignoredPaths": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "environmentId": {
                          "type": "string"
                        },
                        "imagePath": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "notifyOnFail": {
                          "type": "string",
                          "enum": [
                            "default",
                            "notify",
                            "ignore"
                          ]
                        },
                        "ownerId": {
                          "type": "string"
                        },
                        "registryCredential": {
                          "type": "object",
                          "required": [
                            "id",
                            "name"
                          ],
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "repo": {
                          "type": "string",
                          "example": "https://github.com/render-examples/flask-hello-world"
                        },
                        "rootDir": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "suspended": {
                          "type": "string",
                          "enum": [
                            "suspended",
                            "not_suspended"
                          ]
                        },
                        "suspenders": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "admin",
                              "billing",
                              "user",
                              "parent_service",
                              "unknown"
                            ]
                          }
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "static_site",
                            "web_service",
                            "private_service",
                            "background_worker",
                            "cron_job"
                          ]
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "serviceDetails": {
                          "oneOf": [
                            {
                              "type": "object",
                              "required": [
                                "buildCommand",
                                "publishPath",
                                "pullRequestPreviewsEnabled",
                                "url",
                                "buildPlan"
                              ],
                              "properties": {
                                "buildCommand": {
                                  "type": "string"
                                },
                                "parentServer": {
                                  "required": [
                                    "id",
                                    "name"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "publishPath": {
                                  "type": "string"
                                },
                                "pullRequestPreviewsEnabled": {
                                  "type": "string",
                                  "enum": [
                                    "yes",
                                    "no"
                                  ]
                                },
                                "url": {
                                  "type": "string"
                                },
                                "buildPlan": {
                                  "type": "string",
                                  "enum": [
                                    "starter",
                                    "performance"
                                  ],
                                  "default": "starter"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "env",
                                "envSpecificDetails",
                                "plan",
                                "region",
                                "pullRequestPreviewsEnabled",
                                "numInstances",
                                "buildPlan",
                                "healthCheckPath",
                                "openPorts",
                                "url"
                              ],
                              "properties": {
                                "autoscaling": {
                                  "type": "object",
                                  "required": [
                                    "enabled",
                                    "min",
                                    "max",
                                    "criteria"
                                  ],
                                  "properties": {
                                    "enabled": {
                                      "type": "boolean",
                                      "default": false
                                    },
                                    "min": {
                                      "type": "integer",
                                      "description": "The minimum number of instances for the service"
                                    },
                                    "max": {
                                      "type": "integer",
                                      "description": "The maximum number of instances for the service"
                                    },
                                    "criteria": {
                                      "type": "object",
                                      "required": [
                                        "cpu",
                                        "memory"
                                      ],
                                      "properties": {
                                        "cpu": {
                                          "type": "object",
                                          "required": [
                                            "enabled",
                                            "percentage"
                                          ],
                                          "properties": {
                                            "enabled": {
                                              "type": "boolean",
                                              "default": false
                                            },
                                            "percentage": {
                                              "type": "integer",
                                              "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                            }
                                          }
                                        },
                                        "memory": {
                                          "type": "object",
                                          "required": [
                                            "enabled",
                                            "percentage"
                                          ],
                                          "properties": {
                                            "enabled": {
                                              "type": "boolean",
                                              "default": false
                                            },
                                            "percentage": {
                                              "type": "integer",
                                              "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "disk": {
                                  "type": "object",
                                  "required": [
                                    "id",
                                    "name",
                                    "sizeGB",
                                    "mountPath"
                                  ],
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "sizeGB": {
                                      "type": "integer"
                                    },
                                    "mountPath": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "env": {
                                  "type": "string",
                                  "enum": [
                                    "docker",
                                    "elixir",
                                    "go",
                                    "node",
                                    "python",
                                    "ruby",
                                    "rust",
                                    "image"
                                  ],
                                  "description": "Environment (runtime)"
                                },
                                "envSpecificDetails": {
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "dockerCommand",
                                        "dockerContext",
                                        "dockerfilePath"
                                      ],
                                      "properties": {
                                        "dockerCommand": {
                                          "type": "string"
                                        },
                                        "dockerContext": {
                                          "type": "string"
                                        },
                                        "dockerfilePath": {
                                          "type": "string"
                                        },
                                        "preDeployCommand": {
                                          "type": "string"
                                        },
                                        "registryCredential": {
                                          "type": "object",
                                          "required": [
                                            "id",
                                            "name",
                                            "username",
                                            "registry"
                                          ],
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "Unique identifier for this credential"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Descriptive name for this credential"
                                            },
                                            "registry": {
                                              "type": "string",
                                              "enum": [
                                                "GITHUB",
                                                "GITLAB",
                                                "DOCKER"
                                              ],
                                              "description": "The registry to use this credential with"
                                            },
                                            "username": {
                                              "type": "string",
                                              "description": "The username associated with the credential"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "buildCommand",
                                        "startCommand"
                                      ],
                                      "properties": {
                                        "buildCommand": {
                                          "type": "string"
                                        },
                                        "startCommand": {
                                          "type": "string"
                                        },
                                        "preDeployCommand": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "healthCheckPath": {
                                  "type": "string"
                                },
                                "numInstances": {
                                  "type": "integer",
                                  "description": "For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."
                                },
                                "openPorts": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "port",
                                      "protocol"
                                    ],
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "example": 10000
                                      },
                                      "protocol": {
                                        "type": "string",
                                        "enum": [
                                          "TCP",
                                          "UDP"
                                        ]
                                      }
                                    }
                                  }
                                },
                                "parentServer": {
                                  "required": [
                                    "id",
                                    "name"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "plan": {
                                  "type": "string",
                                  "enum": [
                                    "starter",
                                    "starter_plus",
                                    "standard",
                                    "standard_plus",
                                    "pro",
                                    "pro_plus",
                                    "pro_max",
                                    "pro_ultra",
                                    "free",
                                    "custom"
                                  ],
                                  "example": "starter",
                                  "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                                },
                                "pullRequestPreviewsEnabled": {
                                  "type": "string",
                                  "enum": [
                                    "yes",
                                    "no"
                                  ]
                                },
                                "region": {
                                  "type": "string",
                                  "enum": [
                                    "frankfurt",
                                    "oregon",
                                    "ohio",
                                    "singapore"
                                  ],
                                  "default": "oregon",
                                  "description": "Defaults to \"oregon\""
                                },
                                "url": {
                                  "type": "string"
                                },
                                "buildPlan": {
                                  "type": "string",
                                  "enum": [
                                    "starter",
                                    "performance"
                                  ],
                                  "default": "starter"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "env",
                                "envSpecificDetails",
                                "plan",
                                "region",
                                "pullRequestPreviewsEnabled",
                                "numInstances",
                                "buildPlan",
                                "openPorts",
                                "url"
                              ],
                              "properties": {
                                "autoscaling": {
                                  "type": "object",
                                  "required": [
                                    "enabled",
                                    "min",
                                    "max",
                                    "criteria"
                                  ],
                                  "properties": {
                                    "enabled": {
                                      "type": "boolean",
                                      "default": false
                                    },
                                    "min": {
                                      "type": "integer",
                                      "description": "The minimum number of instances for the service"
                                    },
                                    "max": {
                                      "type": "integer",
                                      "description": "The maximum number of instances for the service"
                                    },
                                    "criteria": {
                                      "type": "object",
                                      "required": [
                                        "cpu",
                                        "memory"
                                      ],
                                      "properties": {
                                        "cpu": {
                                          "type": "object",
                                          "required": [
                                            "enabled",
                                            "percentage"
                                          ],
                                          "properties": {
                                            "enabled": {
                                              "type": "boolean",
                                              "default": false
                                            },
                                            "percentage": {
                                              "type": "integer",
                                              "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                            }
                                          }
                                        },
                                        "memory": {
                                          "type": "object",
                                          "required": [
                                            "enabled",
                                            "percentage"
                                          ],
                                          "properties": {
                                            "enabled": {
                                              "type": "boolean",
                                              "default": false
                                            },
                                            "percentage": {
                                              "type": "integer",
                                              "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "disk": {
                                  "type": "object",
                                  "required": [
                                    "id",
                                    "name",
                                    "sizeGB",
                                    "mountPath"
                                  ],
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "sizeGB": {
                                      "type": "integer"
                                    },
                                    "mountPath": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "env": {
                                  "type": "string",
                                  "enum": [
                                    "docker",
                                    "elixir",
                                    "go",
                                    "node",
                                    "python",
                                    "ruby",
                                    "rust",
                                    "image"
                                  ],
                                  "description": "Environment (runtime)"
                                },
                                "envSpecificDetails": {
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "dockerCommand",
                                        "dockerContext",
                                        "dockerfilePath"
                                      ],
                                      "properties": {
                                        "dockerCommand": {
                                          "type": "string"
                                        },
                                        "dockerContext": {
                                          "type": "string"
                                        },
                                        "dockerfilePath": {
                                          "type": "string"
                                        },
                                        "preDeployCommand": {
                                          "type": "string"
                                        },
                                        "registryCredential": {
                                          "type": "object",
                                          "required": [
                                            "id",
                                            "name",
                                            "username",
                                            "registry"
                                          ],
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "Unique identifier for this credential"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Descriptive name for this credential"
                                            },
                                            "registry": {
                                              "type": "string",
                                              "enum": [
                                                "GITHUB",
                                                "GITLAB",
                                                "DOCKER"
                                              ],
                                              "description": "The registry to use this credential with"
                                            },
                                            "username": {
                                              "type": "string",
                                              "description": "The username associated with the credential"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "buildCommand",
                                        "startCommand"
                                      ],
                                      "properties": {
                                        "buildCommand": {
                                          "type": "string"
                                        },
                                        "startCommand": {
                                          "type": "string"
                                        },
                                        "preDeployCommand": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "numInstances": {
                                  "type": "integer",
                                  "description": "For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."
                                },
                                "openPorts": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "port",
                                      "protocol"
                                    ],
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "example": 10000
                                      },
                                      "protocol": {
                                        "type": "string",
                                        "enum": [
                                          "TCP",
                                          "UDP"
                                        ]
                                      }
                                    }
                                  }
                                },
                                "parentServer": {
                                  "required": [
                                    "id",
                                    "name"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "plan": {
                                  "type": "string",
                                  "enum": [
                                    "starter",
                                    "starter_plus",
                                    "standard",
                                    "standard_plus",
                                    "pro",
                                    "pro_plus",
                                    "pro_max",
                                    "pro_ultra",
                                    "free",
                                    "custom"
                                  ],
                                  "example": "starter",
                                  "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                                },
                                "pullRequestPreviewsEnabled": {
                                  "type": "string",
                                  "enum": [
                                    "yes",
                                    "no"
                                  ]
                                },
                                "region": {
                                  "type": "string",
                                  "enum": [
                                    "frankfurt",
                                    "oregon",
                                    "ohio",
                                    "singapore"
                                  ],
                                  "default": "oregon",
                                  "description": "Defaults to \"oregon\""
                                },
                                "url": {
                                  "type": "string"
                                },
                                "buildPlan": {
                                  "type": "string",
                                  "enum": [
                                    "starter",
                                    "performance"
                                  ],
                                  "default": "starter"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "env",
                                "envSpecificDetails",
                                "plan",
                                "region",
                                "pullRequestPreviewsEnabled",
                                "numInstances",
                                "buildPlan"
                              ],
                              "properties": {
                                "autoscaling": {
                                  "type": "object",
                                  "required": [
                                    "enabled",
                                    "min",
                                    "max",
                                    "criteria"
                                  ],
                                  "properties": {
                                    "enabled": {
                                      "type": "boolean",
                                      "default": false
                                    },
                                    "min": {
                                      "type": "integer",
                                      "description": "The minimum number of instances for the service"
                                    },
                                    "max": {
                                      "type": "integer",
                                      "description": "The maximum number of instances for the service"
                                    },
                                    "criteria": {
                                      "type": "object",
                                      "required": [
                                        "cpu",
                                        "memory"
                                      ],
                                      "properties": {
                                        "cpu": {
                                          "type": "object",
                                          "required": [
                                            "enabled",
                                            "percentage"
                                          ],
                                          "properties": {
                                            "enabled": {
                                              "type": "boolean",
                                              "default": false
                                            },
                                            "percentage": {
                                              "type": "integer",
                                              "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                            }
                                          }
                                        },
                                        "memory": {
                                          "type": "object",
                                          "required": [
                                            "enabled",
                                            "percentage"
                                          ],
                                          "properties": {
                                            "enabled": {
                                              "type": "boolean",
                                              "default": false
                                            },
                                            "percentage": {
                                              "type": "integer",
                                              "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "disk": {
                                  "type": "object",
                                  "required": [
                                    "id",
                                    "name",
                                    "sizeGB",
                                    "mountPath"
                                  ],
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "sizeGB": {
                                      "type": "integer"
                                    },
                                    "mountPath": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "env": {
                                  "type": "string",
                                  "enum": [
                                    "docker",
                                    "elixir",
                                    "go",
                                    "node",
                                    "python",
                                    "ruby",
                                    "rust",
                                    "image"
                                  ],
                                  "description": "Environment (runtime)"
                                },
                                "envSpecificDetails": {
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "dockerCommand",
                                        "dockerContext",
                                        "dockerfilePath"
                                      ],
                                      "properties": {
                                        "dockerCommand": {
                                          "type": "string"
                                        },
                                        "dockerContext": {
                                          "type": "string"
                                        },
                                        "dockerfilePath": {
                                          "type": "string"
                                        },
                                        "preDeployCommand": {
                                          "type": "string"
                                        },
                                        "registryCredential": {
                                          "type": "object",
                                          "required": [
                                            "id",
                                            "name",
                                            "username",
                                            "registry"
                                          ],
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "Unique identifier for this credential"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Descriptive name for this credential"
                                            },
                                            "registry": {
                                              "type": "string",
                                              "enum": [
                                                "GITHUB",
                                                "GITLAB",
                                                "DOCKER"
                                              ],
                                              "description": "The registry to use this credential with"
                                            },
                                            "username": {
                                              "type": "string",
                                              "description": "The username associated with the credential"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "buildCommand",
                                        "startCommand"
                                      ],
                                      "properties": {
                                        "buildCommand": {
                                          "type": "string"
                                        },
                                        "startCommand": {
                                          "type": "string"
                                        },
                                        "preDeployCommand": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "numInstances": {
                                  "type": "integer",
                                  "description": "For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."
                                },
                                "parentServer": {
                                  "required": [
                                    "id",
                                    "name"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "plan": {
                                  "type": "string",
                                  "enum": [
                                    "starter",
                                    "starter_plus",
                                    "standard",
                                    "standard_plus",
                                    "pro",
                                    "pro_plus",
                                    "pro_max",
                                    "pro_ultra",
                                    "free",
                                    "custom"
                                  ],
                                  "example": "starter",
                                  "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                                },
                                "pullRequestPreviewsEnabled": {
                                  "type": "string",
                                  "enum": [
                                    "yes",
                                    "no"
                                  ]
                                },
                                "region": {
                                  "type": "string",
                                  "enum": [
                                    "frankfurt",
                                    "oregon",
                                    "ohio",
                                    "singapore"
                                  ],
                                  "default": "oregon",
                                  "description": "Defaults to \"oregon\""
                                },
                                "buildPlan": {
                                  "type": "string",
                                  "enum": [
                                    "starter",
                                    "performance"
                                  ],
                                  "default": "starter"
                                }
                              }
                            },
                            {
                              "required": [
                                "env",
                                "envSpecificDetails",
                                "plan",
                                "region",
                                "schedule",
                                "buildPlan"
                              ],
                              "type": "object",
                              "properties": {
                                "env": {
                                  "type": "string",
                                  "enum": [
                                    "docker",
                                    "elixir",
                                    "go",
                                    "node",
                                    "python",
                                    "ruby",
                                    "rust",
                                    "image"
                                  ],
                                  "description": "Environment (runtime)"
                                },
                                "envSpecificDetails": {
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "dockerCommand",
                                        "dockerContext",
                                        "dockerfilePath"
                                      ],
                                      "properties": {
                                        "dockerCommand": {
                                          "type": "string"
                                        },
                                        "dockerContext": {
                                          "type": "string"
                                        },
                                        "dockerfilePath": {
                                          "type": "string"
                                        },
                                        "preDeployCommand": {
                                          "type": "string"
                                        },
                                        "registryCredential": {
                                          "type": "object",
                                          "required": [
                                            "id",
                                            "name",
                                            "username",
                                            "registry"
                                          ],
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "Unique identifier for this credential"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Descriptive name for this credential"
                                            },
                                            "registry": {
                                              "type": "string",
                                              "enum": [
                                                "GITHUB",
                                                "GITLAB",
                                                "DOCKER"
                                              ],
                                              "description": "The registry to use this credential with"
                                            },
                                            "username": {
                                              "type": "string",
                                              "description": "The username associated with the credential"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "buildCommand",
                                        "startCommand"
                                      ],
                                      "properties": {
                                        "buildCommand": {
                                          "type": "string"
                                        },
                                        "startCommand": {
                                          "type": "string"
                                        },
                                        "preDeployCommand": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "lastSuccessfulRunAt": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "plan": {
                                  "type": "string",
                                  "enum": [
                                    "starter",
                                    "starter_plus",
                                    "standard",
                                    "standard_plus",
                                    "pro",
                                    "pro_plus",
                                    "pro_max",
                                    "pro_ultra",
                                    "free",
                                    "custom"
                                  ],
                                  "example": "starter",
                                  "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                                },
                                "region": {
                                  "type": "string",
                                  "enum": [
                                    "frankfurt",
                                    "oregon",
                                    "ohio",
                                    "singapore"
                                  ],
                                  "default": "oregon",
                                  "description": "Defaults to \"oregon\""
                                },
                                "schedule": {
                                  "type": "string"
                                },
                                "buildPlan": {
                                  "type": "string",
                                  "enum": [
                                    "starter",
                                    "performance"
                                  ],
                                  "default": "starter"
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    "deployId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "You must enter payment information to perform this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "The current state of the resource conflicts with this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve service",
        "operationId": "get-service",
        "tags": [
          "Services"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "ownerId",
                    "type",
                    "createdAt",
                    "updatedAt",
                    "suspended",
                    "suspenders",
                    "autoDeploy",
                    "notifyOnFail",
                    "slug",
                    "serviceDetails",
                    "rootDir"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "autoDeploy": {
                      "type": "string",
                      "enum": [
                        "yes",
                        "no"
                      ]
                    },
                    "branch": {
                      "type": "string"
                    },
                    "buildFilter": {
                      "type": "object",
                      "required": [
                        "paths",
                        "ignoredPaths"
                      ],
                      "properties": {
                        "paths": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "ignoredPaths": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "environmentId": {
                      "type": "string"
                    },
                    "imagePath": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "notifyOnFail": {
                      "type": "string",
                      "enum": [
                        "default",
                        "notify",
                        "ignore"
                      ]
                    },
                    "ownerId": {
                      "type": "string"
                    },
                    "registryCredential": {
                      "type": "object",
                      "required": [
                        "id",
                        "name"
                      ],
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "repo": {
                      "type": "string",
                      "example": "https://github.com/render-examples/flask-hello-world"
                    },
                    "rootDir": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "suspended": {
                      "type": "string",
                      "enum": [
                        "suspended",
                        "not_suspended"
                      ]
                    },
                    "suspenders": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "admin",
                          "billing",
                          "user",
                          "parent_service",
                          "unknown"
                        ]
                      }
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "static_site",
                        "web_service",
                        "private_service",
                        "background_worker",
                        "cron_job"
                      ]
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "serviceDetails": {
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "buildCommand",
                            "publishPath",
                            "pullRequestPreviewsEnabled",
                            "url",
                            "buildPlan"
                          ],
                          "properties": {
                            "buildCommand": {
                              "type": "string"
                            },
                            "parentServer": {
                              "required": [
                                "id",
                                "name"
                              ],
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            },
                            "publishPath": {
                              "type": "string"
                            },
                            "pullRequestPreviewsEnabled": {
                              "type": "string",
                              "enum": [
                                "yes",
                                "no"
                              ]
                            },
                            "url": {
                              "type": "string"
                            },
                            "buildPlan": {
                              "type": "string",
                              "enum": [
                                "starter",
                                "performance"
                              ],
                              "default": "starter"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "env",
                            "envSpecificDetails",
                            "plan",
                            "region",
                            "pullRequestPreviewsEnabled",
                            "numInstances",
                            "buildPlan",
                            "healthCheckPath",
                            "openPorts",
                            "url"
                          ],
                          "properties": {
                            "autoscaling": {
                              "type": "object",
                              "required": [
                                "enabled",
                                "min",
                                "max",
                                "criteria"
                              ],
                              "properties": {
                                "enabled": {
                                  "type": "boolean",
                                  "default": false
                                },
                                "min": {
                                  "type": "integer",
                                  "description": "The minimum number of instances for the service"
                                },
                                "max": {
                                  "type": "integer",
                                  "description": "The maximum number of instances for the service"
                                },
                                "criteria": {
                                  "type": "object",
                                  "required": [
                                    "cpu",
                                    "memory"
                                  ],
                                  "properties": {
                                    "cpu": {
                                      "type": "object",
                                      "required": [
                                        "enabled",
                                        "percentage"
                                      ],
                                      "properties": {
                                        "enabled": {
                                          "type": "boolean",
                                          "default": false
                                        },
                                        "percentage": {
                                          "type": "integer",
                                          "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                        }
                                      }
                                    },
                                    "memory": {
                                      "type": "object",
                                      "required": [
                                        "enabled",
                                        "percentage"
                                      ],
                                      "properties": {
                                        "enabled": {
                                          "type": "boolean",
                                          "default": false
                                        },
                                        "percentage": {
                                          "type": "integer",
                                          "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "disk": {
                              "type": "object",
                              "required": [
                                "id",
                                "name",
                                "sizeGB",
                                "mountPath"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "sizeGB": {
                                  "type": "integer"
                                },
                                "mountPath": {
                                  "type": "string"
                                }
                              }
                            },
                            "env": {
                              "type": "string",
                              "enum": [
                                "docker",
                                "elixir",
                                "go",
                                "node",
                                "python",
                                "ruby",
                                "rust",
                                "image"
                              ],
                              "description": "Environment (runtime)"
                            },
                            "envSpecificDetails": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "dockerCommand",
                                    "dockerContext",
                                    "dockerfilePath"
                                  ],
                                  "properties": {
                                    "dockerCommand": {
                                      "type": "string"
                                    },
                                    "dockerContext": {
                                      "type": "string"
                                    },
                                    "dockerfilePath": {
                                      "type": "string"
                                    },
                                    "preDeployCommand": {
                                      "type": "string"
                                    },
                                    "registryCredential": {
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "name",
                                        "username",
                                        "registry"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "Unique identifier for this credential"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Descriptive name for this credential"
                                        },
                                        "registry": {
                                          "type": "string",
                                          "enum": [
                                            "GITHUB",
                                            "GITLAB",
                                            "DOCKER"
                                          ],
                                          "description": "The registry to use this credential with"
                                        },
                                        "username": {
                                          "type": "string",
                                          "description": "The username associated with the credential"
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "buildCommand",
                                    "startCommand"
                                  ],
                                  "properties": {
                                    "buildCommand": {
                                      "type": "string"
                                    },
                                    "startCommand": {
                                      "type": "string"
                                    },
                                    "preDeployCommand": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            },
                            "healthCheckPath": {
                              "type": "string"
                            },
                            "numInstances": {
                              "type": "integer",
                              "description": "For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."
                            },
                            "openPorts": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "port",
                                  "protocol"
                                ],
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "example": 10000
                                  },
                                  "protocol": {
                                    "type": "string",
                                    "enum": [
                                      "TCP",
                                      "UDP"
                                    ]
                                  }
                                }
                              }
                            },
                            "parentServer": {
                              "required": [
                                "id",
                                "name"
                              ],
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            },
                            "plan": {
                              "type": "string",
                              "enum": [
                                "starter",
                                "starter_plus",
                                "standard",
                                "standard_plus",
                                "pro",
                                "pro_plus",
                                "pro_max",
                                "pro_ultra",
                                "free",
                                "custom"
                              ],
                              "example": "starter",
                              "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                            },
                            "pullRequestPreviewsEnabled": {
                              "type": "string",
                              "enum": [
                                "yes",
                                "no"
                              ]
                            },
                            "region": {
                              "type": "string",
                              "enum": [
                                "frankfurt",
                                "oregon",
                                "ohio",
                                "singapore"
                              ],
                              "default": "oregon",
                              "description": "Defaults to \"oregon\""
                            },
                            "url": {
                              "type": "string"
                            },
                            "buildPlan": {
                              "type": "string",
                              "enum": [
                                "starter",
                                "performance"
                              ],
                              "default": "starter"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "env",
                            "envSpecificDetails",
                            "plan",
                            "region",
                            "pullRequestPreviewsEnabled",
                            "numInstances",
                            "buildPlan",
                            "openPorts",
                            "url"
                          ],
                          "properties": {
                            "autoscaling": {
                              "type": "object",
                              "required": [
                                "enabled",
                                "min",
                                "max",
                                "criteria"
                              ],
                              "properties": {
                                "enabled": {
                                  "type": "boolean",
                                  "default": false
                                },
                                "min": {
                                  "type": "integer",
                                  "description": "The minimum number of instances for the service"
                                },
                                "max": {
                                  "type": "integer",
                                  "description": "The maximum number of instances for the service"
                                },
                                "criteria": {
                                  "type": "object",
                                  "required": [
                                    "cpu",
                                    "memory"
                                  ],
                                  "properties": {
                                    "cpu": {
                                      "type": "object",
                                      "required": [
                                        "enabled",
                                        "percentage"
                                      ],
                                      "properties": {
                                        "enabled": {
                                          "type": "boolean",
                                          "default": false
                                        },
                                        "percentage": {
                                          "type": "integer",
                                          "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                        }
                                      }
                                    },
                                    "memory": {
                                      "type": "object",
                                      "required": [
                                        "enabled",
                                        "percentage"
                                      ],
                                      "properties": {
                                        "enabled": {
                                          "type": "boolean",
                                          "default": false
                                        },
                                        "percentage": {
                                          "type": "integer",
                                          "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "disk": {
                              "type": "object",
                              "required": [
                                "id",
                                "name",
                                "sizeGB",
                                "mountPath"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "sizeGB": {
                                  "type": "integer"
                                },
                                "mountPath": {
                                  "type": "string"
                                }
                              }
                            },
                            "env": {
                              "type": "string",
                              "enum": [
                                "docker",
                                "elixir",
                                "go",
                                "node",
                                "python",
                                "ruby",
                                "rust",
                                "image"
                              ],
                              "description": "Environment (runtime)"
                            },
                            "envSpecificDetails": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "dockerCommand",
                                    "dockerContext",
                                    "dockerfilePath"
                                  ],
                                  "properties": {
                                    "dockerCommand": {
                                      "type": "string"
                                    },
                                    "dockerContext": {
                                      "type": "string"
                                    },
                                    "dockerfilePath": {
                                      "type": "string"
                                    },
                                    "preDeployCommand": {
                                      "type": "string"
                                    },
                                    "registryCredential": {
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "name",
                                        "username",
                                        "registry"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "Unique identifier for this credential"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Descriptive name for this credential"
                                        },
                                        "registry": {
                                          "type": "string",
                                          "enum": [
                                            "GITHUB",
                                            "GITLAB",
                                            "DOCKER"
                                          ],
                                          "description": "The registry to use this credential with"
                                        },
                                        "username": {
                                          "type": "string",
                                          "description": "The username associated with the credential"
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "buildCommand",
                                    "startCommand"
                                  ],
                                  "properties": {
                                    "buildCommand": {
                                      "type": "string"
                                    },
                                    "startCommand": {
                                      "type": "string"
                                    },
                                    "preDeployCommand": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            },
                            "numInstances": {
                              "type": "integer",
                              "description": "For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."
                            },
                            "openPorts": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "port",
                                  "protocol"
                                ],
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "example": 10000
                                  },
                                  "protocol": {
                                    "type": "string",
                                    "enum": [
                                      "TCP",
                                      "UDP"
                                    ]
                                  }
                                }
                              }
                            },
                            "parentServer": {
                              "required": [
                                "id",
                                "name"
                              ],
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            },
                            "plan": {
                              "type": "string",
                              "enum": [
                                "starter",
                                "starter_plus",
                                "standard",
                                "standard_plus",
                                "pro",
                                "pro_plus",
                                "pro_max",
                                "pro_ultra",
                                "free",
                                "custom"
                              ],
                              "example": "starter",
                              "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                            },
                            "pullRequestPreviewsEnabled": {
                              "type": "string",
                              "enum": [
                                "yes",
                                "no"
                              ]
                            },
                            "region": {
                              "type": "string",
                              "enum": [
                                "frankfurt",
                                "oregon",
                                "ohio",
                                "singapore"
                              ],
                              "default": "oregon",
                              "description": "Defaults to \"oregon\""
                            },
                            "url": {
                              "type": "string"
                            },
                            "buildPlan": {
                              "type": "string",
                              "enum": [
                                "starter",
                                "performance"
                              ],
                              "default": "starter"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "env",
                            "envSpecificDetails",
                            "plan",
                            "region",
                            "pullRequestPreviewsEnabled",
                            "numInstances",
                            "buildPlan"
                          ],
                          "properties": {
                            "autoscaling": {
                              "type": "object",
                              "required": [
                                "enabled",
                                "min",
                                "max",
                                "criteria"
                              ],
                              "properties": {
                                "enabled": {
                                  "type": "boolean",
                                  "default": false
                                },
                                "min": {
                                  "type": "integer",
                                  "description": "The minimum number of instances for the service"
                                },
                                "max": {
                                  "type": "integer",
                                  "description": "The maximum number of instances for the service"
                                },
                                "criteria": {
                                  "type": "object",
                                  "required": [
                                    "cpu",
                                    "memory"
                                  ],
                                  "properties": {
                                    "cpu": {
                                      "type": "object",
                                      "required": [
                                        "enabled",
                                        "percentage"
                                      ],
                                      "properties": {
                                        "enabled": {
                                          "type": "boolean",
                                          "default": false
                                        },
                                        "percentage": {
                                          "type": "integer",
                                          "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                        }
                                      }
                                    },
                                    "memory": {
                                      "type": "object",
                                      "required": [
                                        "enabled",
                                        "percentage"
                                      ],
                                      "properties": {
                                        "enabled": {
                                          "type": "boolean",
                                          "default": false
                                        },
                                        "percentage": {
                                          "type": "integer",
                                          "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "disk": {
                              "type": "object",
                              "required": [
                                "id",
                                "name",
                                "sizeGB",
                                "mountPath"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "sizeGB": {
                                  "type": "integer"
                                },
                                "mountPath": {
                                  "type": "string"
                                }
                              }
                            },
                            "env": {
                              "type": "string",
                              "enum": [
                                "docker",
                                "elixir",
                                "go",
                                "node",
                                "python",
                                "ruby",
                                "rust",
                                "image"
                              ],
                              "description": "Environment (runtime)"
                            },
                            "envSpecificDetails": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "dockerCommand",
                                    "dockerContext",
                                    "dockerfilePath"
                                  ],
                                  "properties": {
                                    "dockerCommand": {
                                      "type": "string"
                                    },
                                    "dockerContext": {
                                      "type": "string"
                                    },
                                    "dockerfilePath": {
                                      "type": "string"
                                    },
                                    "preDeployCommand": {
                                      "type": "string"
                                    },
                                    "registryCredential": {
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "name",
                                        "username",
                                        "registry"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "Unique identifier for this credential"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Descriptive name for this credential"
                                        },
                                        "registry": {
                                          "type": "string",
                                          "enum": [
                                            "GITHUB",
                                            "GITLAB",
                                            "DOCKER"
                                          ],
                                          "description": "The registry to use this credential with"
                                        },
                                        "username": {
                                          "type": "string",
                                          "description": "The username associated with the credential"
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "buildCommand",
                                    "startCommand"
                                  ],
                                  "properties": {
                                    "buildCommand": {
                                      "type": "string"
                                    },
                                    "startCommand": {
                                      "type": "string"
                                    },
                                    "preDeployCommand": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            },
                            "numInstances": {
                              "type": "integer",
                              "description": "For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."
                            },
                            "parentServer": {
                              "required": [
                                "id",
                                "name"
                              ],
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            },
                            "plan": {
                              "type": "string",
                              "enum": [
                                "starter",
                                "starter_plus",
                                "standard",
                                "standard_plus",
                                "pro",
                                "pro_plus",
                                "pro_max",
                                "pro_ultra",
                                "free",
                                "custom"
                              ],
                              "example": "starter",
                              "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                            },
                            "pullRequestPreviewsEnabled": {
                              "type": "string",
                              "enum": [
                                "yes",
                                "no"
                              ]
                            },
                            "region": {
                              "type": "string",
                              "enum": [
                                "frankfurt",
                                "oregon",
                                "ohio",
                                "singapore"
                              ],
                              "default": "oregon",
                              "description": "Defaults to \"oregon\""
                            },
                            "buildPlan": {
                              "type": "string",
                              "enum": [
                                "starter",
                                "performance"
                              ],
                              "default": "starter"
                            }
                          }
                        },
                        {
                          "required": [
                            "env",
                            "envSpecificDetails",
                            "plan",
                            "region",
                            "schedule",
                            "buildPlan"
                          ],
                          "type": "object",
                          "properties": {
                            "env": {
                              "type": "string",
                              "enum": [
                                "docker",
                                "elixir",
                                "go",
                                "node",
                                "python",
                                "ruby",
                                "rust",
                                "image"
                              ],
                              "description": "Environment (runtime)"
                            },
                            "envSpecificDetails": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "dockerCommand",
                                    "dockerContext",
                                    "dockerfilePath"
                                  ],
                                  "properties": {
                                    "dockerCommand": {
                                      "type": "string"
                                    },
                                    "dockerContext": {
                                      "type": "string"
                                    },
                                    "dockerfilePath": {
                                      "type": "string"
                                    },
                                    "preDeployCommand": {
                                      "type": "string"
                                    },
                                    "registryCredential": {
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "name",
                                        "username",
                                        "registry"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "Unique identifier for this credential"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Descriptive name for this credential"
                                        },
                                        "registry": {
                                          "type": "string",
                                          "enum": [
                                            "GITHUB",
                                            "GITLAB",
                                            "DOCKER"
                                          ],
                                          "description": "The registry to use this credential with"
                                        },
                                        "username": {
                                          "type": "string",
                                          "description": "The username associated with the credential"
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "buildCommand",
                                    "startCommand"
                                  ],
                                  "properties": {
                                    "buildCommand": {
                                      "type": "string"
                                    },
                                    "startCommand": {
                                      "type": "string"
                                    },
                                    "preDeployCommand": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            },
                            "lastSuccessfulRunAt": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "plan": {
                              "type": "string",
                              "enum": [
                                "starter",
                                "starter_plus",
                                "standard",
                                "standard_plus",
                                "pro",
                                "pro_plus",
                                "pro_max",
                                "pro_ultra",
                                "free",
                                "custom"
                              ],
                              "example": "starter",
                              "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                            },
                            "region": {
                              "type": "string",
                              "enum": [
                                "frankfurt",
                                "oregon",
                                "ohio",
                                "singapore"
                              ],
                              "default": "oregon",
                              "description": "Defaults to \"oregon\""
                            },
                            "schedule": {
                              "type": "string"
                            },
                            "buildPlan": {
                              "type": "string",
                              "enum": [
                                "starter",
                                "performance"
                              ],
                              "default": "starter"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update service",
        "operationId": "update-service",
        "tags": [
          "Services"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "autoDeploy": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ]
                  },
                  "repo": {
                    "type": "string"
                  },
                  "branch": {
                    "type": "string"
                  },
                  "image": {
                    "type": "object",
                    "required": [
                      "imagePath",
                      "ownerId"
                    ],
                    "properties": {
                      "ownerId": {
                        "type": "string",
                        "description": "The ID of the owner for this image. This should match the owner of the service as well as the owner of any specified registry credential."
                      },
                      "registryCredentialId": {
                        "type": "string",
                        "description": "Optional reference to the registry credential passed to the image repository to retrieve this image."
                      },
                      "imagePath": {
                        "type": "string",
                        "description": "Path to the image used for this server (e.g docker.io/library/nginx:latest)."
                      }
                    }
                  },
                  "name": {
                    "type": "string"
                  },
                  "buildFilter": {
                    "type": "object",
                    "required": [
                      "paths",
                      "ignoredPaths"
                    ],
                    "properties": {
                      "paths": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "ignoredPaths": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "rootDir": {
                    "type": "string"
                  },
                  "serviceDetails": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "buildCommand": {
                            "type": "string"
                          },
                          "publishPath": {
                            "type": "string"
                          },
                          "pullRequestPreviewsEnabled": {
                            "type": "string",
                            "enum": [
                              "yes",
                              "no"
                            ]
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "envSpecificDetails": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "dockerCommand": {
                                    "type": "string"
                                  },
                                  "dockerContext": {
                                    "type": "string"
                                  },
                                  "dockerfilePath": {
                                    "type": "string"
                                  },
                                  "registryCredentialId": {
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "buildCommand": {
                                    "type": "string"
                                  },
                                  "startCommand": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          },
                          "healthCheckPath": {
                            "type": "string"
                          },
                          "plan": {
                            "type": "string",
                            "enum": [
                              "starter",
                              "standard",
                              "pro",
                              "pro_plus",
                              "pro_max",
                              "pro_ultra"
                            ],
                            "default": "starter",
                            "description": "Defaults to \"starter\""
                          },
                          "preDeployCommand": {
                            "type": "string"
                          },
                          "pullRequestPreviewsEnabled": {
                            "type": "string",
                            "enum": [
                              "yes",
                              "no"
                            ]
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "envSpecificDetails": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "dockerCommand": {
                                    "type": "string"
                                  },
                                  "dockerContext": {
                                    "type": "string"
                                  },
                                  "dockerfilePath": {
                                    "type": "string"
                                  },
                                  "registryCredentialId": {
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "buildCommand": {
                                    "type": "string"
                                  },
                                  "startCommand": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          },
                          "plan": {
                            "type": "string",
                            "enum": [
                              "starter",
                              "standard",
                              "pro",
                              "pro_plus",
                              "pro_max",
                              "pro_ultra"
                            ],
                            "default": "starter",
                            "description": "Defaults to \"starter\""
                          },
                          "preDeployCommand": {
                            "type": "string"
                          },
                          "pullRequestPreviewsEnabled": {
                            "type": "string",
                            "enum": [
                              "yes",
                              "no"
                            ]
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "envSpecificDetails": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "dockerCommand": {
                                    "type": "string"
                                  },
                                  "dockerContext": {
                                    "type": "string"
                                  },
                                  "dockerfilePath": {
                                    "type": "string"
                                  },
                                  "registryCredentialId": {
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "buildCommand": {
                                    "type": "string"
                                  },
                                  "startCommand": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          },
                          "plan": {
                            "type": "string",
                            "enum": [
                              "starter",
                              "standard",
                              "pro",
                              "pro_plus",
                              "pro_max",
                              "pro_ultra"
                            ],
                            "default": "starter",
                            "description": "Defaults to \"starter\""
                          },
                          "preDeployCommand": {
                            "type": "string"
                          },
                          "pullRequestPreviewsEnabled": {
                            "type": "string",
                            "enum": [
                              "yes",
                              "no"
                            ]
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "envSpecificDetails": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "dockerCommand": {
                                    "type": "string"
                                  },
                                  "dockerContext": {
                                    "type": "string"
                                  },
                                  "dockerfilePath": {
                                    "type": "string"
                                  },
                                  "registryCredentialId": {
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "buildCommand": {
                                    "type": "string"
                                  },
                                  "startCommand": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          },
                          "plan": {
                            "type": "string",
                            "enum": [
                              "starter",
                              "standard",
                              "pro",
                              "pro_plus",
                              "pro_max",
                              "pro_ultra"
                            ],
                            "default": "starter",
                            "description": "Defaults to \"starter\""
                          },
                          "schedule": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "ownerId",
                    "type",
                    "createdAt",
                    "updatedAt",
                    "suspended",
                    "suspenders",
                    "autoDeploy",
                    "notifyOnFail",
                    "slug",
                    "serviceDetails",
                    "rootDir"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "autoDeploy": {
                      "type": "string",
                      "enum": [
                        "yes",
                        "no"
                      ]
                    },
                    "branch": {
                      "type": "string"
                    },
                    "buildFilter": {
                      "type": "object",
                      "required": [
                        "paths",
                        "ignoredPaths"
                      ],
                      "properties": {
                        "paths": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "ignoredPaths": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "environmentId": {
                      "type": "string"
                    },
                    "imagePath": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "notifyOnFail": {
                      "type": "string",
                      "enum": [
                        "default",
                        "notify",
                        "ignore"
                      ]
                    },
                    "ownerId": {
                      "type": "string"
                    },
                    "registryCredential": {
                      "type": "object",
                      "required": [
                        "id",
                        "name"
                      ],
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "repo": {
                      "type": "string",
                      "example": "https://github.com/render-examples/flask-hello-world"
                    },
                    "rootDir": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "suspended": {
                      "type": "string",
                      "enum": [
                        "suspended",
                        "not_suspended"
                      ]
                    },
                    "suspenders": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "admin",
                          "billing",
                          "user",
                          "parent_service",
                          "unknown"
                        ]
                      }
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "static_site",
                        "web_service",
                        "private_service",
                        "background_worker",
                        "cron_job"
                      ]
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "serviceDetails": {
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "buildCommand",
                            "publishPath",
                            "pullRequestPreviewsEnabled",
                            "url",
                            "buildPlan"
                          ],
                          "properties": {
                            "buildCommand": {
                              "type": "string"
                            },
                            "parentServer": {
                              "required": [
                                "id",
                                "name"
                              ],
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            },
                            "publishPath": {
                              "type": "string"
                            },
                            "pullRequestPreviewsEnabled": {
                              "type": "string",
                              "enum": [
                                "yes",
                                "no"
                              ]
                            },
                            "url": {
                              "type": "string"
                            },
                            "buildPlan": {
                              "type": "string",
                              "enum": [
                                "starter",
                                "performance"
                              ],
                              "default": "starter"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "env",
                            "envSpecificDetails",
                            "plan",
                            "region",
                            "pullRequestPreviewsEnabled",
                            "numInstances",
                            "buildPlan",
                            "healthCheckPath",
                            "openPorts",
                            "url"
                          ],
                          "properties": {
                            "autoscaling": {
                              "type": "object",
                              "required": [
                                "enabled",
                                "min",
                                "max",
                                "criteria"
                              ],
                              "properties": {
                                "enabled": {
                                  "type": "boolean",
                                  "default": false
                                },
                                "min": {
                                  "type": "integer",
                                  "description": "The minimum number of instances for the service"
                                },
                                "max": {
                                  "type": "integer",
                                  "description": "The maximum number of instances for the service"
                                },
                                "criteria": {
                                  "type": "object",
                                  "required": [
                                    "cpu",
                                    "memory"
                                  ],
                                  "properties": {
                                    "cpu": {
                                      "type": "object",
                                      "required": [
                                        "enabled",
                                        "percentage"
                                      ],
                                      "properties": {
                                        "enabled": {
                                          "type": "boolean",
                                          "default": false
                                        },
                                        "percentage": {
                                          "type": "integer",
                                          "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                        }
                                      }
                                    },
                                    "memory": {
                                      "type": "object",
                                      "required": [
                                        "enabled",
                                        "percentage"
                                      ],
                                      "properties": {
                                        "enabled": {
                                          "type": "boolean",
                                          "default": false
                                        },
                                        "percentage": {
                                          "type": "integer",
                                          "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "disk": {
                              "type": "object",
                              "required": [
                                "id",
                                "name",
                                "sizeGB",
                                "mountPath"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "sizeGB": {
                                  "type": "integer"
                                },
                                "mountPath": {
                                  "type": "string"
                                }
                              }
                            },
                            "env": {
                              "type": "string",
                              "enum": [
                                "docker",
                                "elixir",
                                "go",
                                "node",
                                "python",
                                "ruby",
                                "rust",
                                "image"
                              ],
                              "description": "Environment (runtime)"
                            },
                            "envSpecificDetails": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "dockerCommand",
                                    "dockerContext",
                                    "dockerfilePath"
                                  ],
                                  "properties": {
                                    "dockerCommand": {
                                      "type": "string"
                                    },
                                    "dockerContext": {
                                      "type": "string"
                                    },
                                    "dockerfilePath": {
                                      "type": "string"
                                    },
                                    "preDeployCommand": {
                                      "type": "string"
                                    },
                                    "registryCredential": {
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "name",
                                        "username",
                                        "registry"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "Unique identifier for this credential"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Descriptive name for this credential"
                                        },
                                        "registry": {
                                          "type": "string",
                                          "enum": [
                                            "GITHUB",
                                            "GITLAB",
                                            "DOCKER"
                                          ],
                                          "description": "The registry to use this credential with"
                                        },
                                        "username": {
                                          "type": "string",
                                          "description": "The username associated with the credential"
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "buildCommand",
                                    "startCommand"
                                  ],
                                  "properties": {
                                    "buildCommand": {
                                      "type": "string"
                                    },
                                    "startCommand": {
                                      "type": "string"
                                    },
                                    "preDeployCommand": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            },
                            "healthCheckPath": {
                              "type": "string"
                            },
                            "numInstances": {
                              "type": "integer",
                              "description": "For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."
                            },
                            "openPorts": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "port",
                                  "protocol"
                                ],
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "example": 10000
                                  },
                                  "protocol": {
                                    "type": "string",
                                    "enum": [
                                      "TCP",
                                      "UDP"
                                    ]
                                  }
                                }
                              }
                            },
                            "parentServer": {
                              "required": [
                                "id",
                                "name"
                              ],
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            },
                            "plan": {
                              "type": "string",
                              "enum": [
                                "starter",
                                "starter_plus",
                                "standard",
                                "standard_plus",
                                "pro",
                                "pro_plus",
                                "pro_max",
                                "pro_ultra",
                                "free",
                                "custom"
                              ],
                              "example": "starter",
                              "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                            },
                            "pullRequestPreviewsEnabled": {
                              "type": "string",
                              "enum": [
                                "yes",
                                "no"
                              ]
                            },
                            "region": {
                              "type": "string",
                              "enum": [
                                "frankfurt",
                                "oregon",
                                "ohio",
                                "singapore"
                              ],
                              "default": "oregon",
                              "description": "Defaults to \"oregon\""
                            },
                            "url": {
                              "type": "string"
                            },
                            "buildPlan": {
                              "type": "string",
                              "enum": [
                                "starter",
                                "performance"
                              ],
                              "default": "starter"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "env",
                            "envSpecificDetails",
                            "plan",
                            "region",
                            "pullRequestPreviewsEnabled",
                            "numInstances",
                            "buildPlan",
                            "openPorts",
                            "url"
                          ],
                          "properties": {
                            "autoscaling": {
                              "type": "object",
                              "required": [
                                "enabled",
                                "min",
                                "max",
                                "criteria"
                              ],
                              "properties": {
                                "enabled": {
                                  "type": "boolean",
                                  "default": false
                                },
                                "min": {
                                  "type": "integer",
                                  "description": "The minimum number of instances for the service"
                                },
                                "max": {
                                  "type": "integer",
                                  "description": "The maximum number of instances for the service"
                                },
                                "criteria": {
                                  "type": "object",
                                  "required": [
                                    "cpu",
                                    "memory"
                                  ],
                                  "properties": {
                                    "cpu": {
                                      "type": "object",
                                      "required": [
                                        "enabled",
                                        "percentage"
                                      ],
                                      "properties": {
                                        "enabled": {
                                          "type": "boolean",
                                          "default": false
                                        },
                                        "percentage": {
                                          "type": "integer",
                                          "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                        }
                                      }
                                    },
                                    "memory": {
                                      "type": "object",
                                      "required": [
                                        "enabled",
                                        "percentage"
                                      ],
                                      "properties": {
                                        "enabled": {
                                          "type": "boolean",
                                          "default": false
                                        },
                                        "percentage": {
                                          "type": "integer",
                                          "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "disk": {
                              "type": "object",
                              "required": [
                                "id",
                                "name",
                                "sizeGB",
                                "mountPath"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "sizeGB": {
                                  "type": "integer"
                                },
                                "mountPath": {
                                  "type": "string"
                                }
                              }
                            },
                            "env": {
                              "type": "string",
                              "enum": [
                                "docker",
                                "elixir",
                                "go",
                                "node",
                                "python",
                                "ruby",
                                "rust",
                                "image"
                              ],
                              "description": "Environment (runtime)"
                            },
                            "envSpecificDetails": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "dockerCommand",
                                    "dockerContext",
                                    "dockerfilePath"
                                  ],
                                  "properties": {
                                    "dockerCommand": {
                                      "type": "string"
                                    },
                                    "dockerContext": {
                                      "type": "string"
                                    },
                                    "dockerfilePath": {
                                      "type": "string"
                                    },
                                    "preDeployCommand": {
                                      "type": "string"
                                    },
                                    "registryCredential": {
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "name",
                                        "username",
                                        "registry"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "Unique identifier for this credential"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Descriptive name for this credential"
                                        },
                                        "registry": {
                                          "type": "string",
                                          "enum": [
                                            "GITHUB",
                                            "GITLAB",
                                            "DOCKER"
                                          ],
                                          "description": "The registry to use this credential with"
                                        },
                                        "username": {
                                          "type": "string",
                                          "description": "The username associated with the credential"
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "buildCommand",
                                    "startCommand"
                                  ],
                                  "properties": {
                                    "buildCommand": {
                                      "type": "string"
                                    },
                                    "startCommand": {
                                      "type": "string"
                                    },
                                    "preDeployCommand": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            },
                            "numInstances": {
                              "type": "integer",
                              "description": "For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."
                            },
                            "openPorts": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "port",
                                  "protocol"
                                ],
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "example": 10000
                                  },
                                  "protocol": {
                                    "type": "string",
                                    "enum": [
                                      "TCP",
                                      "UDP"
                                    ]
                                  }
                                }
                              }
                            },
                            "parentServer": {
                              "required": [
                                "id",
                                "name"
                              ],
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            },
                            "plan": {
                              "type": "string",
                              "enum": [
                                "starter",
                                "starter_plus",
                                "standard",
                                "standard_plus",
                                "pro",
                                "pro_plus",
                                "pro_max",
                                "pro_ultra",
                                "free",
                                "custom"
                              ],
                              "example": "starter",
                              "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                            },
                            "pullRequestPreviewsEnabled": {
                              "type": "string",
                              "enum": [
                                "yes",
                                "no"
                              ]
                            },
                            "region": {
                              "type": "string",
                              "enum": [
                                "frankfurt",
                                "oregon",
                                "ohio",
                                "singapore"
                              ],
                              "default": "oregon",
                              "description": "Defaults to \"oregon\""
                            },
                            "url": {
                              "type": "string"
                            },
                            "buildPlan": {
                              "type": "string",
                              "enum": [
                                "starter",
                                "performance"
                              ],
                              "default": "starter"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "env",
                            "envSpecificDetails",
                            "plan",
                            "region",
                            "pullRequestPreviewsEnabled",
                            "numInstances",
                            "buildPlan"
                          ],
                          "properties": {
                            "autoscaling": {
                              "type": "object",
                              "required": [
                                "enabled",
                                "min",
                                "max",
                                "criteria"
                              ],
                              "properties": {
                                "enabled": {
                                  "type": "boolean",
                                  "default": false
                                },
                                "min": {
                                  "type": "integer",
                                  "description": "The minimum number of instances for the service"
                                },
                                "max": {
                                  "type": "integer",
                                  "description": "The maximum number of instances for the service"
                                },
                                "criteria": {
                                  "type": "object",
                                  "required": [
                                    "cpu",
                                    "memory"
                                  ],
                                  "properties": {
                                    "cpu": {
                                      "type": "object",
                                      "required": [
                                        "enabled",
                                        "percentage"
                                      ],
                                      "properties": {
                                        "enabled": {
                                          "type": "boolean",
                                          "default": false
                                        },
                                        "percentage": {
                                          "type": "integer",
                                          "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                        }
                                      }
                                    },
                                    "memory": {
                                      "type": "object",
                                      "required": [
                                        "enabled",
                                        "percentage"
                                      ],
                                      "properties": {
                                        "enabled": {
                                          "type": "boolean",
                                          "default": false
                                        },
                                        "percentage": {
                                          "type": "integer",
                                          "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "disk": {
                              "type": "object",
                              "required": [
                                "id",
                                "name",
                                "sizeGB",
                                "mountPath"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "sizeGB": {
                                  "type": "integer"
                                },
                                "mountPath": {
                                  "type": "string"
                                }
                              }
                            },
                            "env": {
                              "type": "string",
                              "enum": [
                                "docker",
                                "elixir",
                                "go",
                                "node",
                                "python",
                                "ruby",
                                "rust",
                                "image"
                              ],
                              "description": "Environment (runtime)"
                            },
                            "envSpecificDetails": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "dockerCommand",
                                    "dockerContext",
                                    "dockerfilePath"
                                  ],
                                  "properties": {
                                    "dockerCommand": {
                                      "type": "string"
                                    },
                                    "dockerContext": {
                                      "type": "string"
                                    },
                                    "dockerfilePath": {
                                      "type": "string"
                                    },
                                    "preDeployCommand": {
                                      "type": "string"
                                    },
                                    "registryCredential": {
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "name",
                                        "username",
                                        "registry"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "Unique identifier for this credential"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Descriptive name for this credential"
                                        },
                                        "registry": {
                                          "type": "string",
                                          "enum": [
                                            "GITHUB",
                                            "GITLAB",
                                            "DOCKER"
                                          ],
                                          "description": "The registry to use this credential with"
                                        },
                                        "username": {
                                          "type": "string",
                                          "description": "The username associated with the credential"
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "buildCommand",
                                    "startCommand"
                                  ],
                                  "properties": {
                                    "buildCommand": {
                                      "type": "string"
                                    },
                                    "startCommand": {
                                      "type": "string"
                                    },
                                    "preDeployCommand": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            },
                            "numInstances": {
                              "type": "integer",
                              "description": "For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."
                            },
                            "parentServer": {
                              "required": [
                                "id",
                                "name"
                              ],
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            },
                            "plan": {
                              "type": "string",
                              "enum": [
                                "starter",
                                "starter_plus",
                                "standard",
                                "standard_plus",
                                "pro",
                                "pro_plus",
                                "pro_max",
                                "pro_ultra",
                                "free",
                                "custom"
                              ],
                              "example": "starter",
                              "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                            },
                            "pullRequestPreviewsEnabled": {
                              "type": "string",
                              "enum": [
                                "yes",
                                "no"
                              ]
                            },
                            "region": {
                              "type": "string",
                              "enum": [
                                "frankfurt",
                                "oregon",
                                "ohio",
                                "singapore"
                              ],
                              "default": "oregon",
                              "description": "Defaults to \"oregon\""
                            },
                            "buildPlan": {
                              "type": "string",
                              "enum": [
                                "starter",
                                "performance"
                              ],
                              "default": "starter"
                            }
                          }
                        },
                        {
                          "required": [
                            "env",
                            "envSpecificDetails",
                            "plan",
                            "region",
                            "schedule",
                            "buildPlan"
                          ],
                          "type": "object",
                          "properties": {
                            "env": {
                              "type": "string",
                              "enum": [
                                "docker",
                                "elixir",
                                "go",
                                "node",
                                "python",
                                "ruby",
                                "rust",
                                "image"
                              ],
                              "description": "Environment (runtime)"
                            },
                            "envSpecificDetails": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "dockerCommand",
                                    "dockerContext",
                                    "dockerfilePath"
                                  ],
                                  "properties": {
                                    "dockerCommand": {
                                      "type": "string"
                                    },
                                    "dockerContext": {
                                      "type": "string"
                                    },
                                    "dockerfilePath": {
                                      "type": "string"
                                    },
                                    "preDeployCommand": {
                                      "type": "string"
                                    },
                                    "registryCredential": {
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "name",
                                        "username",
                                        "registry"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "Unique identifier for this credential"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Descriptive name for this credential"
                                        },
                                        "registry": {
                                          "type": "string",
                                          "enum": [
                                            "GITHUB",
                                            "GITLAB",
                                            "DOCKER"
                                          ],
                                          "description": "The registry to use this credential with"
                                        },
                                        "username": {
                                          "type": "string",
                                          "description": "The username associated with the credential"
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "buildCommand",
                                    "startCommand"
                                  ],
                                  "properties": {
                                    "buildCommand": {
                                      "type": "string"
                                    },
                                    "startCommand": {
                                      "type": "string"
                                    },
                                    "preDeployCommand": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            },
                            "lastSuccessfulRunAt": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "plan": {
                              "type": "string",
                              "enum": [
                                "starter",
                                "starter_plus",
                                "standard",
                                "standard_plus",
                                "pro",
                                "pro_plus",
                                "pro_max",
                                "pro_ultra",
                                "free",
                                "custom"
                              ],
                              "example": "starter",
                              "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                            },
                            "region": {
                              "type": "string",
                              "enum": [
                                "frankfurt",
                                "oregon",
                                "ohio",
                                "singapore"
                              ],
                              "default": "oregon",
                              "description": "Defaults to \"oregon\""
                            },
                            "schedule": {
                              "type": "string"
                            },
                            "buildPlan": {
                              "type": "string",
                              "enum": [
                                "starter",
                                "performance"
                              ],
                              "default": "starter"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "You must enter payment information to perform this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "The current state of the resource conflicts with this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete service",
        "operationId": "delete-service",
        "tags": [
          "Services"
        ],
        "responses": {
          "204": {
            "description": "Service deleted"
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}/deploys": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "List deploys",
        "operationId": "get-deploys",
        "tags": [
          "Deploys"
        ],
        "parameters": [
          {
            "name": "createdBefore",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for deploys created before a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-06-17T08:15:30Z"
          },
          {
            "name": "createdAfter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for deploys created after a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-02-17T08:15:30Z"
          },
          {
            "name": "updatedBefore",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for deploys updated before a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-06-17T08:15:30Z"
          },
          {
            "name": "updatedAfter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for deploys updated after a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-02-17T08:15:30Z"
          },
          {
            "name": "finishedBefore",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for deploys finished before a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-06-17T08:15:30Z"
          },
          {
            "name": "finishedAfter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for deploys finished after a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-02-17T08:15:30Z"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "description": "Cursor to begin retrieving entries for this query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Max number of items that can be returned",
            "schema": {
              "type": "number",
              "default": 20,
              "minimum": 1,
              "maximum": 100,
              "description": "Defaults to 20"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "deploy": {
                        "type": "object",
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "commit": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "message": {
                                "type": "string"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          },
                          "image": {
                            "description": "Image information used when creating the deploy. Not present for Git-backed deploys",
                            "type": "object",
                            "properties": {
                              "ref": {
                                "description": "Image reference used when creating the deploy",
                                "type": "string"
                              },
                              "sha": {
                                "description": "SHA that the image reference was resolved to when creating the deploy",
                                "type": "string"
                              },
                              "registryCredential": {
                                "description": "Name of credential used to pull the image, if provided",
                                "type": "string"
                              }
                            }
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "created",
                              "build_in_progress",
                              "update_in_progress",
                              "live",
                              "deactivated",
                              "build_failed",
                              "update_failed",
                              "canceled",
                              "pre_deploy_in_progress",
                              "pre_deploy_failed"
                            ]
                          },
                          "trigger": {
                            "type": "string",
                            "enum": [
                              "api",
                              "blueprint_sync",
                              "deploy_hook",
                              "deployed_by_render",
                              "manual",
                              "other",
                              "new_commit",
                              "rollback",
                              "service_resumed",
                              "service_updated"
                            ]
                          },
                          "finishedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      },
                      "cursor": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Trigger a deploy",
        "operationId": "create-deploy",
        "tags": [
          "Deploys"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "clearCache": {
                    "type": "string",
                    "enum": [
                      "clear",
                      "do_not_clear"
                    ],
                    "default": "do_not_clear",
                    "description": "Defaults to \"do_not_clear\""
                  },
                  "commitId": {
                    "type": "string",
                    "description": "Specific ID of commit to deploy for a web service, defaults to latest commit. Not supported for Cron Job deploys."
                  },
                  "imageUrl": {
                    "type": "string",
                    "description": "URL of the image to deploy for an image-backed service. The host, repository, and image name must match the currently configured image for the service."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "commit": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "image": {
                      "description": "Image information used when creating the deploy. Not present for Git-backed deploys",
                      "type": "object",
                      "properties": {
                        "ref": {
                          "description": "Image reference used when creating the deploy",
                          "type": "string"
                        },
                        "sha": {
                          "description": "SHA that the image reference was resolved to when creating the deploy",
                          "type": "string"
                        },
                        "registryCredential": {
                          "description": "Name of credential used to pull the image, if provided",
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "created",
                        "build_in_progress",
                        "update_in_progress",
                        "live",
                        "deactivated",
                        "build_failed",
                        "update_failed",
                        "canceled",
                        "pre_deploy_in_progress",
                        "pre_deploy_failed"
                      ]
                    },
                    "trigger": {
                      "type": "string",
                      "enum": [
                        "api",
                        "blueprint_sync",
                        "deploy_hook",
                        "deployed_by_render",
                        "manual",
                        "other",
                        "new_commit",
                        "rollback",
                        "service_resumed",
                        "service_updated"
                      ]
                    },
                    "finishedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "The current state of the resource conflicts with this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}/deploys/{deployId}": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "deployId",
          "in": "path",
          "required": true,
          "description": "The ID of the deploy",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve deploy",
        "operationId": "get-deploy",
        "tags": [
          "Deploys"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "commit": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "image": {
                      "description": "Image information used when creating the deploy. Not present for Git-backed deploys",
                      "type": "object",
                      "properties": {
                        "ref": {
                          "description": "Image reference used when creating the deploy",
                          "type": "string"
                        },
                        "sha": {
                          "description": "SHA that the image reference was resolved to when creating the deploy",
                          "type": "string"
                        },
                        "registryCredential": {
                          "description": "Name of credential used to pull the image, if provided",
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "created",
                        "build_in_progress",
                        "update_in_progress",
                        "live",
                        "deactivated",
                        "build_failed",
                        "update_failed",
                        "canceled",
                        "pre_deploy_in_progress",
                        "pre_deploy_failed"
                      ]
                    },
                    "trigger": {
                      "type": "string",
                      "enum": [
                        "api",
                        "blueprint_sync",
                        "deploy_hook",
                        "deployed_by_render",
                        "manual",
                        "other",
                        "new_commit",
                        "rollback",
                        "service_resumed",
                        "service_updated"
                      ]
                    },
                    "finishedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}/deploys/{deployId}/cancel": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "deployId",
          "in": "path",
          "required": true,
          "description": "The ID of the deploy",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "Cancel deploy",
        "description": "This endpoint allows you to cancel a running deploy. Canceling cronjob deploys is currently not supported.",
        "operationId": "cancel-deploy",
        "tags": [
          "Deploys"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "commit": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "image": {
                      "description": "Image information used when creating the deploy. Not present for Git-backed deploys",
                      "type": "object",
                      "properties": {
                        "ref": {
                          "description": "Image reference used when creating the deploy",
                          "type": "string"
                        },
                        "sha": {
                          "description": "SHA that the image reference was resolved to when creating the deploy",
                          "type": "string"
                        },
                        "registryCredential": {
                          "description": "Name of credential used to pull the image, if provided",
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "created",
                        "build_in_progress",
                        "update_in_progress",
                        "live",
                        "deactivated",
                        "build_failed",
                        "update_failed",
                        "canceled",
                        "pre_deploy_in_progress",
                        "pre_deploy_failed"
                      ]
                    },
                    "trigger": {
                      "type": "string",
                      "enum": [
                        "api",
                        "blueprint_sync",
                        "deploy_hook",
                        "deployed_by_render",
                        "manual",
                        "other",
                        "new_commit",
                        "rollback",
                        "service_resumed",
                        "service_updated"
                      ]
                    },
                    "finishedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}/rollback": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "Rollback to a previous deploy",
        "description": "Trigger a rollback to a previous deploy",
        "operationId": "rollback-deploy",
        "tags": [
          "Deploys"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "deployId"
                ],
                "properties": {
                  "deployId": {
                    "type": "string",
                    "description": "The ID of the deploy to rollback to"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "commit": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "image": {
                      "description": "Image information used when creating the deploy. Not present for Git-backed deploys",
                      "type": "object",
                      "properties": {
                        "ref": {
                          "description": "Image reference used when creating the deploy",
                          "type": "string"
                        },
                        "sha": {
                          "description": "SHA that the image reference was resolved to when creating the deploy",
                          "type": "string"
                        },
                        "registryCredential": {
                          "description": "Name of credential used to pull the image, if provided",
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "created",
                        "build_in_progress",
                        "update_in_progress",
                        "live",
                        "deactivated",
                        "build_failed",
                        "update_failed",
                        "canceled",
                        "pre_deploy_in_progress",
                        "pre_deploy_failed"
                      ]
                    },
                    "trigger": {
                      "type": "string",
                      "enum": [
                        "api",
                        "blueprint_sync",
                        "deploy_hook",
                        "deployed_by_render",
                        "manual",
                        "other",
                        "new_commit",
                        "rollback",
                        "service_resumed",
                        "service_updated"
                      ]
                    },
                    "finishedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}/env-vars": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve environment variables",
        "operationId": "get-env-vars-for-service",
        "tags": [
          "Services"
        ],
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "description": "Cursor to begin retrieving entries for this query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Max number of items that can be returned",
            "schema": {
              "type": "number",
              "default": 20,
              "minimum": 1,
              "maximum": 100,
              "description": "Defaults to 20"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "envVar",
                      "cursor"
                    ],
                    "properties": {
                      "envVar": {
                        "type": "object",
                        "required": [
                          "key",
                          "value"
                        ],
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "cursor": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update environment variables",
        "description": "Replaces all environment variables for a service with the provided list of environment variables.",
        "operationId": "update-env-vars-for-service",
        "tags": [
          "Services"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "oneOf": [
                    {
                      "type": "object",
                      "required": [
                        "key",
                        "value"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "key",
                        "generateValue"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "generateValue": {
                          "type": "boolean"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "envVar",
                      "cursor"
                    ],
                    "properties": {
                      "envVar": {
                        "type": "object",
                        "required": [
                          "key",
                          "value"
                        ],
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "cursor": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}/headers": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve headers",
        "operationId": "retrieve-headers",
        "tags": [
          "Services / Headers"
        ],
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "description": "Filter for specific paths that headers apply to"
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "description": "Filter for header names"
          },
          {
            "name": "value",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "description": "Filter for header values"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "description": "Cursor to begin retrieving entries for this query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Max number of items that can be returned",
            "schema": {
              "type": "number",
              "default": 20,
              "minimum": 1,
              "maximum": 100,
              "description": "Defaults to 20"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "header",
                      "cursor"
                    ],
                    "properties": {
                      "header": {
                        "type": "object",
                        "required": [
                          "id",
                          "path",
                          "name",
                          "value"
                        ],
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "path": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "cursor": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}/routes": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve redirect and rewrite rules",
        "operationId": "retrieve-routes",
        "tags": [
          "Services / Routes"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "redirect",
                  "rewrite"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "description": "Filter for the type of route rule"
          },
          {
            "name": "source",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "description": "Filter for the source path of the route"
          },
          {
            "name": "destination",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "description": "Filter for the destination path of the route"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "description": "Cursor to begin retrieving entries for this query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Max number of items that can be returned",
            "schema": {
              "type": "number",
              "default": 20,
              "minimum": 1,
              "maximum": 100,
              "description": "Defaults to 20"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "route",
                      "cursor"
                    ],
                    "properties": {
                      "route": {
                        "type": "object",
                        "required": [
                          "id",
                          "type",
                          "source",
                          "destination",
                          "priority"
                        ],
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "redirect",
                              "rewrite"
                            ]
                          },
                          "source": {
                            "type": "string"
                          },
                          "destination": {
                            "type": "string"
                          },
                          "priority": {
                            "type": "integer",
                            "description": "Redirect and Rewrite Rules are applied in priority order starting at 0"
                          }
                        }
                      },
                      "cursor": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}/custom-domains": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "List custom domains",
        "operationId": "get-custom-domains",
        "tags": [
          "Custom Domains"
        ],
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "description": "Cursor to begin retrieving entries for this query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Max number of items that can be returned",
            "schema": {
              "type": "number",
              "default": 20,
              "minimum": 1,
              "maximum": 100,
              "description": "Defaults to 20"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "description": "Filter for the names of custom domain"
          },
          {
            "name": "domainType",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "apex",
                "subdomain"
              ]
            },
            "required": false,
            "description": "Filter for apex or subdomains"
          },
          {
            "name": "verificationStatus",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "verified",
                "unverified"
              ]
            },
            "required": false,
            "description": "Filter for verified or unverified custom domains"
          },
          {
            "name": "createdBefore",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for custom domains created before a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-06-17T08:15:30Z"
          },
          {
            "name": "createdAfter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for custom domains created after a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-02-17T08:15:30Z"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "required": [
                      "disk",
                      "cursor"
                    ],
                    "type": "object",
                    "properties": {
                      "customDomain": {
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "domainType",
                          "publicSuffix",
                          "verificationStatus",
                          "createdAt",
                          "redirectForName"
                        ],
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "domainType": {
                            "type": "string",
                            "enum": [
                              "apex",
                              "subdomain"
                            ]
                          },
                          "publicSuffix": {
                            "type": "string"
                          },
                          "redirectForName": {
                            "type": "string"
                          },
                          "verificationStatus": {
                            "type": "string",
                            "enum": [
                              "verified",
                              "unverified"
                            ]
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "server": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "cursor": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add custom domain",
        "operationId": "create-custom-domain",
        "tags": [
          "Custom Domains"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "domainType",
                      "publicSuffix",
                      "verificationStatus",
                      "createdAt",
                      "redirectForName"
                    ],
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "domainType": {
                        "type": "string",
                        "enum": [
                          "apex",
                          "subdomain"
                        ]
                      },
                      "publicSuffix": {
                        "type": "string"
                      },
                      "redirectForName": {
                        "type": "string"
                      },
                      "verificationStatus": {
                        "type": "string",
                        "enum": [
                          "verified",
                          "unverified"
                        ]
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "server": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "You must enter payment information to perform this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "The current state of the resource conflicts with this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}/custom-domains/{customDomainIdOrName}": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "customDomainIdOrName",
          "in": "path",
          "required": true,
          "description": "The ID or name of the custom domain",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve custom domain",
        "operationId": "get-custom-domain",
        "tags": [
          "Custom Domains"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "domainType",
                    "publicSuffix",
                    "verificationStatus",
                    "createdAt",
                    "redirectForName"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "domainType": {
                      "type": "string",
                      "enum": [
                        "apex",
                        "subdomain"
                      ]
                    },
                    "publicSuffix": {
                      "type": "string"
                    },
                    "redirectForName": {
                      "type": "string"
                    },
                    "verificationStatus": {
                      "type": "string",
                      "enum": [
                        "verified",
                        "unverified"
                      ]
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "server": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete custom domain",
        "operationId": "delete-custom-domain",
        "tags": [
          "Custom Domains"
        ],
        "responses": {
          "204": {
            "description": "Custom domain deleted"
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}/custom-domains/{customDomainIdOrName}/verify": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "customDomainIdOrName",
          "in": "path",
          "required": true,
          "description": "The ID or name of the custom domain",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "Verify DNS configuration",
        "operationId": "refresh-custom-domain",
        "tags": [
          "Custom Domains"
        ],
        "responses": {
          "202": {
            "description": "Custom domain verification triggered"
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}/suspend": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "Suspend service",
        "operationId": "suspend-service",
        "tags": [
          "Services"
        ],
        "responses": {
          "202": {
            "description": "Service suspended successfully"
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}/resume": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "Resume service",
        "operationId": "resume-service",
        "tags": [
          "Services"
        ],
        "responses": {
          "202": {
            "description": "Service resumed successfully"
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}/restart": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "Restart a server",
        "operationId": "restart-server",
        "tags": [
          "Services"
        ],
        "responses": {
          "200": {
            "description": "Server restarted"
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}/scale": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "Scale service to desired number of instances",
        "operationId": "scale-service",
        "tags": [
          "Services"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "numInstances"
                ],
                "properties": {
                  "numInstances": {
                    "type": "integer",
                    "example": 3
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Service scaled successfully"
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}/autoscaling": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "summary": "Update the autoscaling config for a service",
        "operationId": "autoscale-service",
        "tags": [
          "Services"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "enabled",
                  "min",
                  "max",
                  "criteria"
                ],
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "default": false
                  },
                  "min": {
                    "type": "integer",
                    "description": "The minimum number of instances for the service"
                  },
                  "max": {
                    "type": "integer",
                    "description": "The maximum number of instances for the service"
                  },
                  "criteria": {
                    "type": "object",
                    "required": [
                      "cpu",
                      "memory"
                    ],
                    "properties": {
                      "cpu": {
                        "type": "object",
                        "required": [
                          "enabled",
                          "percentage"
                        ],
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "default": false
                          },
                          "percentage": {
                            "type": "integer",
                            "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                          }
                        }
                      },
                      "memory": {
                        "type": "object",
                        "required": [
                          "enabled",
                          "percentage"
                        ],
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "default": false
                          },
                          "percentage": {
                            "type": "integer",
                            "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Autoscaling configuration updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "enabled",
                    "min",
                    "max",
                    "criteria"
                  ],
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    },
                    "min": {
                      "type": "integer",
                      "description": "The minimum number of instances for the service"
                    },
                    "max": {
                      "type": "integer",
                      "description": "The maximum number of instances for the service"
                    },
                    "criteria": {
                      "type": "object",
                      "required": [
                        "cpu",
                        "memory"
                      ],
                      "properties": {
                        "cpu": {
                          "type": "object",
                          "required": [
                            "enabled",
                            "percentage"
                          ],
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "default": false
                            },
                            "percentage": {
                              "type": "integer",
                              "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                            }
                          }
                        },
                        "memory": {
                          "type": "object",
                          "required": [
                            "enabled",
                            "percentage"
                          ],
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "default": false
                            },
                            "percentage": {
                              "type": "integer",
                              "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}/preview": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "Create preview for image-backed service",
        "description": "Creates a build preview instance for an image-backed service. The preview uses the settings of the base service (referenced by `serviceId`), except settings overridden via provided parameters. You can view all active previews from your service's Previews tab on the Render Dashboard. Note that you can't create previews for Git-backed services using the Render API.",
        "operationId": "preview-service",
        "tags": [
          "Services"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "imagePath"
                ],
                "properties": {
                  "imagePath": {
                    "type": "string",
                    "example": "docker.io/library/nginx:latest",
                    "description": "Must be either a full URL or the relative path to an image. If a relative path, Render uses the base service's image URL as its root. For example, if the base service's image URL is `docker.io/library/nginx:latest`, then valid values are: `docker.io/library/nginx:<any tag or SHA>`, `library/nginx:<any tag or SHA>`, or `nginx:<any tag or SHA>`. Note that the path must match (only the tag or SHA can vary)."
                  },
                  "name": {
                    "type": "string",
                    "example": "preview",
                    "description": "A name for the service preview instance. If not specified, Render generates the name using the base service's name and the specified tag or SHA."
                  },
                  "plan": {
                    "type": "string",
                    "enum": [
                      "starter",
                      "starter_plus",
                      "standard",
                      "standard_plus",
                      "pro",
                      "pro_plus",
                      "pro_max",
                      "pro_ultra",
                      "free",
                      "custom"
                    ],
                    "example": "starter",
                    "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "service": {
                      "type": "object",
                      "required": [
                        "id",
                        "name",
                        "ownerId",
                        "type",
                        "createdAt",
                        "updatedAt",
                        "suspended",
                        "suspenders",
                        "autoDeploy",
                        "notifyOnFail",
                        "slug",
                        "serviceDetails",
                        "rootDir"
                      ],
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "autoDeploy": {
                          "type": "string",
                          "enum": [
                            "yes",
                            "no"
                          ]
                        },
                        "branch": {
                          "type": "string"
                        },
                        "buildFilter": {
                          "type": "object",
                          "required": [
                            "paths",
                            "ignoredPaths"
                          ],
                          "properties": {
                            "paths": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "ignoredPaths": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "environmentId": {
                          "type": "string"
                        },
                        "imagePath": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "notifyOnFail": {
                          "type": "string",
                          "enum": [
                            "default",
                            "notify",
                            "ignore"
                          ]
                        },
                        "ownerId": {
                          "type": "string"
                        },
                        "registryCredential": {
                          "type": "object",
                          "required": [
                            "id",
                            "name"
                          ],
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "repo": {
                          "type": "string",
                          "example": "https://github.com/render-examples/flask-hello-world"
                        },
                        "rootDir": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "suspended": {
                          "type": "string",
                          "enum": [
                            "suspended",
                            "not_suspended"
                          ]
                        },
                        "suspenders": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "admin",
                              "billing",
                              "user",
                              "parent_service",
                              "unknown"
                            ]
                          }
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "static_site",
                            "web_service",
                            "private_service",
                            "background_worker",
                            "cron_job"
                          ]
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "serviceDetails": {
                          "oneOf": [
                            {
                              "type": "object",
                              "required": [
                                "buildCommand",
                                "publishPath",
                                "pullRequestPreviewsEnabled",
                                "url",
                                "buildPlan"
                              ],
                              "properties": {
                                "buildCommand": {
                                  "type": "string"
                                },
                                "parentServer": {
                                  "required": [
                                    "id",
                                    "name"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "publishPath": {
                                  "type": "string"
                                },
                                "pullRequestPreviewsEnabled": {
                                  "type": "string",
                                  "enum": [
                                    "yes",
                                    "no"
                                  ]
                                },
                                "url": {
                                  "type": "string"
                                },
                                "buildPlan": {
                                  "type": "string",
                                  "enum": [
                                    "starter",
                                    "performance"
                                  ],
                                  "default": "starter"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "env",
                                "envSpecificDetails",
                                "plan",
                                "region",
                                "pullRequestPreviewsEnabled",
                                "numInstances",
                                "buildPlan",
                                "healthCheckPath",
                                "openPorts",
                                "url"
                              ],
                              "properties": {
                                "autoscaling": {
                                  "type": "object",
                                  "required": [
                                    "enabled",
                                    "min",
                                    "max",
                                    "criteria"
                                  ],
                                  "properties": {
                                    "enabled": {
                                      "type": "boolean",
                                      "default": false
                                    },
                                    "min": {
                                      "type": "integer",
                                      "description": "The minimum number of instances for the service"
                                    },
                                    "max": {
                                      "type": "integer",
                                      "description": "The maximum number of instances for the service"
                                    },
                                    "criteria": {
                                      "type": "object",
                                      "required": [
                                        "cpu",
                                        "memory"
                                      ],
                                      "properties": {
                                        "cpu": {
                                          "type": "object",
                                          "required": [
                                            "enabled",
                                            "percentage"
                                          ],
                                          "properties": {
                                            "enabled": {
                                              "type": "boolean",
                                              "default": false
                                            },
                                            "percentage": {
                                              "type": "integer",
                                              "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                            }
                                          }
                                        },
                                        "memory": {
                                          "type": "object",
                                          "required": [
                                            "enabled",
                                            "percentage"
                                          ],
                                          "properties": {
                                            "enabled": {
                                              "type": "boolean",
                                              "default": false
                                            },
                                            "percentage": {
                                              "type": "integer",
                                              "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "disk": {
                                  "type": "object",
                                  "required": [
                                    "id",
                                    "name",
                                    "sizeGB",
                                    "mountPath"
                                  ],
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "sizeGB": {
                                      "type": "integer"
                                    },
                                    "mountPath": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "env": {
                                  "type": "string",
                                  "enum": [
                                    "docker",
                                    "elixir",
                                    "go",
                                    "node",
                                    "python",
                                    "ruby",
                                    "rust",
                                    "image"
                                  ],
                                  "description": "Environment (runtime)"
                                },
                                "envSpecificDetails": {
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "dockerCommand",
                                        "dockerContext",
                                        "dockerfilePath"
                                      ],
                                      "properties": {
                                        "dockerCommand": {
                                          "type": "string"
                                        },
                                        "dockerContext": {
                                          "type": "string"
                                        },
                                        "dockerfilePath": {
                                          "type": "string"
                                        },
                                        "preDeployCommand": {
                                          "type": "string"
                                        },
                                        "registryCredential": {
                                          "type": "object",
                                          "required": [
                                            "id",
                                            "name",
                                            "username",
                                            "registry"
                                          ],
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "Unique identifier for this credential"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Descriptive name for this credential"
                                            },
                                            "registry": {
                                              "type": "string",
                                              "enum": [
                                                "GITHUB",
                                                "GITLAB",
                                                "DOCKER"
                                              ],
                                              "description": "The registry to use this credential with"
                                            },
                                            "username": {
                                              "type": "string",
                                              "description": "The username associated with the credential"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "buildCommand",
                                        "startCommand"
                                      ],
                                      "properties": {
                                        "buildCommand": {
                                          "type": "string"
                                        },
                                        "startCommand": {
                                          "type": "string"
                                        },
                                        "preDeployCommand": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "healthCheckPath": {
                                  "type": "string"
                                },
                                "numInstances": {
                                  "type": "integer",
                                  "description": "For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."
                                },
                                "openPorts": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "port",
                                      "protocol"
                                    ],
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "example": 10000
                                      },
                                      "protocol": {
                                        "type": "string",
                                        "enum": [
                                          "TCP",
                                          "UDP"
                                        ]
                                      }
                                    }
                                  }
                                },
                                "parentServer": {
                                  "required": [
                                    "id",
                                    "name"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "plan": {
                                  "type": "string",
                                  "enum": [
                                    "starter",
                                    "starter_plus",
                                    "standard",
                                    "standard_plus",
                                    "pro",
                                    "pro_plus",
                                    "pro_max",
                                    "pro_ultra",
                                    "free",
                                    "custom"
                                  ],
                                  "example": "starter",
                                  "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                                },
                                "pullRequestPreviewsEnabled": {
                                  "type": "string",
                                  "enum": [
                                    "yes",
                                    "no"
                                  ]
                                },
                                "region": {
                                  "type": "string",
                                  "enum": [
                                    "frankfurt",
                                    "oregon",
                                    "ohio",
                                    "singapore"
                                  ],
                                  "default": "oregon",
                                  "description": "Defaults to \"oregon\""
                                },
                                "url": {
                                  "type": "string"
                                },
                                "buildPlan": {
                                  "type": "string",
                                  "enum": [
                                    "starter",
                                    "performance"
                                  ],
                                  "default": "starter"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "env",
                                "envSpecificDetails",
                                "plan",
                                "region",
                                "pullRequestPreviewsEnabled",
                                "numInstances",
                                "buildPlan",
                                "openPorts",
                                "url"
                              ],
                              "properties": {
                                "autoscaling": {
                                  "type": "object",
                                  "required": [
                                    "enabled",
                                    "min",
                                    "max",
                                    "criteria"
                                  ],
                                  "properties": {
                                    "enabled": {
                                      "type": "boolean",
                                      "default": false
                                    },
                                    "min": {
                                      "type": "integer",
                                      "description": "The minimum number of instances for the service"
                                    },
                                    "max": {
                                      "type": "integer",
                                      "description": "The maximum number of instances for the service"
                                    },
                                    "criteria": {
                                      "type": "object",
                                      "required": [
                                        "cpu",
                                        "memory"
                                      ],
                                      "properties": {
                                        "cpu": {
                                          "type": "object",
                                          "required": [
                                            "enabled",
                                            "percentage"
                                          ],
                                          "properties": {
                                            "enabled": {
                                              "type": "boolean",
                                              "default": false
                                            },
                                            "percentage": {
                                              "type": "integer",
                                              "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                            }
                                          }
                                        },
                                        "memory": {
                                          "type": "object",
                                          "required": [
                                            "enabled",
                                            "percentage"
                                          ],
                                          "properties": {
                                            "enabled": {
                                              "type": "boolean",
                                              "default": false
                                            },
                                            "percentage": {
                                              "type": "integer",
                                              "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "disk": {
                                  "type": "object",
                                  "required": [
                                    "id",
                                    "name",
                                    "sizeGB",
                                    "mountPath"
                                  ],
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "sizeGB": {
                                      "type": "integer"
                                    },
                                    "mountPath": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "env": {
                                  "type": "string",
                                  "enum": [
                                    "docker",
                                    "elixir",
                                    "go",
                                    "node",
                                    "python",
                                    "ruby",
                                    "rust",
                                    "image"
                                  ],
                                  "description": "Environment (runtime)"
                                },
                                "envSpecificDetails": {
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "dockerCommand",
                                        "dockerContext",
                                        "dockerfilePath"
                                      ],
                                      "properties": {
                                        "dockerCommand": {
                                          "type": "string"
                                        },
                                        "dockerContext": {
                                          "type": "string"
                                        },
                                        "dockerfilePath": {
                                          "type": "string"
                                        },
                                        "preDeployCommand": {
                                          "type": "string"
                                        },
                                        "registryCredential": {
                                          "type": "object",
                                          "required": [
                                            "id",
                                            "name",
                                            "username",
                                            "registry"
                                          ],
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "Unique identifier for this credential"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Descriptive name for this credential"
                                            },
                                            "registry": {
                                              "type": "string",
                                              "enum": [
                                                "GITHUB",
                                                "GITLAB",
                                                "DOCKER"
                                              ],
                                              "description": "The registry to use this credential with"
                                            },
                                            "username": {
                                              "type": "string",
                                              "description": "The username associated with the credential"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "buildCommand",
                                        "startCommand"
                                      ],
                                      "properties": {
                                        "buildCommand": {
                                          "type": "string"
                                        },
                                        "startCommand": {
                                          "type": "string"
                                        },
                                        "preDeployCommand": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "numInstances": {
                                  "type": "integer",
                                  "description": "For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."
                                },
                                "openPorts": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "port",
                                      "protocol"
                                    ],
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "example": 10000
                                      },
                                      "protocol": {
                                        "type": "string",
                                        "enum": [
                                          "TCP",
                                          "UDP"
                                        ]
                                      }
                                    }
                                  }
                                },
                                "parentServer": {
                                  "required": [
                                    "id",
                                    "name"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "plan": {
                                  "type": "string",
                                  "enum": [
                                    "starter",
                                    "starter_plus",
                                    "standard",
                                    "standard_plus",
                                    "pro",
                                    "pro_plus",
                                    "pro_max",
                                    "pro_ultra",
                                    "free",
                                    "custom"
                                  ],
                                  "example": "starter",
                                  "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                                },
                                "pullRequestPreviewsEnabled": {
                                  "type": "string",
                                  "enum": [
                                    "yes",
                                    "no"
                                  ]
                                },
                                "region": {
                                  "type": "string",
                                  "enum": [
                                    "frankfurt",
                                    "oregon",
                                    "ohio",
                                    "singapore"
                                  ],
                                  "default": "oregon",
                                  "description": "Defaults to \"oregon\""
                                },
                                "url": {
                                  "type": "string"
                                },
                                "buildPlan": {
                                  "type": "string",
                                  "enum": [
                                    "starter",
                                    "performance"
                                  ],
                                  "default": "starter"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "env",
                                "envSpecificDetails",
                                "plan",
                                "region",
                                "pullRequestPreviewsEnabled",
                                "numInstances",
                                "buildPlan"
                              ],
                              "properties": {
                                "autoscaling": {
                                  "type": "object",
                                  "required": [
                                    "enabled",
                                    "min",
                                    "max",
                                    "criteria"
                                  ],
                                  "properties": {
                                    "enabled": {
                                      "type": "boolean",
                                      "default": false
                                    },
                                    "min": {
                                      "type": "integer",
                                      "description": "The minimum number of instances for the service"
                                    },
                                    "max": {
                                      "type": "integer",
                                      "description": "The maximum number of instances for the service"
                                    },
                                    "criteria": {
                                      "type": "object",
                                      "required": [
                                        "cpu",
                                        "memory"
                                      ],
                                      "properties": {
                                        "cpu": {
                                          "type": "object",
                                          "required": [
                                            "enabled",
                                            "percentage"
                                          ],
                                          "properties": {
                                            "enabled": {
                                              "type": "boolean",
                                              "default": false
                                            },
                                            "percentage": {
                                              "type": "integer",
                                              "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                            }
                                          }
                                        },
                                        "memory": {
                                          "type": "object",
                                          "required": [
                                            "enabled",
                                            "percentage"
                                          ],
                                          "properties": {
                                            "enabled": {
                                              "type": "boolean",
                                              "default": false
                                            },
                                            "percentage": {
                                              "type": "integer",
                                              "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "disk": {
                                  "type": "object",
                                  "required": [
                                    "id",
                                    "name",
                                    "sizeGB",
                                    "mountPath"
                                  ],
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "sizeGB": {
                                      "type": "integer"
                                    },
                                    "mountPath": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "env": {
                                  "type": "string",
                                  "enum": [
                                    "docker",
                                    "elixir",
                                    "go",
                                    "node",
                                    "python",
                                    "ruby",
                                    "rust",
                                    "image"
                                  ],
                                  "description": "Environment (runtime)"
                                },
                                "envSpecificDetails": {
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "dockerCommand",
                                        "dockerContext",
                                        "dockerfilePath"
                                      ],
                                      "properties": {
                                        "dockerCommand": {
                                          "type": "string"
                                        },
                                        "dockerContext": {
                                          "type": "string"
                                        },
                                        "dockerfilePath": {
                                          "type": "string"
                                        },
                                        "preDeployCommand": {
                                          "type": "string"
                                        },
                                        "registryCredential": {
                                          "type": "object",
                                          "required": [
                                            "id",
                                            "name",
                                            "username",
                                            "registry"
                                          ],
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "Unique identifier for this credential"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Descriptive name for this credential"
                                            },
                                            "registry": {
                                              "type": "string",
                                              "enum": [
                                                "GITHUB",
                                                "GITLAB",
                                                "DOCKER"
                                              ],
                                              "description": "The registry to use this credential with"
                                            },
                                            "username": {
                                              "type": "string",
                                              "description": "The username associated with the credential"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "buildCommand",
                                        "startCommand"
                                      ],
                                      "properties": {
                                        "buildCommand": {
                                          "type": "string"
                                        },
                                        "startCommand": {
                                          "type": "string"
                                        },
                                        "preDeployCommand": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "numInstances": {
                                  "type": "integer",
                                  "description": "For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."
                                },
                                "parentServer": {
                                  "required": [
                                    "id",
                                    "name"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "plan": {
                                  "type": "string",
                                  "enum": [
                                    "starter",
                                    "starter_plus",
                                    "standard",
                                    "standard_plus",
                                    "pro",
                                    "pro_plus",
                                    "pro_max",
                                    "pro_ultra",
                                    "free",
                                    "custom"
                                  ],
                                  "example": "starter",
                                  "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                                },
                                "pullRequestPreviewsEnabled": {
                                  "type": "string",
                                  "enum": [
                                    "yes",
                                    "no"
                                  ]
                                },
                                "region": {
                                  "type": "string",
                                  "enum": [
                                    "frankfurt",
                                    "oregon",
                                    "ohio",
                                    "singapore"
                                  ],
                                  "default": "oregon",
                                  "description": "Defaults to \"oregon\""
                                },
                                "buildPlan": {
                                  "type": "string",
                                  "enum": [
                                    "starter",
                                    "performance"
                                  ],
                                  "default": "starter"
                                }
                              }
                            },
                            {
                              "required": [
                                "env",
                                "envSpecificDetails",
                                "plan",
                                "region",
                                "schedule",
                                "buildPlan"
                              ],
                              "type": "object",
                              "properties": {
                                "env": {
                                  "type": "string",
                                  "enum": [
                                    "docker",
                                    "elixir",
                                    "go",
                                    "node",
                                    "python",
                                    "ruby",
                                    "rust",
                                    "image"
                                  ],
                                  "description": "Environment (runtime)"
                                },
                                "envSpecificDetails": {
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "dockerCommand",
                                        "dockerContext",
                                        "dockerfilePath"
                                      ],
                                      "properties": {
                                        "dockerCommand": {
                                          "type": "string"
                                        },
                                        "dockerContext": {
                                          "type": "string"
                                        },
                                        "dockerfilePath": {
                                          "type": "string"
                                        },
                                        "preDeployCommand": {
                                          "type": "string"
                                        },
                                        "registryCredential": {
                                          "type": "object",
                                          "required": [
                                            "id",
                                            "name",
                                            "username",
                                            "registry"
                                          ],
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "Unique identifier for this credential"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Descriptive name for this credential"
                                            },
                                            "registry": {
                                              "type": "string",
                                              "enum": [
                                                "GITHUB",
                                                "GITLAB",
                                                "DOCKER"
                                              ],
                                              "description": "The registry to use this credential with"
                                            },
                                            "username": {
                                              "type": "string",
                                              "description": "The username associated with the credential"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "buildCommand",
                                        "startCommand"
                                      ],
                                      "properties": {
                                        "buildCommand": {
                                          "type": "string"
                                        },
                                        "startCommand": {
                                          "type": "string"
                                        },
                                        "preDeployCommand": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "lastSuccessfulRunAt": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "plan": {
                                  "type": "string",
                                  "enum": [
                                    "starter",
                                    "starter_plus",
                                    "standard",
                                    "standard_plus",
                                    "pro",
                                    "pro_plus",
                                    "pro_max",
                                    "pro_ultra",
                                    "free",
                                    "custom"
                                  ],
                                  "example": "starter",
                                  "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                                },
                                "region": {
                                  "type": "string",
                                  "enum": [
                                    "frankfurt",
                                    "oregon",
                                    "ohio",
                                    "singapore"
                                  ],
                                  "default": "oregon",
                                  "description": "Defaults to \"oregon\""
                                },
                                "schedule": {
                                  "type": "string"
                                },
                                "buildPlan": {
                                  "type": "string",
                                  "enum": [
                                    "starter",
                                    "performance"
                                  ],
                                  "default": "starter"
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    "deployId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}/jobs": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "List jobs",
        "operationId": "list-job",
        "tags": [
          "Jobs"
        ],
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "description": "Cursor to begin retrieving entries for this query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Max number of items that can be returned",
            "schema": {
              "type": "number",
              "default": 20,
              "minimum": 1,
              "maximum": 100,
              "description": "Defaults to 20"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "pending",
                  "running",
                  "succeeded",
                  "failed"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "description": "Filter for the status of the job (`pending`, `running`, `succeeded`, or `failed`)"
          },
          {
            "name": "createdBefore",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for jobs created before a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-06-17T08:15:30Z"
          },
          {
            "name": "createdAfter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for jobs created after a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-02-17T08:15:30Z"
          },
          {
            "name": "startedBefore",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for jobs started before a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-06-17T08:15:30Z"
          },
          {
            "name": "startedAfter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for jobs started after a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-02-17T08:15:30Z"
          },
          {
            "name": "finishedBefore",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for jobs finished before a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-06-17T08:15:30Z"
          },
          {
            "name": "finishedAfter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for jobs finished after a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-02-17T08:15:30Z"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "job": {
                        "type": "object",
                        "required": [
                          "id",
                          "serviceId",
                          "startCommand",
                          "planId",
                          "createdAt"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "job-xxxxx"
                          },
                          "serviceId": {
                            "type": "string",
                            "example": "srv-xxxxx"
                          },
                          "startCommand": {
                            "type": "string",
                            "example": "echo 'hello world'"
                          },
                          "planId": {
                            "type": "string",
                            "example": "plan-srv-004"
                          },
                          "status": {
                            "type": "string",
                            "example": "succeeded"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2021-07-15T07:20:05.777035-07:00"
                          },
                          "startedAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2021-07-15T07:20:05.777035-07:00"
                          },
                          "finishedAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2021-07-15T07:20:05.777035-07:00"
                          }
                        }
                      },
                      "cursor": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create job",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "startCommand"
                ],
                "properties": {
                  "startCommand": {
                    "type": "string"
                  },
                  "planId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "operationId": "post-job",
        "tags": [
          "Jobs"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "serviceId",
                    "startCommand",
                    "planId",
                    "createdAt"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "job-xxxxx"
                    },
                    "serviceId": {
                      "type": "string",
                      "example": "srv-xxxxx"
                    },
                    "startCommand": {
                      "type": "string",
                      "example": "echo 'hello world'"
                    },
                    "planId": {
                      "type": "string",
                      "example": "plan-srv-004"
                    },
                    "status": {
                      "type": "string",
                      "example": "succeeded"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-07-15T07:20:05.777035-07:00"
                    },
                    "startedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-07-15T07:20:05.777035-07:00"
                    },
                    "finishedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-07-15T07:20:05.777035-07:00"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}/jobs/{jobId}": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "jobId",
          "in": "path",
          "required": true,
          "description": "The ID of the job",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve job",
        "operationId": "get-job",
        "tags": [
          "Jobs"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "serviceId",
                    "startCommand",
                    "planId",
                    "createdAt"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "job-xxxxx"
                    },
                    "serviceId": {
                      "type": "string",
                      "example": "srv-xxxxx"
                    },
                    "startCommand": {
                      "type": "string",
                      "example": "echo 'hello world'"
                    },
                    "planId": {
                      "type": "string",
                      "example": "plan-srv-004"
                    },
                    "status": {
                      "type": "string",
                      "example": "succeeded"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-07-15T07:20:05.777035-07:00"
                    },
                    "startedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-07-15T07:20:05.777035-07:00"
                    },
                    "finishedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-07-15T07:20:05.777035-07:00"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}/jobs/{jobId}/cancel": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "jobId",
          "in": "path",
          "required": true,
          "description": "The ID of the job",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "Cancel running job",
        "operationId": "cancel-job",
        "tags": [
          "Jobs"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "serviceId",
                    "startCommand",
                    "planId",
                    "createdAt"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "job-xxxxx"
                    },
                    "serviceId": {
                      "type": "string",
                      "example": "srv-xxxxx"
                    },
                    "startCommand": {
                      "type": "string",
                      "example": "echo 'hello world'"
                    },
                    "planId": {
                      "type": "string",
                      "example": "plan-srv-004"
                    },
                    "status": {
                      "type": "string",
                      "example": "succeeded"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-07-15T07:20:05.777035-07:00"
                    },
                    "startedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-07-15T07:20:05.777035-07:00"
                    },
                    "finishedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2021-07-15T07:20:05.777035-07:00"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/cpu": {
      "parameters": [
        {
          "name": "startTime",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time",
            "example": "2021-06-17T08:15:30Z"
          },
          "required": false,
          "description": "Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."
        },
        {
          "name": "endTime",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time",
            "example": "2021-06-17T08:30:30Z"
          },
          "required": false,
          "description": "Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."
        },
        {
          "name": "resolutionSeconds",
          "in": "query",
          "schema": {
            "type": "number",
            "minimum": 30,
            "example": 60,
            "default": 60
          },
          "required": false,
          "description": "The resolution of the returned data"
        },
        {
          "name": "service",
          "in": "query",
          "required": true,
          "description": "Service ID to query. When multiple service query params are provided, they are ORed together",
          "schema": {
            "type": "string",
            "example": "srv-xxxxx"
          }
        },
        {
          "name": "instance",
          "in": "query",
          "required": false,
          "description": "Instance ID to query. When multiple instance ID query params are provided, they are ORed together",
          "schema": {
            "type": "string",
            "example": "srv-xxxxx-yyyy"
          }
        },
        {
          "name": "aggregationMethod",
          "in": "query",
          "required": false,
          "description": "The aggregation method to apply to multiple time series",
          "schema": {
            "type": "string",
            "enum": [
              "AVG",
              "MAX",
              "MIN"
            ]
          }
        }
      ],
      "get": {
        "summary": "Get CPU usage for one or more services",
        "operationId": "get-cpu",
        "tags": [
          "Metrics"
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "A collection of time series",
                  "required": [
                    "items"
                  ],
                  "items": {
                    "type": "object",
                    "description": "A time series data point",
                    "required": [
                      "labels",
                      "values",
                      "unit"
                    ],
                    "properties": {
                      "labels": {
                        "type": "array",
                        "description": "List of labels describing the time series",
                        "items": {
                          "type": "object",
                          "description": "A time series datapoint label",
                          "required": [
                            "field",
                            "value"
                          ],
                          "properties": {
                            "field": {
                              "type": "string",
                              "example": "service"
                            },
                            "value": {
                              "type": "string",
                              "example": "srv-xxxxx"
                            }
                          }
                        }
                      },
                      "values": {
                        "type": "array",
                        "description": "The values of the time series",
                        "items": {
                          "description": "A time series datapoint value",
                          "type": "object",
                          "required": [
                            "timestamp",
                            "value",
                            "unit"
                          ],
                          "properties": {
                            "timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2021-06-17T08:15:30Z"
                            },
                            "value": {
                              "type": "number",
                              "example": 1
                            }
                          }
                        }
                      },
                      "unit": {
                        "type": "string",
                        "example": "GB"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/cpu-limit": {
      "parameters": [
        {
          "name": "startTime",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time",
            "example": "2021-06-17T08:15:30Z"
          },
          "required": false,
          "description": "Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."
        },
        {
          "name": "endTime",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time",
            "example": "2021-06-17T08:30:30Z"
          },
          "required": false,
          "description": "Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."
        },
        {
          "name": "resolutionSeconds",
          "in": "query",
          "schema": {
            "type": "number",
            "minimum": 30,
            "example": 60,
            "default": 60
          },
          "required": false,
          "description": "The resolution of the returned data"
        },
        {
          "name": "service",
          "in": "query",
          "required": true,
          "description": "Service ID to query. When multiple service query params are provided, they are ORed together",
          "schema": {
            "type": "string",
            "example": "srv-xxxxx"
          }
        },
        {
          "name": "instance",
          "in": "query",
          "required": false,
          "description": "Instance ID to query. When multiple instance ID query params are provided, they are ORed together",
          "schema": {
            "type": "string",
            "example": "srv-xxxxx-yyyy"
          }
        }
      ],
      "get": {
        "summary": "Get CPU limit for one or more services",
        "operationId": "get-cpu-limit",
        "tags": [
          "Metrics"
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "A collection of time series",
                  "required": [
                    "items"
                  ],
                  "items": {
                    "type": "object",
                    "description": "A time series data point",
                    "required": [
                      "labels",
                      "values",
                      "unit"
                    ],
                    "properties": {
                      "labels": {
                        "type": "array",
                        "description": "List of labels describing the time series",
                        "items": {
                          "type": "object",
                          "description": "A time series datapoint label",
                          "required": [
                            "field",
                            "value"
                          ],
                          "properties": {
                            "field": {
                              "type": "string",
                              "example": "service"
                            },
                            "value": {
                              "type": "string",
                              "example": "srv-xxxxx"
                            }
                          }
                        }
                      },
                      "values": {
                        "type": "array",
                        "description": "The values of the time series",
                        "items": {
                          "description": "A time series datapoint value",
                          "type": "object",
                          "required": [
                            "timestamp",
                            "value",
                            "unit"
                          ],
                          "properties": {
                            "timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2021-06-17T08:15:30Z"
                            },
                            "value": {
                              "type": "number",
                              "example": 1
                            }
                          }
                        }
                      },
                      "unit": {
                        "type": "string",
                        "example": "GB"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/cpu-target": {
      "parameters": [
        {
          "name": "startTime",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time",
            "example": "2021-06-17T08:15:30Z"
          },
          "required": false,
          "description": "Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."
        },
        {
          "name": "endTime",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time",
            "example": "2021-06-17T08:30:30Z"
          },
          "required": false,
          "description": "Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."
        },
        {
          "name": "resolutionSeconds",
          "in": "query",
          "schema": {
            "type": "number",
            "minimum": 30,
            "example": 60,
            "default": 60
          },
          "required": false,
          "description": "The resolution of the returned data"
        },
        {
          "name": "service",
          "in": "query",
          "required": true,
          "description": "Service ID to query. When multiple service query params are provided, they are ORed together",
          "schema": {
            "type": "string",
            "example": "srv-xxxxx"
          }
        },
        {
          "name": "instance",
          "in": "query",
          "required": false,
          "description": "Instance ID to query. When multiple instance ID query params are provided, they are ORed together",
          "schema": {
            "type": "string",
            "example": "srv-xxxxx-yyyy"
          }
        }
      ],
      "get": {
        "summary": "Get CPU target for one or more services",
        "operationId": "get-cpu-target",
        "tags": [
          "Metrics"
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "A collection of time series",
                  "required": [
                    "items"
                  ],
                  "items": {
                    "type": "object",
                    "description": "A time series data point",
                    "required": [
                      "labels",
                      "values",
                      "unit"
                    ],
                    "properties": {
                      "labels": {
                        "type": "array",
                        "description": "List of labels describing the time series",
                        "items": {
                          "type": "object",
                          "description": "A time series datapoint label",
                          "required": [
                            "field",
                            "value"
                          ],
                          "properties": {
                            "field": {
                              "type": "string",
                              "example": "service"
                            },
                            "value": {
                              "type": "string",
                              "example": "srv-xxxxx"
                            }
                          }
                        }
                      },
                      "values": {
                        "type": "array",
                        "description": "The values of the time series",
                        "items": {
                          "description": "A time series datapoint value",
                          "type": "object",
                          "required": [
                            "timestamp",
                            "value",
                            "unit"
                          ],
                          "properties": {
                            "timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2021-06-17T08:15:30Z"
                            },
                            "value": {
                              "type": "number",
                              "example": 1
                            }
                          }
                        }
                      },
                      "unit": {
                        "type": "string",
                        "example": "GB"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/memory": {
      "parameters": [
        {
          "name": "startTime",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time",
            "example": "2021-06-17T08:15:30Z"
          },
          "required": false,
          "description": "Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."
        },
        {
          "name": "endTime",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time",
            "example": "2021-06-17T08:30:30Z"
          },
          "required": false,
          "description": "Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."
        },
        {
          "name": "resolutionSeconds",
          "in": "query",
          "schema": {
            "type": "number",
            "minimum": 30,
            "example": 60,
            "default": 60
          },
          "required": false,
          "description": "The resolution of the returned data"
        },
        {
          "name": "service",
          "in": "query",
          "required": true,
          "description": "Service ID to query. When multiple service query params are provided, they are ORed together",
          "schema": {
            "type": "string",
            "example": "srv-xxxxx"
          }
        },
        {
          "name": "instance",
          "in": "query",
          "required": false,
          "description": "Instance ID to query. When multiple instance ID query params are provided, they are ORed together",
          "schema": {
            "type": "string",
            "example": "srv-xxxxx-yyyy"
          }
        }
      ],
      "get": {
        "summary": "Get memory usage for one or more services",
        "operationId": "get-memory",
        "tags": [
          "Metrics"
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "A collection of time series",
                  "required": [
                    "items"
                  ],
                  "items": {
                    "type": "object",
                    "description": "A time series data point",
                    "required": [
                      "labels",
                      "values",
                      "unit"
                    ],
                    "properties": {
                      "labels": {
                        "type": "array",
                        "description": "List of labels describing the time series",
                        "items": {
                          "type": "object",
                          "description": "A time series datapoint label",
                          "required": [
                            "field",
                            "value"
                          ],
                          "properties": {
                            "field": {
                              "type": "string",
                              "example": "service"
                            },
                            "value": {
                              "type": "string",
                              "example": "srv-xxxxx"
                            }
                          }
                        }
                      },
                      "values": {
                        "type": "array",
                        "description": "The values of the time series",
                        "items": {
                          "description": "A time series datapoint value",
                          "type": "object",
                          "required": [
                            "timestamp",
                            "value",
                            "unit"
                          ],
                          "properties": {
                            "timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2021-06-17T08:15:30Z"
                            },
                            "value": {
                              "type": "number",
                              "example": 1
                            }
                          }
                        }
                      },
                      "unit": {
                        "type": "string",
                        "example": "GB"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/memory-limit": {
      "parameters": [
        {
          "name": "startTime",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time",
            "example": "2021-06-17T08:15:30Z"
          },
          "required": false,
          "description": "Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."
        },
        {
          "name": "endTime",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time",
            "example": "2021-06-17T08:30:30Z"
          },
          "required": false,
          "description": "Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."
        },
        {
          "name": "resolutionSeconds",
          "in": "query",
          "schema": {
            "type": "number",
            "minimum": 30,
            "example": 60,
            "default": 60
          },
          "required": false,
          "description": "The resolution of the returned data"
        },
        {
          "name": "service",
          "in": "query",
          "required": true,
          "description": "Service ID to query. When multiple service query params are provided, they are ORed together",
          "schema": {
            "type": "string",
            "example": "srv-xxxxx"
          }
        },
        {
          "name": "instance",
          "in": "query",
          "required": false,
          "description": "Instance ID to query. When multiple instance ID query params are provided, they are ORed together",
          "schema": {
            "type": "string",
            "example": "srv-xxxxx-yyyy"
          }
        }
      ],
      "get": {
        "summary": "Get CPU limit for one or more services",
        "operationId": "get-memory-limit",
        "tags": [
          "Metrics"
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "A collection of time series",
                  "required": [
                    "items"
                  ],
                  "items": {
                    "type": "object",
                    "description": "A time series data point",
                    "required": [
                      "labels",
                      "values",
                      "unit"
                    ],
                    "properties": {
                      "labels": {
                        "type": "array",
                        "description": "List of labels describing the time series",
                        "items": {
                          "type": "object",
                          "description": "A time series datapoint label",
                          "required": [
                            "field",
                            "value"
                          ],
                          "properties": {
                            "field": {
                              "type": "string",
                              "example": "service"
                            },
                            "value": {
                              "type": "string",
                              "example": "srv-xxxxx"
                            }
                          }
                        }
                      },
                      "values": {
                        "type": "array",
                        "description": "The values of the time series",
                        "items": {
                          "description": "A time series datapoint value",
                          "type": "object",
                          "required": [
                            "timestamp",
                            "value",
                            "unit"
                          ],
                          "properties": {
                            "timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2021-06-17T08:15:30Z"
                            },
                            "value": {
                              "type": "number",
                              "example": 1
                            }
                          }
                        }
                      },
                      "unit": {
                        "type": "string",
                        "example": "GB"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/memory-target": {
      "parameters": [
        {
          "name": "startTime",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time",
            "example": "2021-06-17T08:15:30Z"
          },
          "required": false,
          "description": "Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."
        },
        {
          "name": "endTime",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time",
            "example": "2021-06-17T08:30:30Z"
          },
          "required": false,
          "description": "Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."
        },
        {
          "name": "resolutionSeconds",
          "in": "query",
          "schema": {
            "type": "number",
            "minimum": 30,
            "example": 60,
            "default": 60
          },
          "required": false,
          "description": "The resolution of the returned data"
        },
        {
          "name": "service",
          "in": "query",
          "required": true,
          "description": "Service ID to query. When multiple service query params are provided, they are ORed together",
          "schema": {
            "type": "string",
            "example": "srv-xxxxx"
          }
        },
        {
          "name": "instance",
          "in": "query",
          "required": false,
          "description": "Instance ID to query. When multiple instance ID query params are provided, they are ORed together",
          "schema": {
            "type": "string",
            "example": "srv-xxxxx-yyyy"
          }
        }
      ],
      "get": {
        "summary": "Get memory target for one or more services",
        "operationId": "get-memory-target",
        "tags": [
          "Metrics"
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "A collection of time series",
                  "required": [
                    "items"
                  ],
                  "items": {
                    "type": "object",
                    "description": "A time series data point",
                    "required": [
                      "labels",
                      "values",
                      "unit"
                    ],
                    "properties": {
                      "labels": {
                        "type": "array",
                        "description": "List of labels describing the time series",
                        "items": {
                          "type": "object",
                          "description": "A time series datapoint label",
                          "required": [
                            "field",
                            "value"
                          ],
                          "properties": {
                            "field": {
                              "type": "string",
                              "example": "service"
                            },
                            "value": {
                              "type": "string",
                              "example": "srv-xxxxx"
                            }
                          }
                        }
                      },
                      "values": {
                        "type": "array",
                        "description": "The values of the time series",
                        "items": {
                          "description": "A time series datapoint value",
                          "type": "object",
                          "required": [
                            "timestamp",
                            "value",
                            "unit"
                          ],
                          "properties": {
                            "timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2021-06-17T08:15:30Z"
                            },
                            "value": {
                              "type": "number",
                              "example": 1
                            }
                          }
                        }
                      },
                      "unit": {
                        "type": "string",
                        "example": "GB"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/http-requests": {
      "parameters": [
        {
          "name": "startTime",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time",
            "example": "2021-06-17T08:15:30Z"
          },
          "required": false,
          "description": "Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."
        },
        {
          "name": "endTime",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time",
            "example": "2021-06-17T08:30:30Z"
          },
          "required": false,
          "description": "Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."
        },
        {
          "name": "resolutionSeconds",
          "in": "query",
          "schema": {
            "type": "number",
            "minimum": 30,
            "example": 60,
            "default": 60
          },
          "required": false,
          "description": "The resolution of the returned data"
        },
        {
          "name": "service",
          "in": "query",
          "required": true,
          "description": "Service ID to query. When multiple service query params are provided, they are ORed together",
          "schema": {
            "type": "string",
            "example": "srv-xxxxx"
          }
        },
        {
          "name": "host",
          "in": "query",
          "required": false,
          "description": "The hosts of HTTP requests to filter to. When multiple host query params are provided, they are ORed together",
          "schema": {
            "type": "string",
            "example": "example.com"
          }
        },
        {
          "name": "path",
          "in": "query",
          "required": false,
          "description": "The paths of HTTP requests to filter to. When multiple path query params are provided, they are ORed together",
          "schema": {
            "type": "string",
            "example": "/graphql"
          }
        },
        {
          "name": "aggregateBy",
          "in": "query",
          "required": false,
          "description": "The field to aggregate by",
          "schema": {
            "type": "string",
            "enum": [
              "statusCode",
              "host"
            ]
          }
        }
      ],
      "get": {
        "summary": "Get HTTP request count for one or more services",
        "operationId": "get-http-requests",
        "tags": [
          "Metrics"
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "A collection of time series",
                  "required": [
                    "items"
                  ],
                  "items": {
                    "type": "object",
                    "description": "A time series data point",
                    "required": [
                      "labels",
                      "values",
                      "unit"
                    ],
                    "properties": {
                      "labels": {
                        "type": "array",
                        "description": "List of labels describing the time series",
                        "items": {
                          "type": "object",
                          "description": "A time series datapoint label",
                          "required": [
                            "field",
                            "value"
                          ],
                          "properties": {
                            "field": {
                              "type": "string",
                              "example": "service"
                            },
                            "value": {
                              "type": "string",
                              "example": "srv-xxxxx"
                            }
                          }
                        }
                      },
                      "values": {
                        "type": "array",
                        "description": "The values of the time series",
                        "items": {
                          "description": "A time series datapoint value",
                          "type": "object",
                          "required": [
                            "timestamp",
                            "value",
                            "unit"
                          ],
                          "properties": {
                            "timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2021-06-17T08:15:30Z"
                            },
                            "value": {
                              "type": "number",
                              "example": 1
                            }
                          }
                        }
                      },
                      "unit": {
                        "type": "string",
                        "example": "GB"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/http-latency": {
      "parameters": [
        {
          "name": "startTime",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time",
            "example": "2021-06-17T08:15:30Z"
          },
          "required": false,
          "description": "Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."
        },
        {
          "name": "endTime",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time",
            "example": "2021-06-17T08:30:30Z"
          },
          "required": false,
          "description": "Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."
        },
        {
          "name": "resolutionSeconds",
          "in": "query",
          "schema": {
            "type": "number",
            "minimum": 30,
            "example": 60,
            "default": 60
          },
          "required": false,
          "description": "The resolution of the returned data"
        },
        {
          "name": "service",
          "in": "query",
          "required": true,
          "description": "Service ID to query. When multiple service query params are provided, they are ORed together",
          "schema": {
            "type": "string",
            "example": "srv-xxxxx"
          }
        },
        {
          "name": "host",
          "in": "query",
          "required": false,
          "description": "The hosts of HTTP requests to filter to. When multiple host query params are provided, they are ORed together",
          "schema": {
            "type": "string",
            "example": "example.com"
          }
        },
        {
          "name": "path",
          "in": "query",
          "required": false,
          "description": "The paths of HTTP requests to filter to. When multiple path query params are provided, they are ORed together",
          "schema": {
            "type": "string",
            "example": "/graphql"
          }
        },
        {
          "name": "quantile",
          "in": "query",
          "required": false,
          "description": "The quantile of latencies to fetch. When multiple quantile query params are provided, they are ORed together",
          "schema": {
            "type": "number",
            "format": "float",
            "example": 0.99
          }
        }
      ],
      "get": {
        "summary": "Get HTTP latency for one or more services",
        "operationId": "get-http-latency",
        "tags": [
          "Metrics"
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "A collection of time series",
                  "required": [
                    "items"
                  ],
                  "items": {
                    "type": "object",
                    "description": "A time series data point",
                    "required": [
                      "labels",
                      "values",
                      "unit"
                    ],
                    "properties": {
                      "labels": {
                        "type": "array",
                        "description": "List of labels describing the time series",
                        "items": {
                          "type": "object",
                          "description": "A time series datapoint label",
                          "required": [
                            "field",
                            "value"
                          ],
                          "properties": {
                            "field": {
                              "type": "string",
                              "example": "service"
                            },
                            "value": {
                              "type": "string",
                              "example": "srv-xxxxx"
                            }
                          }
                        }
                      },
                      "values": {
                        "type": "array",
                        "description": "The values of the time series",
                        "items": {
                          "description": "A time series datapoint value",
                          "type": "object",
                          "required": [
                            "timestamp",
                            "value",
                            "unit"
                          ],
                          "properties": {
                            "timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2021-06-17T08:15:30Z"
                            },
                            "value": {
                              "type": "number",
                              "example": 1
                            }
                          }
                        }
                      },
                      "unit": {
                        "type": "string",
                        "example": "GB"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/bandwidth": {
      "parameters": [
        {
          "name": "startTime",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time",
            "example": "2021-06-17T08:15:30Z"
          },
          "required": false,
          "description": "Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."
        },
        {
          "name": "endTime",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time",
            "example": "2021-06-17T08:30:30Z"
          },
          "required": false,
          "description": "Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."
        },
        {
          "name": "service",
          "in": "query",
          "required": true,
          "description": "Service ID to query. When multiple service query params are provided, they are ORed together",
          "schema": {
            "type": "string",
            "example": "srv-xxxxx"
          }
        }
      ],
      "get": {
        "summary": "Get bandwidth usage for one or more services",
        "operationId": "get-bandwidth",
        "tags": [
          "Metrics"
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "A collection of time series",
                  "required": [
                    "items"
                  ],
                  "items": {
                    "type": "object",
                    "description": "A time series data point",
                    "required": [
                      "labels",
                      "values",
                      "unit"
                    ],
                    "properties": {
                      "labels": {
                        "type": "array",
                        "description": "List of labels describing the time series",
                        "items": {
                          "type": "object",
                          "description": "A time series datapoint label",
                          "required": [
                            "field",
                            "value"
                          ],
                          "properties": {
                            "field": {
                              "type": "string",
                              "example": "service"
                            },
                            "value": {
                              "type": "string",
                              "example": "srv-xxxxx"
                            }
                          }
                        }
                      },
                      "values": {
                        "type": "array",
                        "description": "The values of the time series",
                        "items": {
                          "description": "A time series datapoint value",
                          "type": "object",
                          "required": [
                            "timestamp",
                            "value",
                            "unit"
                          ],
                          "properties": {
                            "timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2021-06-17T08:15:30Z"
                            },
                            "value": {
                              "type": "number",
                              "example": 1
                            }
                          }
                        }
                      },
                      "unit": {
                        "type": "string",
                        "example": "GB"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/disk-usage": {
      "parameters": [
        {
          "name": "startTime",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time",
            "example": "2021-06-17T08:15:30Z"
          },
          "required": false,
          "description": "Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."
        },
        {
          "name": "endTime",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time",
            "example": "2021-06-17T08:30:30Z"
          },
          "required": false,
          "description": "Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."
        },
        {
          "name": "resolutionSeconds",
          "in": "query",
          "schema": {
            "type": "number",
            "minimum": 30,
            "example": 60,
            "default": 60
          },
          "required": false,
          "description": "The resolution of the returned data"
        },
        {
          "name": "service",
          "in": "query",
          "required": true,
          "description": "Service ID to query. When multiple service query params are provided, they are ORed together",
          "schema": {
            "type": "string",
            "example": "srv-xxxxx"
          }
        }
      ],
      "get": {
        "summary": "Get disk usage for one or more services",
        "operationId": "get-disk-usage",
        "tags": [
          "Metrics"
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "A collection of time series",
                  "required": [
                    "items"
                  ],
                  "items": {
                    "type": "object",
                    "description": "A time series data point",
                    "required": [
                      "labels",
                      "values",
                      "unit"
                    ],
                    "properties": {
                      "labels": {
                        "type": "array",
                        "description": "List of labels describing the time series",
                        "items": {
                          "type": "object",
                          "description": "A time series datapoint label",
                          "required": [
                            "field",
                            "value"
                          ],
                          "properties": {
                            "field": {
                              "type": "string",
                              "example": "service"
                            },
                            "value": {
                              "type": "string",
                              "example": "srv-xxxxx"
                            }
                          }
                        }
                      },
                      "values": {
                        "type": "array",
                        "description": "The values of the time series",
                        "items": {
                          "description": "A time series datapoint value",
                          "type": "object",
                          "required": [
                            "timestamp",
                            "value",
                            "unit"
                          ],
                          "properties": {
                            "timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2021-06-17T08:15:30Z"
                            },
                            "value": {
                              "type": "number",
                              "example": 1
                            }
                          }
                        }
                      },
                      "unit": {
                        "type": "string",
                        "example": "GB"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/disk-capacity": {
      "parameters": [
        {
          "name": "startTime",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time",
            "example": "2021-06-17T08:15:30Z"
          },
          "required": false,
          "description": "Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."
        },
        {
          "name": "endTime",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time",
            "example": "2021-06-17T08:30:30Z"
          },
          "required": false,
          "description": "Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."
        },
        {
          "name": "resolutionSeconds",
          "in": "query",
          "schema": {
            "type": "number",
            "minimum": 30,
            "example": 60,
            "default": 60
          },
          "required": false,
          "description": "The resolution of the returned data"
        },
        {
          "name": "service",
          "in": "query",
          "required": true,
          "description": "Service ID to query. When multiple service query params are provided, they are ORed together",
          "schema": {
            "type": "string",
            "example": "srv-xxxxx"
          }
        }
      ],
      "get": {
        "summary": "Get disk capacity for one or more services",
        "operationId": "get-disk-capacity",
        "tags": [
          "Metrics"
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "A collection of time series",
                  "required": [
                    "items"
                  ],
                  "items": {
                    "type": "object",
                    "description": "A time series data point",
                    "required": [
                      "labels",
                      "values",
                      "unit"
                    ],
                    "properties": {
                      "labels": {
                        "type": "array",
                        "description": "List of labels describing the time series",
                        "items": {
                          "type": "object",
                          "description": "A time series datapoint label",
                          "required": [
                            "field",
                            "value"
                          ],
                          "properties": {
                            "field": {
                              "type": "string",
                              "example": "service"
                            },
                            "value": {
                              "type": "string",
                              "example": "srv-xxxxx"
                            }
                          }
                        }
                      },
                      "values": {
                        "type": "array",
                        "description": "The values of the time series",
                        "items": {
                          "description": "A time series datapoint value",
                          "type": "object",
                          "required": [
                            "timestamp",
                            "value",
                            "unit"
                          ],
                          "properties": {
                            "timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2021-06-17T08:15:30Z"
                            },
                            "value": {
                              "type": "number",
                              "example": 1
                            }
                          }
                        }
                      },
                      "unit": {
                        "type": "string",
                        "example": "GB"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/instance-count": {
      "parameters": [
        {
          "name": "startTime",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time",
            "example": "2021-06-17T08:15:30Z"
          },
          "required": false,
          "description": "Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."
        },
        {
          "name": "endTime",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time",
            "example": "2021-06-17T08:30:30Z"
          },
          "required": false,
          "description": "Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."
        },
        {
          "name": "resolutionSeconds",
          "in": "query",
          "schema": {
            "type": "number",
            "minimum": 30,
            "example": 60,
            "default": 60
          },
          "required": false,
          "description": "The resolution of the returned data"
        },
        {
          "name": "service",
          "in": "query",
          "required": true,
          "description": "Service ID to query. When multiple service query params are provided, they are ORed together",
          "schema": {
            "type": "string",
            "example": "srv-xxxxx"
          }
        }
      ],
      "get": {
        "summary": "Get instance count for one or more services",
        "operationId": "get-instance-count",
        "tags": [
          "Metrics"
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "A collection of time series",
                  "required": [
                    "items"
                  ],
                  "items": {
                    "type": "object",
                    "description": "A time series data point",
                    "required": [
                      "labels",
                      "values",
                      "unit"
                    ],
                    "properties": {
                      "labels": {
                        "type": "array",
                        "description": "List of labels describing the time series",
                        "items": {
                          "type": "object",
                          "description": "A time series datapoint label",
                          "required": [
                            "field",
                            "value"
                          ],
                          "properties": {
                            "field": {
                              "type": "string",
                              "example": "service"
                            },
                            "value": {
                              "type": "string",
                              "example": "srv-xxxxx"
                            }
                          }
                        }
                      },
                      "values": {
                        "type": "array",
                        "description": "The values of the time series",
                        "items": {
                          "description": "A time series datapoint value",
                          "type": "object",
                          "required": [
                            "timestamp",
                            "value",
                            "unit"
                          ],
                          "properties": {
                            "timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2021-06-17T08:15:30Z"
                            },
                            "value": {
                              "type": "number",
                              "example": 1
                            }
                          }
                        }
                      },
                      "unit": {
                        "type": "string",
                        "example": "GB"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/filters/application": {
      "parameters": [
        {
          "name": "startTime",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time",
            "example": "2021-06-17T08:15:30Z"
          },
          "required": false,
          "description": "Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."
        },
        {
          "name": "endTime",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time",
            "example": "2021-06-17T08:30:30Z"
          },
          "required": false,
          "description": "Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."
        },
        {
          "name": "resolutionSeconds",
          "in": "query",
          "schema": {
            "type": "number",
            "minimum": 30,
            "example": 60,
            "default": 60
          },
          "required": false,
          "description": "The resolution of the returned data"
        },
        {
          "name": "service",
          "in": "query",
          "required": true,
          "description": "Service ID to query. When multiple service query params are provided, they are ORed together",
          "schema": {
            "type": "string",
            "example": "srv-xxxxx"
          }
        }
      ],
      "get": {
        "summary": "Get instance values to filter by for one or more services",
        "operationId": "get-application-filter-values",
        "tags": [
          "Metrics"
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "A collection of filter values for application metrics",
                  "required": [
                    "items"
                  ],
                  "items": {
                    "type": "object",
                    "properties": {
                      "filter": {
                        "type": "string",
                        "enum": [
                          "instance"
                        ]
                      },
                      "values": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "srv-xxxxx-yyyy"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/filters/http": {
      "parameters": [
        {
          "name": "startTime",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time",
            "example": "2021-06-17T08:15:30Z"
          },
          "required": false,
          "description": "Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."
        },
        {
          "name": "endTime",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time",
            "example": "2021-06-17T08:30:30Z"
          },
          "required": false,
          "description": "Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."
        },
        {
          "name": "resolutionSeconds",
          "in": "query",
          "schema": {
            "type": "number",
            "minimum": 30,
            "example": 60,
            "default": 60
          },
          "required": false,
          "description": "The resolution of the returned data"
        },
        {
          "name": "service",
          "in": "query",
          "required": true,
          "description": "Service ID to query. When multiple service query params are provided, they are ORed together",
          "schema": {
            "type": "string",
            "example": "srv-xxxxx"
          }
        },
        {
          "name": "host",
          "in": "query",
          "required": false,
          "description": "The hosts of HTTP requests to filter to. When multiple host query params are provided, they are ORed together",
          "schema": {
            "type": "string",
            "example": "example.com"
          }
        },
        {
          "name": "statusCode",
          "in": "query",
          "required": false,
          "description": "The status codes of HTTP requests to filter to. When multiple status code query params are provided, they are ORed together",
          "schema": {
            "type": "string",
            "example": 200
          }
        }
      ],
      "get": {
        "summary": "Get status codes and host values to filter by for one or more services",
        "operationId": "get-http-filter-values",
        "tags": [
          "Metrics"
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "A collection of filter values for HTTP metrics",
                  "required": [
                    "items"
                  ],
                  "items": {
                    "type": "object",
                    "properties": {
                      "filter": {
                        "type": "string",
                        "enum": [
                          "host",
                          "statusCode"
                        ]
                      },
                      "values": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "api.example.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/filters/path": {
      "parameters": [
        {
          "name": "startTime",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time",
            "example": "2021-06-17T08:15:30Z"
          },
          "required": false,
          "description": "Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."
        },
        {
          "name": "endTime",
          "in": "query",
          "schema": {
            "type": "string",
            "format": "date-time",
            "example": "2021-06-17T08:30:30Z"
          },
          "required": false,
          "description": "Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."
        },
        {
          "name": "resolutionSeconds",
          "in": "query",
          "schema": {
            "type": "number",
            "minimum": 30,
            "example": 60,
            "default": 60
          },
          "required": false,
          "description": "The resolution of the returned data"
        },
        {
          "name": "service",
          "in": "query",
          "required": true,
          "description": "Service ID to query. When multiple service query params are provided, they are ORed together",
          "schema": {
            "type": "string",
            "example": "srv-xxxxx"
          }
        },
        {
          "name": "host",
          "in": "query",
          "required": false,
          "description": "The hosts of HTTP requests to filter to. When multiple host query params are provided, they are ORed together",
          "schema": {
            "type": "string",
            "example": "example.com"
          }
        },
        {
          "name": "statusCode",
          "in": "query",
          "required": false,
          "description": "The status codes of HTTP requests to filter to. When multiple status code query params are provided, they are ORed together",
          "schema": {
            "type": "string",
            "example": 200
          }
        },
        {
          "name": "path",
          "in": "query",
          "required": false,
          "description": "The paths of HTTP requests to filter to. When multiple path query params are provided, they are ORed together",
          "schema": {
            "type": "string",
            "example": "/graphql"
          }
        }
      ],
      "get": {
        "summary": "Get path suggestions to filter by for one or more services",
        "description": "The path suggestions are based on the most recent 5000 log lines as filtered by the provided filters",
        "operationId": "get-path-filter-values",
        "tags": [
          "Metrics"
        ],
        "responses": {
          "200": {
            "description": "A successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "A collection of suggested paths to filter by",
                  "required": [
                    "items"
                  ],
                  "items": {
                    "type": "string",
                    "example": "/user/*"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "parameters": {
      "cursorParam": {
        "name": "cursor",
        "in": "query",
        "required": false,
        "description": "Cursor to begin retrieving entries for this query",
        "schema": {
          "type": "string"
        }
      },
      "customDomainIdOrNameParam": {
        "name": "customDomainIdOrName",
        "in": "path",
        "required": true,
        "description": "The ID or name of the custom domain",
        "schema": {
          "type": "string"
        }
      },
      "deployIdParam": {
        "name": "deployId",
        "in": "path",
        "required": true,
        "description": "The ID of the deploy",
        "schema": {
          "type": "string"
        }
      },
      "jobIdParam": {
        "name": "jobId",
        "in": "path",
        "required": true,
        "description": "The ID of the job",
        "schema": {
          "type": "string"
        }
      },
      "limitParam": {
        "name": "limit",
        "in": "query",
        "required": false,
        "description": "Max number of items that can be returned",
        "schema": {
          "type": "number",
          "default": 20,
          "minimum": 1,
          "maximum": 100,
          "description": "Defaults to 20"
        }
      },
      "ownerIdPathParam": {
        "name": "ownerId",
        "in": "path",
        "description": "The ID of the owner (team or personal user) whose resources should be returned",
        "schema": {
          "type": "string"
        },
        "required": true
      },
      "ownerIdParam": {
        "name": "ownerId",
        "in": "query",
        "description": "The ID of the owner (team or personal user) whose resources should be returned",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "style": "form",
        "explode": false,
        "required": false
      },
      "serviceIdParam": {
        "name": "serviceId",
        "in": "path",
        "required": true,
        "description": "The ID of the service",
        "schema": {
          "type": "string"
        }
      },
      "serviceIdsParam": {
        "name": "serviceIds",
        "in": "query",
        "description": "Filter for resources by service ID",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "style": "form",
        "required": false
      },
      "startTimeParam": {
        "name": "startTime",
        "in": "query",
        "schema": {
          "type": "string",
          "format": "date-time",
          "example": "2021-06-17T08:15:30Z"
        },
        "required": false,
        "description": "Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`."
      },
      "endTimeParam": {
        "name": "endTime",
        "in": "query",
        "schema": {
          "type": "string",
          "format": "date-time",
          "example": "2021-06-17T08:30:30Z"
        },
        "required": false,
        "description": "Epoch/Unix timestamp of end of time range to return. Defaults to `now()`."
      },
      "resolutionParam": {
        "name": "resolutionSeconds",
        "in": "query",
        "schema": {
          "type": "number",
          "minimum": 30,
          "example": 60,
          "default": 60
        },
        "required": false,
        "description": "The resolution of the returned data"
      },
      "hostQueryParam": {
        "name": "host",
        "in": "query",
        "required": false,
        "description": "The hosts of HTTP requests to filter to. When multiple host query params are provided, they are ORed together",
        "schema": {
          "type": "string",
          "example": "example.com"
        }
      },
      "instanceQueryParam": {
        "name": "instance",
        "in": "query",
        "required": false,
        "description": "Instance ID to query. When multiple instance ID query params are provided, they are ORed together",
        "schema": {
          "type": "string",
          "example": "srv-xxxxx-yyyy"
        }
      },
      "pathQueryParam": {
        "name": "path",
        "in": "query",
        "required": false,
        "description": "The paths of HTTP requests to filter to. When multiple path query params are provided, they are ORed together",
        "schema": {
          "type": "string",
          "example": "/graphql"
        }
      },
      "quantile": {
        "name": "quantile",
        "in": "query",
        "required": false,
        "description": "The quantile of latencies to fetch. When multiple quantile query params are provided, they are ORed together",
        "schema": {
          "type": "number",
          "format": "float",
          "example": 0.99
        }
      },
      "serviceQueryParam": {
        "name": "service",
        "in": "query",
        "required": true,
        "description": "Service ID to query. When multiple service query params are provided, they are ORed together",
        "schema": {
          "type": "string",
          "example": "srv-xxxxx"
        }
      },
      "httpStatusCode": {
        "name": "statusCode",
        "in": "query",
        "required": false,
        "description": "The status codes of HTTP requests to filter to. When multiple status code query params are provided, they are ORed together",
        "schema": {
          "type": "string",
          "example": 200
        }
      },
      "httpAggregateBy": {
        "name": "aggregateBy",
        "in": "query",
        "required": false,
        "description": "The field to aggregate by",
        "schema": {
          "type": "string",
          "enum": [
            "statusCode",
            "host"
          ]
        }
      },
      "applicationMetricAggregationMethod": {
        "name": "aggregationMethod",
        "in": "query",
        "required": false,
        "description": "The aggregation method to apply to multiple time series",
        "schema": {
          "type": "string",
          "enum": [
            "AVG",
            "MAX",
            "MIN"
          ]
        }
      },
      "nameParam": {
        "name": "name",
        "in": "query",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "style": "form",
        "explode": false,
        "required": false,
        "description": "Filter by resource name"
      },
      "serviceTypeParam": {
        "name": "type",
        "in": "query",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "static_site",
              "web_service",
              "private_service",
              "background_worker",
              "cron_job"
            ]
          }
        },
        "style": "form",
        "explode": false,
        "required": false,
        "description": "Filter for types of services"
      },
      "envParam": {
        "name": "env",
        "in": "query",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "docker",
              "elixir",
              "go",
              "node",
              "python",
              "ruby",
              "rust",
              "image"
            ],
            "description": "Environment (runtime)"
          }
        },
        "style": "form",
        "explode": false,
        "required": false,
        "description": "Filter for environments (runtimes) of services"
      },
      "regionParam": {
        "name": "region",
        "in": "query",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "frankfurt",
              "oregon",
              "ohio",
              "singapore"
            ],
            "default": "oregon",
            "description": "Defaults to \"oregon\""
          }
        },
        "style": "form",
        "explode": false,
        "required": false,
        "description": "Filter by resource region"
      },
      "suspendedParam": {
        "name": "suspended",
        "in": "query",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "suspended",
              "not_suspended"
            ]
          }
        },
        "style": "form",
        "explode": false,
        "required": false,
        "description": "Filter resources based on whether they're suspended or not suspended"
      },
      "createdBeforeParam": {
        "name": "createdBefore",
        "in": "query",
        "schema": {
          "type": "string",
          "format": "date-time"
        },
        "required": false,
        "description": "Filter for resources created before a certain time (specified as an ISO 8601 timestamp)",
        "example": "2021-06-17T08:15:30Z"
      },
      "createdAfterParam": {
        "name": "createdAfter",
        "in": "query",
        "schema": {
          "type": "string",
          "format": "date-time"
        },
        "required": false,
        "description": "Filter for resources created after a certain time (specified as an ISO 8601 timestamp)",
        "example": "2021-02-17T08:15:30Z"
      },
      "updatedBeforeParam": {
        "name": "updatedBefore",
        "in": "query",
        "schema": {
          "type": "string",
          "format": "date-time"
        },
        "required": false,
        "description": "Filter for resources updated before a certain time (specified as an ISO 8601 timestamp)",
        "example": "2021-06-17T08:15:30Z"
      },
      "updatedAfterParam": {
        "name": "updatedAfter",
        "in": "query",
        "schema": {
          "type": "string",
          "format": "date-time"
        },
        "required": false,
        "description": "Filter for resources updated after a certain time (specified as an ISO 8601 timestamp)"
      },
      "projectIdParam": {
        "name": "projectId",
        "in": "query",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "style": "form",
        "explode": false,
        "required": true,
        "description": "Filter for resources that belong to a project"
      },
      "environmentIdParam": {
        "name": "environmentId",
        "in": "query",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "style": "form",
        "explode": false,
        "required": false,
        "description": "Filter for resources that belong to an environment"
      },
      "includeReplicasParam": {
        "name": "includeReplicas",
        "in": "query",
        "schema": {
          "type": "boolean",
          "default": true
        },
        "required": false,
        "description": "Include replicas in the response"
      },
      "envGroupIdParam": {
        "name": "envGroupId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Filter for resources that belong to an environment group"
      },
      "envVarKeyParam": {
        "name": "envVarKey",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The name of the environment variable"
      },
      "secretFileNameParam": {
        "name": "secretFileName",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The name of the secret file"
      }
    },
    "schemas": {
      "cursor": {
        "type": "string"
      },
      "service": {
        "type": "object",
        "required": [
          "id",
          "name",
          "ownerId",
          "type",
          "createdAt",
          "updatedAt",
          "suspended",
          "suspenders",
          "autoDeploy",
          "notifyOnFail",
          "slug",
          "serviceDetails",
          "rootDir"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "autoDeploy": {
            "type": "string",
            "enum": [
              "yes",
              "no"
            ]
          },
          "branch": {
            "type": "string"
          },
          "buildFilter": {
            "type": "object",
            "required": [
              "paths",
              "ignoredPaths"
            ],
            "properties": {
              "paths": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "ignoredPaths": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "environmentId": {
            "type": "string"
          },
          "imagePath": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "notifyOnFail": {
            "type": "string",
            "enum": [
              "default",
              "notify",
              "ignore"
            ]
          },
          "ownerId": {
            "type": "string"
          },
          "registryCredential": {
            "type": "object",
            "required": [
              "id",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "repo": {
            "type": "string",
            "example": "https://github.com/render-examples/flask-hello-world"
          },
          "rootDir": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "suspended": {
            "type": "string",
            "enum": [
              "suspended",
              "not_suspended"
            ]
          },
          "suspenders": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "admin",
                "billing",
                "user",
                "parent_service",
                "unknown"
              ]
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "static_site",
              "web_service",
              "private_service",
              "background_worker",
              "cron_job"
            ]
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "serviceDetails": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "buildCommand",
                  "publishPath",
                  "pullRequestPreviewsEnabled",
                  "url",
                  "buildPlan"
                ],
                "properties": {
                  "buildCommand": {
                    "type": "string"
                  },
                  "parentServer": {
                    "required": [
                      "id",
                      "name"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  },
                  "publishPath": {
                    "type": "string"
                  },
                  "pullRequestPreviewsEnabled": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ]
                  },
                  "url": {
                    "type": "string"
                  },
                  "buildPlan": {
                    "type": "string",
                    "enum": [
                      "starter",
                      "performance"
                    ],
                    "default": "starter"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "env",
                  "envSpecificDetails",
                  "plan",
                  "region",
                  "pullRequestPreviewsEnabled",
                  "numInstances",
                  "buildPlan",
                  "healthCheckPath",
                  "openPorts",
                  "url"
                ],
                "properties": {
                  "autoscaling": {
                    "type": "object",
                    "required": [
                      "enabled",
                      "min",
                      "max",
                      "criteria"
                    ],
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "default": false
                      },
                      "min": {
                        "type": "integer",
                        "description": "The minimum number of instances for the service"
                      },
                      "max": {
                        "type": "integer",
                        "description": "The maximum number of instances for the service"
                      },
                      "criteria": {
                        "type": "object",
                        "required": [
                          "cpu",
                          "memory"
                        ],
                        "properties": {
                          "cpu": {
                            "type": "object",
                            "required": [
                              "enabled",
                              "percentage"
                            ],
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "default": false
                              },
                              "percentage": {
                                "type": "integer",
                                "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                              }
                            }
                          },
                          "memory": {
                            "type": "object",
                            "required": [
                              "enabled",
                              "percentage"
                            ],
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "default": false
                              },
                              "percentage": {
                                "type": "integer",
                                "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "disk": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "sizeGB",
                      "mountPath"
                    ],
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "sizeGB": {
                        "type": "integer"
                      },
                      "mountPath": {
                        "type": "string"
                      }
                    }
                  },
                  "env": {
                    "type": "string",
                    "enum": [
                      "docker",
                      "elixir",
                      "go",
                      "node",
                      "python",
                      "ruby",
                      "rust",
                      "image"
                    ],
                    "description": "Environment (runtime)"
                  },
                  "envSpecificDetails": {
                    "oneOf": [
                      {
                        "type": "object",
                        "required": [
                          "dockerCommand",
                          "dockerContext",
                          "dockerfilePath"
                        ],
                        "properties": {
                          "dockerCommand": {
                            "type": "string"
                          },
                          "dockerContext": {
                            "type": "string"
                          },
                          "dockerfilePath": {
                            "type": "string"
                          },
                          "preDeployCommand": {
                            "type": "string"
                          },
                          "registryCredential": {
                            "type": "object",
                            "required": [
                              "id",
                              "name",
                              "username",
                              "registry"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier for this credential"
                              },
                              "name": {
                                "type": "string",
                                "description": "Descriptive name for this credential"
                              },
                              "registry": {
                                "type": "string",
                                "enum": [
                                  "GITHUB",
                                  "GITLAB",
                                  "DOCKER"
                                ],
                                "description": "The registry to use this credential with"
                              },
                              "username": {
                                "type": "string",
                                "description": "The username associated with the credential"
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "buildCommand",
                          "startCommand"
                        ],
                        "properties": {
                          "buildCommand": {
                            "type": "string"
                          },
                          "startCommand": {
                            "type": "string"
                          },
                          "preDeployCommand": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "healthCheckPath": {
                    "type": "string"
                  },
                  "numInstances": {
                    "type": "integer",
                    "description": "For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."
                  },
                  "openPorts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "port",
                        "protocol"
                      ],
                      "properties": {
                        "port": {
                          "type": "integer",
                          "example": 10000
                        },
                        "protocol": {
                          "type": "string",
                          "enum": [
                            "TCP",
                            "UDP"
                          ]
                        }
                      }
                    }
                  },
                  "parentServer": {
                    "required": [
                      "id",
                      "name"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  },
                  "plan": {
                    "type": "string",
                    "enum": [
                      "starter",
                      "starter_plus",
                      "standard",
                      "standard_plus",
                      "pro",
                      "pro_plus",
                      "pro_max",
                      "pro_ultra",
                      "free",
                      "custom"
                    ],
                    "example": "starter",
                    "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                  },
                  "pullRequestPreviewsEnabled": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ]
                  },
                  "region": {
                    "type": "string",
                    "enum": [
                      "frankfurt",
                      "oregon",
                      "ohio",
                      "singapore"
                    ],
                    "default": "oregon",
                    "description": "Defaults to \"oregon\""
                  },
                  "url": {
                    "type": "string"
                  },
                  "buildPlan": {
                    "type": "string",
                    "enum": [
                      "starter",
                      "performance"
                    ],
                    "default": "starter"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "env",
                  "envSpecificDetails",
                  "plan",
                  "region",
                  "pullRequestPreviewsEnabled",
                  "numInstances",
                  "buildPlan",
                  "openPorts",
                  "url"
                ],
                "properties": {
                  "autoscaling": {
                    "type": "object",
                    "required": [
                      "enabled",
                      "min",
                      "max",
                      "criteria"
                    ],
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "default": false
                      },
                      "min": {
                        "type": "integer",
                        "description": "The minimum number of instances for the service"
                      },
                      "max": {
                        "type": "integer",
                        "description": "The maximum number of instances for the service"
                      },
                      "criteria": {
                        "type": "object",
                        "required": [
                          "cpu",
                          "memory"
                        ],
                        "properties": {
                          "cpu": {
                            "type": "object",
                            "required": [
                              "enabled",
                              "percentage"
                            ],
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "default": false
                              },
                              "percentage": {
                                "type": "integer",
                                "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                              }
                            }
                          },
                          "memory": {
                            "type": "object",
                            "required": [
                              "enabled",
                              "percentage"
                            ],
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "default": false
                              },
                              "percentage": {
                                "type": "integer",
                                "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "disk": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "sizeGB",
                      "mountPath"
                    ],
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "sizeGB": {
                        "type": "integer"
                      },
                      "mountPath": {
                        "type": "string"
                      }
                    }
                  },
                  "env": {
                    "type": "string",
                    "enum": [
                      "docker",
                      "elixir",
                      "go",
                      "node",
                      "python",
                      "ruby",
                      "rust",
                      "image"
                    ],
                    "description": "Environment (runtime)"
                  },
                  "envSpecificDetails": {
                    "oneOf": [
                      {
                        "type": "object",
                        "required": [
                          "dockerCommand",
                          "dockerContext",
                          "dockerfilePath"
                        ],
                        "properties": {
                          "dockerCommand": {
                            "type": "string"
                          },
                          "dockerContext": {
                            "type": "string"
                          },
                          "dockerfilePath": {
                            "type": "string"
                          },
                          "preDeployCommand": {
                            "type": "string"
                          },
                          "registryCredential": {
                            "type": "object",
                            "required": [
                              "id",
                              "name",
                              "username",
                              "registry"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier for this credential"
                              },
                              "name": {
                                "type": "string",
                                "description": "Descriptive name for this credential"
                              },
                              "registry": {
                                "type": "string",
                                "enum": [
                                  "GITHUB",
                                  "GITLAB",
                                  "DOCKER"
                                ],
                                "description": "The registry to use this credential with"
                              },
                              "username": {
                                "type": "string",
                                "description": "The username associated with the credential"
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "buildCommand",
                          "startCommand"
                        ],
                        "properties": {
                          "buildCommand": {
                            "type": "string"
                          },
                          "startCommand": {
                            "type": "string"
                          },
                          "preDeployCommand": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "numInstances": {
                    "type": "integer",
                    "description": "For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."
                  },
                  "openPorts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "port",
                        "protocol"
                      ],
                      "properties": {
                        "port": {
                          "type": "integer",
                          "example": 10000
                        },
                        "protocol": {
                          "type": "string",
                          "enum": [
                            "TCP",
                            "UDP"
                          ]
                        }
                      }
                    }
                  },
                  "parentServer": {
                    "required": [
                      "id",
                      "name"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  },
                  "plan": {
                    "type": "string",
                    "enum": [
                      "starter",
                      "starter_plus",
                      "standard",
                      "standard_plus",
                      "pro",
                      "pro_plus",
                      "pro_max",
                      "pro_ultra",
                      "free",
                      "custom"
                    ],
                    "example": "starter",
                    "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                  },
                  "pullRequestPreviewsEnabled": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ]
                  },
                  "region": {
                    "type": "string",
                    "enum": [
                      "frankfurt",
                      "oregon",
                      "ohio",
                      "singapore"
                    ],
                    "default": "oregon",
                    "description": "Defaults to \"oregon\""
                  },
                  "url": {
                    "type": "string"
                  },
                  "buildPlan": {
                    "type": "string",
                    "enum": [
                      "starter",
                      "performance"
                    ],
                    "default": "starter"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "env",
                  "envSpecificDetails",
                  "plan",
                  "region",
                  "pullRequestPreviewsEnabled",
                  "numInstances",
                  "buildPlan"
                ],
                "properties": {
                  "autoscaling": {
                    "type": "object",
                    "required": [
                      "enabled",
                      "min",
                      "max",
                      "criteria"
                    ],
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "default": false
                      },
                      "min": {
                        "type": "integer",
                        "description": "The minimum number of instances for the service"
                      },
                      "max": {
                        "type": "integer",
                        "description": "The maximum number of instances for the service"
                      },
                      "criteria": {
                        "type": "object",
                        "required": [
                          "cpu",
                          "memory"
                        ],
                        "properties": {
                          "cpu": {
                            "type": "object",
                            "required": [
                              "enabled",
                              "percentage"
                            ],
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "default": false
                              },
                              "percentage": {
                                "type": "integer",
                                "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                              }
                            }
                          },
                          "memory": {
                            "type": "object",
                            "required": [
                              "enabled",
                              "percentage"
                            ],
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "default": false
                              },
                              "percentage": {
                                "type": "integer",
                                "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "disk": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "sizeGB",
                      "mountPath"
                    ],
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "sizeGB": {
                        "type": "integer"
                      },
                      "mountPath": {
                        "type": "string"
                      }
                    }
                  },
                  "env": {
                    "type": "string",
                    "enum": [
                      "docker",
                      "elixir",
                      "go",
                      "node",
                      "python",
                      "ruby",
                      "rust",
                      "image"
                    ],
                    "description": "Environment (runtime)"
                  },
                  "envSpecificDetails": {
                    "oneOf": [
                      {
                        "type": "object",
                        "required": [
                          "dockerCommand",
                          "dockerContext",
                          "dockerfilePath"
                        ],
                        "properties": {
                          "dockerCommand": {
                            "type": "string"
                          },
                          "dockerContext": {
                            "type": "string"
                          },
                          "dockerfilePath": {
                            "type": "string"
                          },
                          "preDeployCommand": {
                            "type": "string"
                          },
                          "registryCredential": {
                            "type": "object",
                            "required": [
                              "id",
                              "name",
                              "username",
                              "registry"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier for this credential"
                              },
                              "name": {
                                "type": "string",
                                "description": "Descriptive name for this credential"
                              },
                              "registry": {
                                "type": "string",
                                "enum": [
                                  "GITHUB",
                                  "GITLAB",
                                  "DOCKER"
                                ],
                                "description": "The registry to use this credential with"
                              },
                              "username": {
                                "type": "string",
                                "description": "The username associated with the credential"
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "buildCommand",
                          "startCommand"
                        ],
                        "properties": {
                          "buildCommand": {
                            "type": "string"
                          },
                          "startCommand": {
                            "type": "string"
                          },
                          "preDeployCommand": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "numInstances": {
                    "type": "integer",
                    "description": "For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."
                  },
                  "parentServer": {
                    "required": [
                      "id",
                      "name"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  },
                  "plan": {
                    "type": "string",
                    "enum": [
                      "starter",
                      "starter_plus",
                      "standard",
                      "standard_plus",
                      "pro",
                      "pro_plus",
                      "pro_max",
                      "pro_ultra",
                      "free",
                      "custom"
                    ],
                    "example": "starter",
                    "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                  },
                  "pullRequestPreviewsEnabled": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ]
                  },
                  "region": {
                    "type": "string",
                    "enum": [
                      "frankfurt",
                      "oregon",
                      "ohio",
                      "singapore"
                    ],
                    "default": "oregon",
                    "description": "Defaults to \"oregon\""
                  },
                  "buildPlan": {
                    "type": "string",
                    "enum": [
                      "starter",
                      "performance"
                    ],
                    "default": "starter"
                  }
                }
              },
              {
                "required": [
                  "env",
                  "envSpecificDetails",
                  "plan",
                  "region",
                  "schedule",
                  "buildPlan"
                ],
                "type": "object",
                "properties": {
                  "env": {
                    "type": "string",
                    "enum": [
                      "docker",
                      "elixir",
                      "go",
                      "node",
                      "python",
                      "ruby",
                      "rust",
                      "image"
                    ],
                    "description": "Environment (runtime)"
                  },
                  "envSpecificDetails": {
                    "oneOf": [
                      {
                        "type": "object",
                        "required": [
                          "dockerCommand",
                          "dockerContext",
                          "dockerfilePath"
                        ],
                        "properties": {
                          "dockerCommand": {
                            "type": "string"
                          },
                          "dockerContext": {
                            "type": "string"
                          },
                          "dockerfilePath": {
                            "type": "string"
                          },
                          "preDeployCommand": {
                            "type": "string"
                          },
                          "registryCredential": {
                            "type": "object",
                            "required": [
                              "id",
                              "name",
                              "username",
                              "registry"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier for this credential"
                              },
                              "name": {
                                "type": "string",
                                "description": "Descriptive name for this credential"
                              },
                              "registry": {
                                "type": "string",
                                "enum": [
                                  "GITHUB",
                                  "GITLAB",
                                  "DOCKER"
                                ],
                                "description": "The registry to use this credential with"
                              },
                              "username": {
                                "type": "string",
                                "description": "The username associated with the credential"
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "buildCommand",
                          "startCommand"
                        ],
                        "properties": {
                          "buildCommand": {
                            "type": "string"
                          },
                          "startCommand": {
                            "type": "string"
                          },
                          "preDeployCommand": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "lastSuccessfulRunAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "plan": {
                    "type": "string",
                    "enum": [
                      "starter",
                      "starter_plus",
                      "standard",
                      "standard_plus",
                      "pro",
                      "pro_plus",
                      "pro_max",
                      "pro_ultra",
                      "free",
                      "custom"
                    ],
                    "example": "starter",
                    "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                  },
                  "region": {
                    "type": "string",
                    "enum": [
                      "frankfurt",
                      "oregon",
                      "ohio",
                      "singapore"
                    ],
                    "default": "oregon",
                    "description": "Defaults to \"oregon\""
                  },
                  "schedule": {
                    "type": "string"
                  },
                  "buildPlan": {
                    "type": "string",
                    "enum": [
                      "starter",
                      "performance"
                    ],
                    "default": "starter"
                  }
                }
              }
            ]
          }
        }
      },
      "serviceAndDeploy": {
        "type": "object",
        "properties": {
          "service": {
            "type": "object",
            "required": [
              "id",
              "name",
              "ownerId",
              "type",
              "createdAt",
              "updatedAt",
              "suspended",
              "suspenders",
              "autoDeploy",
              "notifyOnFail",
              "slug",
              "serviceDetails",
              "rootDir"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "autoDeploy": {
                "type": "string",
                "enum": [
                  "yes",
                  "no"
                ]
              },
              "branch": {
                "type": "string"
              },
              "buildFilter": {
                "type": "object",
                "required": [
                  "paths",
                  "ignoredPaths"
                ],
                "properties": {
                  "paths": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "ignoredPaths": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "environmentId": {
                "type": "string"
              },
              "imagePath": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "notifyOnFail": {
                "type": "string",
                "enum": [
                  "default",
                  "notify",
                  "ignore"
                ]
              },
              "ownerId": {
                "type": "string"
              },
              "registryCredential": {
                "type": "object",
                "required": [
                  "id",
                  "name"
                ],
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "repo": {
                "type": "string",
                "example": "https://github.com/render-examples/flask-hello-world"
              },
              "rootDir": {
                "type": "string"
              },
              "slug": {
                "type": "string"
              },
              "suspended": {
                "type": "string",
                "enum": [
                  "suspended",
                  "not_suspended"
                ]
              },
              "suspenders": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "admin",
                    "billing",
                    "user",
                    "parent_service",
                    "unknown"
                  ]
                }
              },
              "type": {
                "type": "string",
                "enum": [
                  "static_site",
                  "web_service",
                  "private_service",
                  "background_worker",
                  "cron_job"
                ]
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "serviceDetails": {
                "oneOf": [
                  {
                    "type": "object",
                    "required": [
                      "buildCommand",
                      "publishPath",
                      "pullRequestPreviewsEnabled",
                      "url",
                      "buildPlan"
                    ],
                    "properties": {
                      "buildCommand": {
                        "type": "string"
                      },
                      "parentServer": {
                        "required": [
                          "id",
                          "name"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      },
                      "publishPath": {
                        "type": "string"
                      },
                      "pullRequestPreviewsEnabled": {
                        "type": "string",
                        "enum": [
                          "yes",
                          "no"
                        ]
                      },
                      "url": {
                        "type": "string"
                      },
                      "buildPlan": {
                        "type": "string",
                        "enum": [
                          "starter",
                          "performance"
                        ],
                        "default": "starter"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "env",
                      "envSpecificDetails",
                      "plan",
                      "region",
                      "pullRequestPreviewsEnabled",
                      "numInstances",
                      "buildPlan",
                      "healthCheckPath",
                      "openPorts",
                      "url"
                    ],
                    "properties": {
                      "autoscaling": {
                        "type": "object",
                        "required": [
                          "enabled",
                          "min",
                          "max",
                          "criteria"
                        ],
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "default": false
                          },
                          "min": {
                            "type": "integer",
                            "description": "The minimum number of instances for the service"
                          },
                          "max": {
                            "type": "integer",
                            "description": "The maximum number of instances for the service"
                          },
                          "criteria": {
                            "type": "object",
                            "required": [
                              "cpu",
                              "memory"
                            ],
                            "properties": {
                              "cpu": {
                                "type": "object",
                                "required": [
                                  "enabled",
                                  "percentage"
                                ],
                                "properties": {
                                  "enabled": {
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "percentage": {
                                    "type": "integer",
                                    "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                  }
                                }
                              },
                              "memory": {
                                "type": "object",
                                "required": [
                                  "enabled",
                                  "percentage"
                                ],
                                "properties": {
                                  "enabled": {
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "percentage": {
                                    "type": "integer",
                                    "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "disk": {
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "sizeGB",
                          "mountPath"
                        ],
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "sizeGB": {
                            "type": "integer"
                          },
                          "mountPath": {
                            "type": "string"
                          }
                        }
                      },
                      "env": {
                        "type": "string",
                        "enum": [
                          "docker",
                          "elixir",
                          "go",
                          "node",
                          "python",
                          "ruby",
                          "rust",
                          "image"
                        ],
                        "description": "Environment (runtime)"
                      },
                      "envSpecificDetails": {
                        "oneOf": [
                          {
                            "type": "object",
                            "required": [
                              "dockerCommand",
                              "dockerContext",
                              "dockerfilePath"
                            ],
                            "properties": {
                              "dockerCommand": {
                                "type": "string"
                              },
                              "dockerContext": {
                                "type": "string"
                              },
                              "dockerfilePath": {
                                "type": "string"
                              },
                              "preDeployCommand": {
                                "type": "string"
                              },
                              "registryCredential": {
                                "type": "object",
                                "required": [
                                  "id",
                                  "name",
                                  "username",
                                  "registry"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Unique identifier for this credential"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Descriptive name for this credential"
                                  },
                                  "registry": {
                                    "type": "string",
                                    "enum": [
                                      "GITHUB",
                                      "GITLAB",
                                      "DOCKER"
                                    ],
                                    "description": "The registry to use this credential with"
                                  },
                                  "username": {
                                    "type": "string",
                                    "description": "The username associated with the credential"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": [
                              "buildCommand",
                              "startCommand"
                            ],
                            "properties": {
                              "buildCommand": {
                                "type": "string"
                              },
                              "startCommand": {
                                "type": "string"
                              },
                              "preDeployCommand": {
                                "type": "string"
                              }
                            }
                          }
                        ]
                      },
                      "healthCheckPath": {
                        "type": "string"
                      },
                      "numInstances": {
                        "type": "integer",
                        "description": "For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."
                      },
                      "openPorts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "port",
                            "protocol"
                          ],
                          "properties": {
                            "port": {
                              "type": "integer",
                              "example": 10000
                            },
                            "protocol": {
                              "type": "string",
                              "enum": [
                                "TCP",
                                "UDP"
                              ]
                            }
                          }
                        }
                      },
                      "parentServer": {
                        "required": [
                          "id",
                          "name"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      },
                      "plan": {
                        "type": "string",
                        "enum": [
                          "starter",
                          "starter_plus",
                          "standard",
                          "standard_plus",
                          "pro",
                          "pro_plus",
                          "pro_max",
                          "pro_ultra",
                          "free",
                          "custom"
                        ],
                        "example": "starter",
                        "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                      },
                      "pullRequestPreviewsEnabled": {
                        "type": "string",
                        "enum": [
                          "yes",
                          "no"
                        ]
                      },
                      "region": {
                        "type": "string",
                        "enum": [
                          "frankfurt",
                          "oregon",
                          "ohio",
                          "singapore"
                        ],
                        "default": "oregon",
                        "description": "Defaults to \"oregon\""
                      },
                      "url": {
                        "type": "string"
                      },
                      "buildPlan": {
                        "type": "string",
                        "enum": [
                          "starter",
                          "performance"
                        ],
                        "default": "starter"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "env",
                      "envSpecificDetails",
                      "plan",
                      "region",
                      "pullRequestPreviewsEnabled",
                      "numInstances",
                      "buildPlan",
                      "openPorts",
                      "url"
                    ],
                    "properties": {
                      "autoscaling": {
                        "type": "object",
                        "required": [
                          "enabled",
                          "min",
                          "max",
                          "criteria"
                        ],
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "default": false
                          },
                          "min": {
                            "type": "integer",
                            "description": "The minimum number of instances for the service"
                          },
                          "max": {
                            "type": "integer",
                            "description": "The maximum number of instances for the service"
                          },
                          "criteria": {
                            "type": "object",
                            "required": [
                              "cpu",
                              "memory"
                            ],
                            "properties": {
                              "cpu": {
                                "type": "object",
                                "required": [
                                  "enabled",
                                  "percentage"
                                ],
                                "properties": {
                                  "enabled": {
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "percentage": {
                                    "type": "integer",
                                    "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                  }
                                }
                              },
                              "memory": {
                                "type": "object",
                                "required": [
                                  "enabled",
                                  "percentage"
                                ],
                                "properties": {
                                  "enabled": {
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "percentage": {
                                    "type": "integer",
                                    "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "disk": {
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "sizeGB",
                          "mountPath"
                        ],
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "sizeGB": {
                            "type": "integer"
                          },
                          "mountPath": {
                            "type": "string"
                          }
                        }
                      },
                      "env": {
                        "type": "string",
                        "enum": [
                          "docker",
                          "elixir",
                          "go",
                          "node",
                          "python",
                          "ruby",
                          "rust",
                          "image"
                        ],
                        "description": "Environment (runtime)"
                      },
                      "envSpecificDetails": {
                        "oneOf": [
                          {
                            "type": "object",
                            "required": [
                              "dockerCommand",
                              "dockerContext",
                              "dockerfilePath"
                            ],
                            "properties": {
                              "dockerCommand": {
                                "type": "string"
                              },
                              "dockerContext": {
                                "type": "string"
                              },
                              "dockerfilePath": {
                                "type": "string"
                              },
                              "preDeployCommand": {
                                "type": "string"
                              },
                              "registryCredential": {
                                "type": "object",
                                "required": [
                                  "id",
                                  "name",
                                  "username",
                                  "registry"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Unique identifier for this credential"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Descriptive name for this credential"
                                  },
                                  "registry": {
                                    "type": "string",
                                    "enum": [
                                      "GITHUB",
                                      "GITLAB",
                                      "DOCKER"
                                    ],
                                    "description": "The registry to use this credential with"
                                  },
                                  "username": {
                                    "type": "string",
                                    "description": "The username associated with the credential"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": [
                              "buildCommand",
                              "startCommand"
                            ],
                            "properties": {
                              "buildCommand": {
                                "type": "string"
                              },
                              "startCommand": {
                                "type": "string"
                              },
                              "preDeployCommand": {
                                "type": "string"
                              }
                            }
                          }
                        ]
                      },
                      "numInstances": {
                        "type": "integer",
                        "description": "For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."
                      },
                      "openPorts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "port",
                            "protocol"
                          ],
                          "properties": {
                            "port": {
                              "type": "integer",
                              "example": 10000
                            },
                            "protocol": {
                              "type": "string",
                              "enum": [
                                "TCP",
                                "UDP"
                              ]
                            }
                          }
                        }
                      },
                      "parentServer": {
                        "required": [
                          "id",
                          "name"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      },
                      "plan": {
                        "type": "string",
                        "enum": [
                          "starter",
                          "starter_plus",
                          "standard",
                          "standard_plus",
                          "pro",
                          "pro_plus",
                          "pro_max",
                          "pro_ultra",
                          "free",
                          "custom"
                        ],
                        "example": "starter",
                        "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                      },
                      "pullRequestPreviewsEnabled": {
                        "type": "string",
                        "enum": [
                          "yes",
                          "no"
                        ]
                      },
                      "region": {
                        "type": "string",
                        "enum": [
                          "frankfurt",
                          "oregon",
                          "ohio",
                          "singapore"
                        ],
                        "default": "oregon",
                        "description": "Defaults to \"oregon\""
                      },
                      "url": {
                        "type": "string"
                      },
                      "buildPlan": {
                        "type": "string",
                        "enum": [
                          "starter",
                          "performance"
                        ],
                        "default": "starter"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "env",
                      "envSpecificDetails",
                      "plan",
                      "region",
                      "pullRequestPreviewsEnabled",
                      "numInstances",
                      "buildPlan"
                    ],
                    "properties": {
                      "autoscaling": {
                        "type": "object",
                        "required": [
                          "enabled",
                          "min",
                          "max",
                          "criteria"
                        ],
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "default": false
                          },
                          "min": {
                            "type": "integer",
                            "description": "The minimum number of instances for the service"
                          },
                          "max": {
                            "type": "integer",
                            "description": "The maximum number of instances for the service"
                          },
                          "criteria": {
                            "type": "object",
                            "required": [
                              "cpu",
                              "memory"
                            ],
                            "properties": {
                              "cpu": {
                                "type": "object",
                                "required": [
                                  "enabled",
                                  "percentage"
                                ],
                                "properties": {
                                  "enabled": {
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "percentage": {
                                    "type": "integer",
                                    "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                  }
                                }
                              },
                              "memory": {
                                "type": "object",
                                "required": [
                                  "enabled",
                                  "percentage"
                                ],
                                "properties": {
                                  "enabled": {
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "percentage": {
                                    "type": "integer",
                                    "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "disk": {
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "sizeGB",
                          "mountPath"
                        ],
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "sizeGB": {
                            "type": "integer"
                          },
                          "mountPath": {
                            "type": "string"
                          }
                        }
                      },
                      "env": {
                        "type": "string",
                        "enum": [
                          "docker",
                          "elixir",
                          "go",
                          "node",
                          "python",
                          "ruby",
                          "rust",
                          "image"
                        ],
                        "description": "Environment (runtime)"
                      },
                      "envSpecificDetails": {
                        "oneOf": [
                          {
                            "type": "object",
                            "required": [
                              "dockerCommand",
                              "dockerContext",
                              "dockerfilePath"
                            ],
                            "properties": {
                              "dockerCommand": {
                                "type": "string"
                              },
                              "dockerContext": {
                                "type": "string"
                              },
                              "dockerfilePath": {
                                "type": "string"
                              },
                              "preDeployCommand": {
                                "type": "string"
                              },
                              "registryCredential": {
                                "type": "object",
                                "required": [
                                  "id",
                                  "name",
                                  "username",
                                  "registry"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Unique identifier for this credential"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Descriptive name for this credential"
                                  },
                                  "registry": {
                                    "type": "string",
                                    "enum": [
                                      "GITHUB",
                                      "GITLAB",
                                      "DOCKER"
                                    ],
                                    "description": "The registry to use this credential with"
                                  },
                                  "username": {
                                    "type": "string",
                                    "description": "The username associated with the credential"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": [
                              "buildCommand",
                              "startCommand"
                            ],
                            "properties": {
                              "buildCommand": {
                                "type": "string"
                              },
                              "startCommand": {
                                "type": "string"
                              },
                              "preDeployCommand": {
                                "type": "string"
                              }
                            }
                          }
                        ]
                      },
                      "numInstances": {
                        "type": "integer",
                        "description": "For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."
                      },
                      "parentServer": {
                        "required": [
                          "id",
                          "name"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      },
                      "plan": {
                        "type": "string",
                        "enum": [
                          "starter",
                          "starter_plus",
                          "standard",
                          "standard_plus",
                          "pro",
                          "pro_plus",
                          "pro_max",
                          "pro_ultra",
                          "free",
                          "custom"
                        ],
                        "example": "starter",
                        "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                      },
                      "pullRequestPreviewsEnabled": {
                        "type": "string",
                        "enum": [
                          "yes",
                          "no"
                        ]
                      },
                      "region": {
                        "type": "string",
                        "enum": [
                          "frankfurt",
                          "oregon",
                          "ohio",
                          "singapore"
                        ],
                        "default": "oregon",
                        "description": "Defaults to \"oregon\""
                      },
                      "buildPlan": {
                        "type": "string",
                        "enum": [
                          "starter",
                          "performance"
                        ],
                        "default": "starter"
                      }
                    }
                  },
                  {
                    "required": [
                      "env",
                      "envSpecificDetails",
                      "plan",
                      "region",
                      "schedule",
                      "buildPlan"
                    ],
                    "type": "object",
                    "properties": {
                      "env": {
                        "type": "string",
                        "enum": [
                          "docker",
                          "elixir",
                          "go",
                          "node",
                          "python",
                          "ruby",
                          "rust",
                          "image"
                        ],
                        "description": "Environment (runtime)"
                      },
                      "envSpecificDetails": {
                        "oneOf": [
                          {
                            "type": "object",
                            "required": [
                              "dockerCommand",
                              "dockerContext",
                              "dockerfilePath"
                            ],
                            "properties": {
                              "dockerCommand": {
                                "type": "string"
                              },
                              "dockerContext": {
                                "type": "string"
                              },
                              "dockerfilePath": {
                                "type": "string"
                              },
                              "preDeployCommand": {
                                "type": "string"
                              },
                              "registryCredential": {
                                "type": "object",
                                "required": [
                                  "id",
                                  "name",
                                  "username",
                                  "registry"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Unique identifier for this credential"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Descriptive name for this credential"
                                  },
                                  "registry": {
                                    "type": "string",
                                    "enum": [
                                      "GITHUB",
                                      "GITLAB",
                                      "DOCKER"
                                    ],
                                    "description": "The registry to use this credential with"
                                  },
                                  "username": {
                                    "type": "string",
                                    "description": "The username associated with the credential"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": [
                              "buildCommand",
                              "startCommand"
                            ],
                            "properties": {
                              "buildCommand": {
                                "type": "string"
                              },
                              "startCommand": {
                                "type": "string"
                              },
                              "preDeployCommand": {
                                "type": "string"
                              }
                            }
                          }
                        ]
                      },
                      "lastSuccessfulRunAt": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "plan": {
                        "type": "string",
                        "enum": [
                          "starter",
                          "starter_plus",
                          "standard",
                          "standard_plus",
                          "pro",
                          "pro_plus",
                          "pro_max",
                          "pro_ultra",
                          "free",
                          "custom"
                        ],
                        "example": "starter",
                        "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
                      },
                      "region": {
                        "type": "string",
                        "enum": [
                          "frankfurt",
                          "oregon",
                          "ohio",
                          "singapore"
                        ],
                        "default": "oregon",
                        "description": "Defaults to \"oregon\""
                      },
                      "schedule": {
                        "type": "string"
                      },
                      "buildPlan": {
                        "type": "string",
                        "enum": [
                          "starter",
                          "performance"
                        ],
                        "default": "starter"
                      }
                    }
                  }
                ]
              }
            }
          },
          "deployId": {
            "type": "string"
          }
        }
      },
      "buildFilter": {
        "type": "object",
        "required": [
          "paths",
          "ignoredPaths"
        ],
        "properties": {
          "paths": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ignoredPaths": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "registryCredentialSummary": {
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "registryCredential": {
        "type": "object",
        "required": [
          "id",
          "name",
          "username",
          "registry"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for this credential"
          },
          "name": {
            "type": "string",
            "description": "Descriptive name for this credential"
          },
          "registry": {
            "type": "string",
            "enum": [
              "GITHUB",
              "GITLAB",
              "DOCKER"
            ],
            "description": "The registry to use this credential with"
          },
          "username": {
            "type": "string",
            "description": "The username associated with the credential"
          }
        }
      },
      "image": {
        "type": "object",
        "required": [
          "imagePath",
          "ownerId"
        ],
        "properties": {
          "ownerId": {
            "type": "string",
            "description": "The ID of the owner for this image. This should match the owner of the service as well as the owner of any specified registry credential."
          },
          "registryCredentialId": {
            "type": "string",
            "description": "Optional reference to the registry credential passed to the image repository to retrieve this image."
          },
          "imagePath": {
            "type": "string",
            "description": "Path to the image used for this server (e.g docker.io/library/nginx:latest)."
          }
        }
      },
      "dockerDetails": {
        "type": "object",
        "required": [
          "dockerCommand",
          "dockerContext",
          "dockerfilePath"
        ],
        "properties": {
          "dockerCommand": {
            "type": "string"
          },
          "dockerContext": {
            "type": "string"
          },
          "dockerfilePath": {
            "type": "string"
          },
          "preDeployCommand": {
            "type": "string"
          },
          "registryCredential": {
            "type": "object",
            "required": [
              "id",
              "name",
              "username",
              "registry"
            ],
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier for this credential"
              },
              "name": {
                "type": "string",
                "description": "Descriptive name for this credential"
              },
              "registry": {
                "type": "string",
                "enum": [
                  "GITHUB",
                  "GITLAB",
                  "DOCKER"
                ],
                "description": "The registry to use this credential with"
              },
              "username": {
                "type": "string",
                "description": "The username associated with the credential"
              }
            }
          }
        }
      },
      "nativeEnvironmentDetails": {
        "type": "object",
        "required": [
          "buildCommand",
          "startCommand"
        ],
        "properties": {
          "buildCommand": {
            "type": "string"
          },
          "startCommand": {
            "type": "string"
          },
          "preDeployCommand": {
            "type": "string"
          }
        }
      },
      "staticSiteDetails": {
        "type": "object",
        "required": [
          "buildCommand",
          "publishPath",
          "pullRequestPreviewsEnabled",
          "url",
          "buildPlan"
        ],
        "properties": {
          "buildCommand": {
            "type": "string"
          },
          "parentServer": {
            "required": [
              "id",
              "name"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "publishPath": {
            "type": "string"
          },
          "pullRequestPreviewsEnabled": {
            "type": "string",
            "enum": [
              "yes",
              "no"
            ]
          },
          "url": {
            "type": "string"
          },
          "buildPlan": {
            "type": "string",
            "enum": [
              "starter",
              "performance"
            ],
            "default": "starter"
          }
        }
      },
      "webServiceDetails": {
        "type": "object",
        "required": [
          "env",
          "envSpecificDetails",
          "plan",
          "region",
          "pullRequestPreviewsEnabled",
          "numInstances",
          "buildPlan",
          "healthCheckPath",
          "openPorts",
          "url"
        ],
        "properties": {
          "autoscaling": {
            "type": "object",
            "required": [
              "enabled",
              "min",
              "max",
              "criteria"
            ],
            "properties": {
              "enabled": {
                "type": "boolean",
                "default": false
              },
              "min": {
                "type": "integer",
                "description": "The minimum number of instances for the service"
              },
              "max": {
                "type": "integer",
                "description": "The maximum number of instances for the service"
              },
              "criteria": {
                "type": "object",
                "required": [
                  "cpu",
                  "memory"
                ],
                "properties": {
                  "cpu": {
                    "type": "object",
                    "required": [
                      "enabled",
                      "percentage"
                    ],
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "default": false
                      },
                      "percentage": {
                        "type": "integer",
                        "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                      }
                    }
                  },
                  "memory": {
                    "type": "object",
                    "required": [
                      "enabled",
                      "percentage"
                    ],
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "default": false
                      },
                      "percentage": {
                        "type": "integer",
                        "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                      }
                    }
                  }
                }
              }
            }
          },
          "disk": {
            "type": "object",
            "required": [
              "id",
              "name",
              "sizeGB",
              "mountPath"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "sizeGB": {
                "type": "integer"
              },
              "mountPath": {
                "type": "string"
              }
            }
          },
          "env": {
            "type": "string",
            "enum": [
              "docker",
              "elixir",
              "go",
              "node",
              "python",
              "ruby",
              "rust",
              "image"
            ],
            "description": "Environment (runtime)"
          },
          "envSpecificDetails": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "dockerCommand",
                  "dockerContext",
                  "dockerfilePath"
                ],
                "properties": {
                  "dockerCommand": {
                    "type": "string"
                  },
                  "dockerContext": {
                    "type": "string"
                  },
                  "dockerfilePath": {
                    "type": "string"
                  },
                  "preDeployCommand": {
                    "type": "string"
                  },
                  "registryCredential": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "username",
                      "registry"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier for this credential"
                      },
                      "name": {
                        "type": "string",
                        "description": "Descriptive name for this credential"
                      },
                      "registry": {
                        "type": "string",
                        "enum": [
                          "GITHUB",
                          "GITLAB",
                          "DOCKER"
                        ],
                        "description": "The registry to use this credential with"
                      },
                      "username": {
                        "type": "string",
                        "description": "The username associated with the credential"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "buildCommand",
                  "startCommand"
                ],
                "properties": {
                  "buildCommand": {
                    "type": "string"
                  },
                  "startCommand": {
                    "type": "string"
                  },
                  "preDeployCommand": {
                    "type": "string"
                  }
                }
              }
            ]
          },
          "healthCheckPath": {
            "type": "string"
          },
          "numInstances": {
            "type": "integer",
            "description": "For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."
          },
          "openPorts": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "port",
                "protocol"
              ],
              "properties": {
                "port": {
                  "type": "integer",
                  "example": 10000
                },
                "protocol": {
                  "type": "string",
                  "enum": [
                    "TCP",
                    "UDP"
                  ]
                }
              }
            }
          },
          "parentServer": {
            "required": [
              "id",
              "name"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "plan": {
            "type": "string",
            "enum": [
              "starter",
              "starter_plus",
              "standard",
              "standard_plus",
              "pro",
              "pro_plus",
              "pro_max",
              "pro_ultra",
              "free",
              "custom"
            ],
            "example": "starter",
            "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
          },
          "pullRequestPreviewsEnabled": {
            "type": "string",
            "enum": [
              "yes",
              "no"
            ]
          },
          "region": {
            "type": "string",
            "enum": [
              "frankfurt",
              "oregon",
              "ohio",
              "singapore"
            ],
            "default": "oregon",
            "description": "Defaults to \"oregon\""
          },
          "url": {
            "type": "string"
          },
          "buildPlan": {
            "type": "string",
            "enum": [
              "starter",
              "performance"
            ],
            "default": "starter"
          }
        }
      },
      "envSpecificDetails": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "dockerCommand",
              "dockerContext",
              "dockerfilePath"
            ],
            "properties": {
              "dockerCommand": {
                "type": "string"
              },
              "dockerContext": {
                "type": "string"
              },
              "dockerfilePath": {
                "type": "string"
              },
              "preDeployCommand": {
                "type": "string"
              },
              "registryCredential": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "username",
                  "registry"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique identifier for this credential"
                  },
                  "name": {
                    "type": "string",
                    "description": "Descriptive name for this credential"
                  },
                  "registry": {
                    "type": "string",
                    "enum": [
                      "GITHUB",
                      "GITLAB",
                      "DOCKER"
                    ],
                    "description": "The registry to use this credential with"
                  },
                  "username": {
                    "type": "string",
                    "description": "The username associated with the credential"
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "buildCommand",
              "startCommand"
            ],
            "properties": {
              "buildCommand": {
                "type": "string"
              },
              "startCommand": {
                "type": "string"
              },
              "preDeployCommand": {
                "type": "string"
              }
            }
          }
        ]
      },
      "envSpecificDetailsPOST": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "dockerCommand": {
                "type": "string"
              },
              "dockerContext": {
                "type": "string"
              },
              "dockerfilePath": {
                "type": "string",
                "description": "Defaults to \"./Dockerfile\""
              },
              "registryCredentialId": {
                "type": "string"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "buildCommand",
              "startCommand"
            ],
            "properties": {
              "buildCommand": {
                "type": "string"
              },
              "startCommand": {
                "type": "string"
              }
            },
            "description": "Fields for native environment (runtime) services"
          }
        ]
      },
      "resource": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "privateServiceDetails": {
        "type": "object",
        "required": [
          "env",
          "envSpecificDetails",
          "plan",
          "region",
          "pullRequestPreviewsEnabled",
          "numInstances",
          "buildPlan",
          "openPorts",
          "url"
        ],
        "properties": {
          "autoscaling": {
            "type": "object",
            "required": [
              "enabled",
              "min",
              "max",
              "criteria"
            ],
            "properties": {
              "enabled": {
                "type": "boolean",
                "default": false
              },
              "min": {
                "type": "integer",
                "description": "The minimum number of instances for the service"
              },
              "max": {
                "type": "integer",
                "description": "The maximum number of instances for the service"
              },
              "criteria": {
                "type": "object",
                "required": [
                  "cpu",
                  "memory"
                ],
                "properties": {
                  "cpu": {
                    "type": "object",
                    "required": [
                      "enabled",
                      "percentage"
                    ],
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "default": false
                      },
                      "percentage": {
                        "type": "integer",
                        "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                      }
                    }
                  },
                  "memory": {
                    "type": "object",
                    "required": [
                      "enabled",
                      "percentage"
                    ],
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "default": false
                      },
                      "percentage": {
                        "type": "integer",
                        "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                      }
                    }
                  }
                }
              }
            }
          },
          "disk": {
            "type": "object",
            "required": [
              "id",
              "name",
              "sizeGB",
              "mountPath"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "sizeGB": {
                "type": "integer"
              },
              "mountPath": {
                "type": "string"
              }
            }
          },
          "env": {
            "type": "string",
            "enum": [
              "docker",
              "elixir",
              "go",
              "node",
              "python",
              "ruby",
              "rust",
              "image"
            ],
            "description": "Environment (runtime)"
          },
          "envSpecificDetails": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "dockerCommand",
                  "dockerContext",
                  "dockerfilePath"
                ],
                "properties": {
                  "dockerCommand": {
                    "type": "string"
                  },
                  "dockerContext": {
                    "type": "string"
                  },
                  "dockerfilePath": {
                    "type": "string"
                  },
                  "preDeployCommand": {
                    "type": "string"
                  },
                  "registryCredential": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "username",
                      "registry"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier for this credential"
                      },
                      "name": {
                        "type": "string",
                        "description": "Descriptive name for this credential"
                      },
                      "registry": {
                        "type": "string",
                        "enum": [
                          "GITHUB",
                          "GITLAB",
                          "DOCKER"
                        ],
                        "description": "The registry to use this credential with"
                      },
                      "username": {
                        "type": "string",
                        "description": "The username associated with the credential"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "buildCommand",
                  "startCommand"
                ],
                "properties": {
                  "buildCommand": {
                    "type": "string"
                  },
                  "startCommand": {
                    "type": "string"
                  },
                  "preDeployCommand": {
                    "type": "string"
                  }
                }
              }
            ]
          },
          "numInstances": {
            "type": "integer",
            "description": "For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."
          },
          "openPorts": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "port",
                "protocol"
              ],
              "properties": {
                "port": {
                  "type": "integer",
                  "example": 10000
                },
                "protocol": {
                  "type": "string",
                  "enum": [
                    "TCP",
                    "UDP"
                  ]
                }
              }
            }
          },
          "parentServer": {
            "required": [
              "id",
              "name"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "plan": {
            "type": "string",
            "enum": [
              "starter",
              "starter_plus",
              "standard",
              "standard_plus",
              "pro",
              "pro_plus",
              "pro_max",
              "pro_ultra",
              "free",
              "custom"
            ],
            "example": "starter",
            "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
          },
          "pullRequestPreviewsEnabled": {
            "type": "string",
            "enum": [
              "yes",
              "no"
            ]
          },
          "region": {
            "type": "string",
            "enum": [
              "frankfurt",
              "oregon",
              "ohio",
              "singapore"
            ],
            "default": "oregon",
            "description": "Defaults to \"oregon\""
          },
          "url": {
            "type": "string"
          },
          "buildPlan": {
            "type": "string",
            "enum": [
              "starter",
              "performance"
            ],
            "default": "starter"
          }
        }
      },
      "serviceDisk": {
        "type": "object",
        "required": [
          "name",
          "mountPath"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "mountPath": {
            "type": "string"
          },
          "sizeGB": {
            "type": "integer",
            "minimum": 1,
            "description": "Defaults to 1"
          }
        }
      },
      "disk": {
        "type": "object",
        "required": [
          "id",
          "name",
          "sizeGB",
          "mountPath"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "sizeGB": {
            "type": "integer"
          },
          "mountPath": {
            "type": "string"
          }
        }
      },
      "diskWithCursor": {
        "required": [
          "disk",
          "cursor"
        ],
        "type": "object",
        "properties": {
          "disk": {
            "type": "object",
            "required": [
              "id",
              "name",
              "sizeGB",
              "mountPath",
              "createdAt",
              "updatedAt"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "sizeGB": {
                "type": "integer"
              },
              "mountPath": {
                "type": "string"
              },
              "serviceId": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "cursor": {
            "type": "string"
          }
        }
      },
      "diskDetails": {
        "type": "object",
        "required": [
          "id",
          "name",
          "sizeGB",
          "mountPath",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "sizeGB": {
            "type": "integer"
          },
          "mountPath": {
            "type": "string"
          },
          "serviceId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "diskPATCH": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "sizeGB": {
            "type": "integer"
          },
          "mountPath": {
            "type": "string"
          }
        }
      },
      "diskPOST": {
        "type": "object",
        "required": [
          "name",
          "sizeGB",
          "mountPath",
          "serviceId"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "sizeGB": {
            "type": "integer"
          },
          "mountPath": {
            "type": "string"
          },
          "serviceId": {
            "type": "string"
          }
        }
      },
      "instanceId": {
        "description": "When a service with a disk is scaled, the instanceId is used to identify the instance that the disk is attached to. Each instance's disks get their own snapshots, and can be restored separately.",
        "type": "string"
      },
      "diskSnapshot": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "snapshotKey": {
            "type": "string"
          },
          "instanceId": {
            "description": "When a service with a disk is scaled, the instanceId is used to identify the instance that the disk is attached to. Each instance's disks get their own snapshots, and can be restored separately.",
            "type": "string"
          }
        }
      },
      "snapshotRestorePOST": {
        "type": "object",
        "required": [
          "snapshotKey"
        ],
        "properties": {
          "snapshotKey": {
            "type": "string"
          },
          "instanceId": {
            "description": "When a service with a disk is scaled, the instanceId is used to identify the instance that the disk is attached to. Each instance's disks get their own snapshots, and can be restored separately.",
            "type": "string"
          }
        }
      },
      "backgroundWorkerDetails": {
        "type": "object",
        "required": [
          "env",
          "envSpecificDetails",
          "plan",
          "region",
          "pullRequestPreviewsEnabled",
          "numInstances",
          "buildPlan"
        ],
        "properties": {
          "autoscaling": {
            "type": "object",
            "required": [
              "enabled",
              "min",
              "max",
              "criteria"
            ],
            "properties": {
              "enabled": {
                "type": "boolean",
                "default": false
              },
              "min": {
                "type": "integer",
                "description": "The minimum number of instances for the service"
              },
              "max": {
                "type": "integer",
                "description": "The maximum number of instances for the service"
              },
              "criteria": {
                "type": "object",
                "required": [
                  "cpu",
                  "memory"
                ],
                "properties": {
                  "cpu": {
                    "type": "object",
                    "required": [
                      "enabled",
                      "percentage"
                    ],
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "default": false
                      },
                      "percentage": {
                        "type": "integer",
                        "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                      }
                    }
                  },
                  "memory": {
                    "type": "object",
                    "required": [
                      "enabled",
                      "percentage"
                    ],
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "default": false
                      },
                      "percentage": {
                        "type": "integer",
                        "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                      }
                    }
                  }
                }
              }
            }
          },
          "disk": {
            "type": "object",
            "required": [
              "id",
              "name",
              "sizeGB",
              "mountPath"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "sizeGB": {
                "type": "integer"
              },
              "mountPath": {
                "type": "string"
              }
            }
          },
          "env": {
            "type": "string",
            "enum": [
              "docker",
              "elixir",
              "go",
              "node",
              "python",
              "ruby",
              "rust",
              "image"
            ],
            "description": "Environment (runtime)"
          },
          "envSpecificDetails": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "dockerCommand",
                  "dockerContext",
                  "dockerfilePath"
                ],
                "properties": {
                  "dockerCommand": {
                    "type": "string"
                  },
                  "dockerContext": {
                    "type": "string"
                  },
                  "dockerfilePath": {
                    "type": "string"
                  },
                  "preDeployCommand": {
                    "type": "string"
                  },
                  "registryCredential": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "username",
                      "registry"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier for this credential"
                      },
                      "name": {
                        "type": "string",
                        "description": "Descriptive name for this credential"
                      },
                      "registry": {
                        "type": "string",
                        "enum": [
                          "GITHUB",
                          "GITLAB",
                          "DOCKER"
                        ],
                        "description": "The registry to use this credential with"
                      },
                      "username": {
                        "type": "string",
                        "description": "The username associated with the credential"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "buildCommand",
                  "startCommand"
                ],
                "properties": {
                  "buildCommand": {
                    "type": "string"
                  },
                  "startCommand": {
                    "type": "string"
                  },
                  "preDeployCommand": {
                    "type": "string"
                  }
                }
              }
            ]
          },
          "numInstances": {
            "type": "integer",
            "description": "For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service."
          },
          "parentServer": {
            "required": [
              "id",
              "name"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "plan": {
            "type": "string",
            "enum": [
              "starter",
              "starter_plus",
              "standard",
              "standard_plus",
              "pro",
              "pro_plus",
              "pro_max",
              "pro_ultra",
              "free",
              "custom"
            ],
            "example": "starter",
            "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
          },
          "pullRequestPreviewsEnabled": {
            "type": "string",
            "enum": [
              "yes",
              "no"
            ]
          },
          "region": {
            "type": "string",
            "enum": [
              "frankfurt",
              "oregon",
              "ohio",
              "singapore"
            ],
            "default": "oregon",
            "description": "Defaults to \"oregon\""
          },
          "buildPlan": {
            "type": "string",
            "enum": [
              "starter",
              "performance"
            ],
            "default": "starter"
          }
        }
      },
      "cronJobDetails": {
        "required": [
          "env",
          "envSpecificDetails",
          "plan",
          "region",
          "schedule",
          "buildPlan"
        ],
        "type": "object",
        "properties": {
          "env": {
            "type": "string",
            "enum": [
              "docker",
              "elixir",
              "go",
              "node",
              "python",
              "ruby",
              "rust",
              "image"
            ],
            "description": "Environment (runtime)"
          },
          "envSpecificDetails": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "dockerCommand",
                  "dockerContext",
                  "dockerfilePath"
                ],
                "properties": {
                  "dockerCommand": {
                    "type": "string"
                  },
                  "dockerContext": {
                    "type": "string"
                  },
                  "dockerfilePath": {
                    "type": "string"
                  },
                  "preDeployCommand": {
                    "type": "string"
                  },
                  "registryCredential": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "username",
                      "registry"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier for this credential"
                      },
                      "name": {
                        "type": "string",
                        "description": "Descriptive name for this credential"
                      },
                      "registry": {
                        "type": "string",
                        "enum": [
                          "GITHUB",
                          "GITLAB",
                          "DOCKER"
                        ],
                        "description": "The registry to use this credential with"
                      },
                      "username": {
                        "type": "string",
                        "description": "The username associated with the credential"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "buildCommand",
                  "startCommand"
                ],
                "properties": {
                  "buildCommand": {
                    "type": "string"
                  },
                  "startCommand": {
                    "type": "string"
                  },
                  "preDeployCommand": {
                    "type": "string"
                  }
                }
              }
            ]
          },
          "lastSuccessfulRunAt": {
            "type": "string",
            "format": "date-time"
          },
          "plan": {
            "type": "string",
            "enum": [
              "starter",
              "starter_plus",
              "standard",
              "standard_plus",
              "pro",
              "pro_plus",
              "pro_max",
              "pro_ultra",
              "free",
              "custom"
            ],
            "example": "starter",
            "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
          },
          "region": {
            "type": "string",
            "enum": [
              "frankfurt",
              "oregon",
              "ohio",
              "singapore"
            ],
            "default": "oregon",
            "description": "Defaults to \"oregon\""
          },
          "schedule": {
            "type": "string"
          },
          "buildPlan": {
            "type": "string",
            "enum": [
              "starter",
              "performance"
            ],
            "default": "starter"
          }
        }
      },
      "servicePOST": {
        "type": "object",
        "required": [
          "type",
          "name",
          "ownerId"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "static_site",
              "web_service",
              "private_service",
              "background_worker",
              "cron_job"
            ]
          },
          "name": {
            "type": "string"
          },
          "ownerId": {
            "type": "string"
          },
          "repo": {
            "type": "string",
            "example": "https://github.com/render-examples/flask-hello-world",
            "description": "Do not include the branch in the repo string. You can instead supply a 'branch' parameter."
          },
          "autoDeploy": {
            "type": "string",
            "enum": [
              "yes",
              "no"
            ],
            "default": "yes",
            "description": "Defaults to \"yes\""
          },
          "branch": {
            "type": "string",
            "description": "If left empty, this will fall back to the default branch of the repository"
          },
          "image": {
            "type": "object",
            "required": [
              "imagePath",
              "ownerId"
            ],
            "properties": {
              "ownerId": {
                "type": "string",
                "description": "The ID of the owner for this image. This should match the owner of the service as well as the owner of any specified registry credential."
              },
              "registryCredentialId": {
                "type": "string",
                "description": "Optional reference to the registry credential passed to the image repository to retrieve this image."
              },
              "imagePath": {
                "type": "string",
                "description": "Path to the image used for this server (e.g docker.io/library/nginx:latest)."
              }
            }
          },
          "buildFilter": {
            "type": "object",
            "required": [
              "paths",
              "ignoredPaths"
            ],
            "properties": {
              "paths": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "ignoredPaths": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "rootDir": {
            "type": "string"
          },
          "envVars": {
            "type": "array",
            "items": {
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "required": [
                    "key",
                    "value"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "key",
                    "generateValue"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "generateValue": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "secretFiles": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "name",
                "content"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "content": {
                  "type": "string"
                }
              }
            }
          },
          "serviceDetails": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "buildCommand": {
                    "type": "string"
                  },
                  "headers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "path",
                        "name",
                        "value"
                      ],
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "The request path to add the header to. Wildcards will cause headers to be applied to all matching paths.",
                          "example": "/static/*"
                        },
                        "name": {
                          "type": "string",
                          "description": "Header name",
                          "example": "Cache-Control"
                        },
                        "value": {
                          "type": "string",
                          "description": "Header value",
                          "example": "public, max-age=604800"
                        }
                      }
                    }
                  },
                  "publishPath": {
                    "type": "string",
                    "description": "Defaults to \"public\""
                  },
                  "pullRequestPreviewsEnabled": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ],
                    "default": "no",
                    "description": "Defaults to \"no\""
                  },
                  "routes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "source",
                        "destination"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "redirect",
                            "rewrite"
                          ]
                        },
                        "source": {
                          "type": "string",
                          "example": "/:bar/foo"
                        },
                        "destination": {
                          "type": "string",
                          "example": "/foo/:bar"
                        },
                        "priority": {
                          "type": "integer",
                          "description": "Redirect and Rewrite Rules are applied in priority order starting at 0. Defaults to last in the priority list."
                        }
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "env"
                ],
                "properties": {
                  "autoscaling": {
                    "type": "object",
                    "required": [
                      "enabled",
                      "min",
                      "max",
                      "criteria"
                    ],
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "default": false
                      },
                      "min": {
                        "type": "integer",
                        "description": "The minimum number of instances for the service"
                      },
                      "max": {
                        "type": "integer",
                        "description": "The maximum number of instances for the service"
                      },
                      "criteria": {
                        "type": "object",
                        "required": [
                          "cpu",
                          "memory"
                        ],
                        "properties": {
                          "cpu": {
                            "type": "object",
                            "required": [
                              "enabled",
                              "percentage"
                            ],
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "default": false
                              },
                              "percentage": {
                                "type": "integer",
                                "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                              }
                            }
                          },
                          "memory": {
                            "type": "object",
                            "required": [
                              "enabled",
                              "percentage"
                            ],
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "default": false
                              },
                              "percentage": {
                                "type": "integer",
                                "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "disk": {
                    "type": "object",
                    "required": [
                      "name",
                      "mountPath"
                    ],
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "mountPath": {
                        "type": "string"
                      },
                      "sizeGB": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "Defaults to 1"
                      }
                    }
                  },
                  "env": {
                    "type": "string",
                    "enum": [
                      "docker",
                      "elixir",
                      "go",
                      "node",
                      "python",
                      "ruby",
                      "rust",
                      "image"
                    ],
                    "description": "Environment (runtime)"
                  },
                  "envSpecificDetails": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "dockerCommand": {
                            "type": "string"
                          },
                          "dockerContext": {
                            "type": "string"
                          },
                          "dockerfilePath": {
                            "type": "string",
                            "description": "Defaults to \"./Dockerfile\""
                          },
                          "registryCredentialId": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "buildCommand",
                          "startCommand"
                        ],
                        "properties": {
                          "buildCommand": {
                            "type": "string"
                          },
                          "startCommand": {
                            "type": "string"
                          }
                        },
                        "description": "Fields for native environment (runtime) services"
                      }
                    ]
                  },
                  "healthCheckPath": {
                    "type": "string"
                  },
                  "numInstances": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Defaults to 1"
                  },
                  "plan": {
                    "type": "string",
                    "enum": [
                      "starter",
                      "standard",
                      "pro",
                      "pro_plus",
                      "pro_max",
                      "pro_ultra"
                    ],
                    "default": "starter",
                    "description": "Defaults to \"starter\""
                  },
                  "preDeployCommand": {
                    "type": "string"
                  },
                  "pullRequestPreviewsEnabled": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ],
                    "default": "no",
                    "description": "Defaults to \"no\""
                  },
                  "region": {
                    "type": "string",
                    "enum": [
                      "frankfurt",
                      "oregon",
                      "ohio",
                      "singapore"
                    ],
                    "default": "oregon",
                    "description": "Defaults to \"oregon\""
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "env"
                ],
                "properties": {
                  "autoscaling": {
                    "type": "object",
                    "required": [
                      "enabled",
                      "min",
                      "max",
                      "criteria"
                    ],
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "default": false
                      },
                      "min": {
                        "type": "integer",
                        "description": "The minimum number of instances for the service"
                      },
                      "max": {
                        "type": "integer",
                        "description": "The maximum number of instances for the service"
                      },
                      "criteria": {
                        "type": "object",
                        "required": [
                          "cpu",
                          "memory"
                        ],
                        "properties": {
                          "cpu": {
                            "type": "object",
                            "required": [
                              "enabled",
                              "percentage"
                            ],
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "default": false
                              },
                              "percentage": {
                                "type": "integer",
                                "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                              }
                            }
                          },
                          "memory": {
                            "type": "object",
                            "required": [
                              "enabled",
                              "percentage"
                            ],
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "default": false
                              },
                              "percentage": {
                                "type": "integer",
                                "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "disk": {
                    "type": "object",
                    "required": [
                      "name",
                      "mountPath"
                    ],
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "mountPath": {
                        "type": "string"
                      },
                      "sizeGB": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "Defaults to 1"
                      }
                    }
                  },
                  "env": {
                    "type": "string",
                    "enum": [
                      "docker",
                      "elixir",
                      "go",
                      "node",
                      "python",
                      "ruby",
                      "rust",
                      "image"
                    ],
                    "description": "Environment (runtime)"
                  },
                  "envSpecificDetails": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "dockerCommand": {
                            "type": "string"
                          },
                          "dockerContext": {
                            "type": "string"
                          },
                          "dockerfilePath": {
                            "type": "string",
                            "description": "Defaults to \"./Dockerfile\""
                          },
                          "registryCredentialId": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "buildCommand",
                          "startCommand"
                        ],
                        "properties": {
                          "buildCommand": {
                            "type": "string"
                          },
                          "startCommand": {
                            "type": "string"
                          }
                        },
                        "description": "Fields for native environment (runtime) services"
                      }
                    ]
                  },
                  "numInstances": {
                    "type": "integer",
                    "minimum": 1,
                    "default": 1,
                    "description": "Defaults to 1"
                  },
                  "plan": {
                    "type": "string",
                    "enum": [
                      "starter",
                      "standard",
                      "pro",
                      "pro_plus",
                      "pro_max",
                      "pro_ultra"
                    ],
                    "default": "starter",
                    "description": "Defaults to \"starter\""
                  },
                  "preDeployCommand": {
                    "type": "string"
                  },
                  "pullRequestPreviewsEnabled": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ],
                    "default": "no",
                    "description": "Defaults to \"no\""
                  },
                  "region": {
                    "type": "string",
                    "enum": [
                      "frankfurt",
                      "oregon",
                      "ohio",
                      "singapore"
                    ],
                    "default": "oregon",
                    "description": "Defaults to \"oregon\""
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "env"
                ],
                "properties": {
                  "autoscaling": {
                    "type": "object",
                    "required": [
                      "enabled",
                      "min",
                      "max",
                      "criteria"
                    ],
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "default": false
                      },
                      "min": {
                        "type": "integer",
                        "description": "The minimum number of instances for the service"
                      },
                      "max": {
                        "type": "integer",
                        "description": "The maximum number of instances for the service"
                      },
                      "criteria": {
                        "type": "object",
                        "required": [
                          "cpu",
                          "memory"
                        ],
                        "properties": {
                          "cpu": {
                            "type": "object",
                            "required": [
                              "enabled",
                              "percentage"
                            ],
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "default": false
                              },
                              "percentage": {
                                "type": "integer",
                                "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                              }
                            }
                          },
                          "memory": {
                            "type": "object",
                            "required": [
                              "enabled",
                              "percentage"
                            ],
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "default": false
                              },
                              "percentage": {
                                "type": "integer",
                                "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "disk": {
                    "type": "object",
                    "required": [
                      "name",
                      "mountPath"
                    ],
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "mountPath": {
                        "type": "string"
                      },
                      "sizeGB": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "Defaults to 1"
                      }
                    }
                  },
                  "env": {
                    "type": "string",
                    "enum": [
                      "docker",
                      "elixir",
                      "go",
                      "node",
                      "python",
                      "ruby",
                      "rust",
                      "image"
                    ],
                    "description": "Environment (runtime)"
                  },
                  "envSpecificDetails": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "dockerCommand": {
                            "type": "string"
                          },
                          "dockerContext": {
                            "type": "string"
                          },
                          "dockerfilePath": {
                            "type": "string",
                            "description": "Defaults to \"./Dockerfile\""
                          },
                          "registryCredentialId": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "buildCommand",
                          "startCommand"
                        ],
                        "properties": {
                          "buildCommand": {
                            "type": "string"
                          },
                          "startCommand": {
                            "type": "string"
                          }
                        },
                        "description": "Fields for native environment (runtime) services"
                      }
                    ]
                  },
                  "numInstances": {
                    "type": "integer",
                    "minimum": 1,
                    "default": 1,
                    "description": "Defaults to 1"
                  },
                  "plan": {
                    "type": "string",
                    "enum": [
                      "starter",
                      "standard",
                      "pro",
                      "pro_plus",
                      "pro_max",
                      "pro_ultra"
                    ],
                    "default": "starter",
                    "description": "Defaults to \"starter\""
                  },
                  "preDeployCommand": {
                    "type": "string"
                  },
                  "pullRequestPreviewsEnabled": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ],
                    "default": "no",
                    "description": "Defaults to \"no\""
                  },
                  "region": {
                    "type": "string",
                    "enum": [
                      "frankfurt",
                      "oregon",
                      "ohio",
                      "singapore"
                    ],
                    "default": "oregon",
                    "description": "Defaults to \"oregon\""
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "env",
                  "schedule"
                ],
                "properties": {
                  "env": {
                    "type": "string",
                    "enum": [
                      "docker",
                      "elixir",
                      "go",
                      "node",
                      "python",
                      "ruby",
                      "rust",
                      "image"
                    ],
                    "description": "Environment (runtime)"
                  },
                  "envSpecificDetails": {
                    "oneOf": [
                      {
                        "type": "object",
                        "required": [
                          "dockerCommand",
                          "dockerContext",
                          "dockerfilePath"
                        ],
                        "properties": {
                          "dockerCommand": {
                            "type": "string"
                          },
                          "dockerContext": {
                            "type": "string"
                          },
                          "dockerfilePath": {
                            "type": "string"
                          },
                          "preDeployCommand": {
                            "type": "string"
                          },
                          "registryCredential": {
                            "type": "object",
                            "required": [
                              "id",
                              "name",
                              "username",
                              "registry"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier for this credential"
                              },
                              "name": {
                                "type": "string",
                                "description": "Descriptive name for this credential"
                              },
                              "registry": {
                                "type": "string",
                                "enum": [
                                  "GITHUB",
                                  "GITLAB",
                                  "DOCKER"
                                ],
                                "description": "The registry to use this credential with"
                              },
                              "username": {
                                "type": "string",
                                "description": "The username associated with the credential"
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "buildCommand",
                          "startCommand"
                        ],
                        "properties": {
                          "buildCommand": {
                            "type": "string"
                          },
                          "startCommand": {
                            "type": "string"
                          },
                          "preDeployCommand": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "plan": {
                    "type": "string",
                    "enum": [
                      "starter",
                      "standard",
                      "pro",
                      "pro_plus",
                      "pro_max",
                      "pro_ultra"
                    ],
                    "default": "starter",
                    "description": "Defaults to \"starter\""
                  },
                  "region": {
                    "type": "string",
                    "enum": [
                      "frankfurt",
                      "oregon",
                      "ohio",
                      "singapore"
                    ],
                    "default": "oregon",
                    "description": "Defaults to \"oregon\""
                  },
                  "schedule": {
                    "type": "string"
                  }
                }
              }
            ]
          }
        }
      },
      "dockerDetailsPOST": {
        "type": "object",
        "properties": {
          "dockerCommand": {
            "type": "string"
          },
          "dockerContext": {
            "type": "string"
          },
          "dockerfilePath": {
            "type": "string",
            "description": "Defaults to \"./Dockerfile\""
          },
          "registryCredentialId": {
            "type": "string"
          }
        }
      },
      "nativeEnvironmentDetailsPOST": {
        "type": "object",
        "required": [
          "buildCommand",
          "startCommand"
        ],
        "properties": {
          "buildCommand": {
            "type": "string"
          },
          "startCommand": {
            "type": "string"
          }
        },
        "description": "Fields for native environment (runtime) services"
      },
      "staticSiteDetailsPOST": {
        "type": "object",
        "properties": {
          "buildCommand": {
            "type": "string"
          },
          "headers": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "path",
                "name",
                "value"
              ],
              "properties": {
                "path": {
                  "type": "string",
                  "description": "The request path to add the header to. Wildcards will cause headers to be applied to all matching paths.",
                  "example": "/static/*"
                },
                "name": {
                  "type": "string",
                  "description": "Header name",
                  "example": "Cache-Control"
                },
                "value": {
                  "type": "string",
                  "description": "Header value",
                  "example": "public, max-age=604800"
                }
              }
            }
          },
          "publishPath": {
            "type": "string",
            "description": "Defaults to \"public\""
          },
          "pullRequestPreviewsEnabled": {
            "type": "string",
            "enum": [
              "yes",
              "no"
            ],
            "default": "no",
            "description": "Defaults to \"no\""
          },
          "routes": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "source",
                "destination"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "redirect",
                    "rewrite"
                  ]
                },
                "source": {
                  "type": "string",
                  "example": "/:bar/foo"
                },
                "destination": {
                  "type": "string",
                  "example": "/foo/:bar"
                },
                "priority": {
                  "type": "integer",
                  "description": "Redirect and Rewrite Rules are applied in priority order starting at 0. Defaults to last in the priority list."
                }
              }
            }
          }
        }
      },
      "webServiceDetailsPOST": {
        "type": "object",
        "required": [
          "env"
        ],
        "properties": {
          "autoscaling": {
            "type": "object",
            "required": [
              "enabled",
              "min",
              "max",
              "criteria"
            ],
            "properties": {
              "enabled": {
                "type": "boolean",
                "default": false
              },
              "min": {
                "type": "integer",
                "description": "The minimum number of instances for the service"
              },
              "max": {
                "type": "integer",
                "description": "The maximum number of instances for the service"
              },
              "criteria": {
                "type": "object",
                "required": [
                  "cpu",
                  "memory"
                ],
                "properties": {
                  "cpu": {
                    "type": "object",
                    "required": [
                      "enabled",
                      "percentage"
                    ],
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "default": false
                      },
                      "percentage": {
                        "type": "integer",
                        "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                      }
                    }
                  },
                  "memory": {
                    "type": "object",
                    "required": [
                      "enabled",
                      "percentage"
                    ],
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "default": false
                      },
                      "percentage": {
                        "type": "integer",
                        "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                      }
                    }
                  }
                }
              }
            }
          },
          "disk": {
            "type": "object",
            "required": [
              "name",
              "mountPath"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "mountPath": {
                "type": "string"
              },
              "sizeGB": {
                "type": "integer",
                "minimum": 1,
                "description": "Defaults to 1"
              }
            }
          },
          "env": {
            "type": "string",
            "enum": [
              "docker",
              "elixir",
              "go",
              "node",
              "python",
              "ruby",
              "rust",
              "image"
            ],
            "description": "Environment (runtime)"
          },
          "envSpecificDetails": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "dockerCommand": {
                    "type": "string"
                  },
                  "dockerContext": {
                    "type": "string"
                  },
                  "dockerfilePath": {
                    "type": "string",
                    "description": "Defaults to \"./Dockerfile\""
                  },
                  "registryCredentialId": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "buildCommand",
                  "startCommand"
                ],
                "properties": {
                  "buildCommand": {
                    "type": "string"
                  },
                  "startCommand": {
                    "type": "string"
                  }
                },
                "description": "Fields for native environment (runtime) services"
              }
            ]
          },
          "healthCheckPath": {
            "type": "string"
          },
          "numInstances": {
            "type": "integer",
            "minimum": 1,
            "description": "Defaults to 1"
          },
          "plan": {
            "type": "string",
            "enum": [
              "starter",
              "standard",
              "pro",
              "pro_plus",
              "pro_max",
              "pro_ultra"
            ],
            "default": "starter",
            "description": "Defaults to \"starter\""
          },
          "preDeployCommand": {
            "type": "string"
          },
          "pullRequestPreviewsEnabled": {
            "type": "string",
            "enum": [
              "yes",
              "no"
            ],
            "default": "no",
            "description": "Defaults to \"no\""
          },
          "region": {
            "type": "string",
            "enum": [
              "frankfurt",
              "oregon",
              "ohio",
              "singapore"
            ],
            "default": "oregon",
            "description": "Defaults to \"oregon\""
          }
        }
      },
      "privateServiceDetailsPOST": {
        "type": "object",
        "required": [
          "env"
        ],
        "properties": {
          "autoscaling": {
            "type": "object",
            "required": [
              "enabled",
              "min",
              "max",
              "criteria"
            ],
            "properties": {
              "enabled": {
                "type": "boolean",
                "default": false
              },
              "min": {
                "type": "integer",
                "description": "The minimum number of instances for the service"
              },
              "max": {
                "type": "integer",
                "description": "The maximum number of instances for the service"
              },
              "criteria": {
                "type": "object",
                "required": [
                  "cpu",
                  "memory"
                ],
                "properties": {
                  "cpu": {
                    "type": "object",
                    "required": [
                      "enabled",
                      "percentage"
                    ],
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "default": false
                      },
                      "percentage": {
                        "type": "integer",
                        "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                      }
                    }
                  },
                  "memory": {
                    "type": "object",
                    "required": [
                      "enabled",
                      "percentage"
                    ],
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "default": false
                      },
                      "percentage": {
                        "type": "integer",
                        "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                      }
                    }
                  }
                }
              }
            }
          },
          "disk": {
            "type": "object",
            "required": [
              "name",
              "mountPath"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "mountPath": {
                "type": "string"
              },
              "sizeGB": {
                "type": "integer",
                "minimum": 1,
                "description": "Defaults to 1"
              }
            }
          },
          "env": {
            "type": "string",
            "enum": [
              "docker",
              "elixir",
              "go",
              "node",
              "python",
              "ruby",
              "rust",
              "image"
            ],
            "description": "Environment (runtime)"
          },
          "envSpecificDetails": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "dockerCommand": {
                    "type": "string"
                  },
                  "dockerContext": {
                    "type": "string"
                  },
                  "dockerfilePath": {
                    "type": "string",
                    "description": "Defaults to \"./Dockerfile\""
                  },
                  "registryCredentialId": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "buildCommand",
                  "startCommand"
                ],
                "properties": {
                  "buildCommand": {
                    "type": "string"
                  },
                  "startCommand": {
                    "type": "string"
                  }
                },
                "description": "Fields for native environment (runtime) services"
              }
            ]
          },
          "numInstances": {
            "type": "integer",
            "minimum": 1,
            "default": 1,
            "description": "Defaults to 1"
          },
          "plan": {
            "type": "string",
            "enum": [
              "starter",
              "standard",
              "pro",
              "pro_plus",
              "pro_max",
              "pro_ultra"
            ],
            "default": "starter",
            "description": "Defaults to \"starter\""
          },
          "preDeployCommand": {
            "type": "string"
          },
          "pullRequestPreviewsEnabled": {
            "type": "string",
            "enum": [
              "yes",
              "no"
            ],
            "default": "no",
            "description": "Defaults to \"no\""
          },
          "region": {
            "type": "string",
            "enum": [
              "frankfurt",
              "oregon",
              "ohio",
              "singapore"
            ],
            "default": "oregon",
            "description": "Defaults to \"oregon\""
          }
        }
      },
      "backgroundWorkerDetailsPOST": {
        "type": "object",
        "required": [
          "env"
        ],
        "properties": {
          "autoscaling": {
            "type": "object",
            "required": [
              "enabled",
              "min",
              "max",
              "criteria"
            ],
            "properties": {
              "enabled": {
                "type": "boolean",
                "default": false
              },
              "min": {
                "type": "integer",
                "description": "The minimum number of instances for the service"
              },
              "max": {
                "type": "integer",
                "description": "The maximum number of instances for the service"
              },
              "criteria": {
                "type": "object",
                "required": [
                  "cpu",
                  "memory"
                ],
                "properties": {
                  "cpu": {
                    "type": "object",
                    "required": [
                      "enabled",
                      "percentage"
                    ],
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "default": false
                      },
                      "percentage": {
                        "type": "integer",
                        "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                      }
                    }
                  },
                  "memory": {
                    "type": "object",
                    "required": [
                      "enabled",
                      "percentage"
                    ],
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "default": false
                      },
                      "percentage": {
                        "type": "integer",
                        "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                      }
                    }
                  }
                }
              }
            }
          },
          "disk": {
            "type": "object",
            "required": [
              "name",
              "mountPath"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "mountPath": {
                "type": "string"
              },
              "sizeGB": {
                "type": "integer",
                "minimum": 1,
                "description": "Defaults to 1"
              }
            }
          },
          "env": {
            "type": "string",
            "enum": [
              "docker",
              "elixir",
              "go",
              "node",
              "python",
              "ruby",
              "rust",
              "image"
            ],
            "description": "Environment (runtime)"
          },
          "envSpecificDetails": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "dockerCommand": {
                    "type": "string"
                  },
                  "dockerContext": {
                    "type": "string"
                  },
                  "dockerfilePath": {
                    "type": "string",
                    "description": "Defaults to \"./Dockerfile\""
                  },
                  "registryCredentialId": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "buildCommand",
                  "startCommand"
                ],
                "properties": {
                  "buildCommand": {
                    "type": "string"
                  },
                  "startCommand": {
                    "type": "string"
                  }
                },
                "description": "Fields for native environment (runtime) services"
              }
            ]
          },
          "numInstances": {
            "type": "integer",
            "minimum": 1,
            "default": 1,
            "description": "Defaults to 1"
          },
          "plan": {
            "type": "string",
            "enum": [
              "starter",
              "standard",
              "pro",
              "pro_plus",
              "pro_max",
              "pro_ultra"
            ],
            "default": "starter",
            "description": "Defaults to \"starter\""
          },
          "preDeployCommand": {
            "type": "string"
          },
          "pullRequestPreviewsEnabled": {
            "type": "string",
            "enum": [
              "yes",
              "no"
            ],
            "default": "no",
            "description": "Defaults to \"no\""
          },
          "region": {
            "type": "string",
            "enum": [
              "frankfurt",
              "oregon",
              "ohio",
              "singapore"
            ],
            "default": "oregon",
            "description": "Defaults to \"oregon\""
          }
        }
      },
      "cronJobDetailsPOST": {
        "type": "object",
        "required": [
          "env",
          "schedule"
        ],
        "properties": {
          "env": {
            "type": "string",
            "enum": [
              "docker",
              "elixir",
              "go",
              "node",
              "python",
              "ruby",
              "rust",
              "image"
            ],
            "description": "Environment (runtime)"
          },
          "envSpecificDetails": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "dockerCommand",
                  "dockerContext",
                  "dockerfilePath"
                ],
                "properties": {
                  "dockerCommand": {
                    "type": "string"
                  },
                  "dockerContext": {
                    "type": "string"
                  },
                  "dockerfilePath": {
                    "type": "string"
                  },
                  "preDeployCommand": {
                    "type": "string"
                  },
                  "registryCredential": {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "username",
                      "registry"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier for this credential"
                      },
                      "name": {
                        "type": "string",
                        "description": "Descriptive name for this credential"
                      },
                      "registry": {
                        "type": "string",
                        "enum": [
                          "GITHUB",
                          "GITLAB",
                          "DOCKER"
                        ],
                        "description": "The registry to use this credential with"
                      },
                      "username": {
                        "type": "string",
                        "description": "The username associated with the credential"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "buildCommand",
                  "startCommand"
                ],
                "properties": {
                  "buildCommand": {
                    "type": "string"
                  },
                  "startCommand": {
                    "type": "string"
                  },
                  "preDeployCommand": {
                    "type": "string"
                  }
                }
              }
            ]
          },
          "plan": {
            "type": "string",
            "enum": [
              "starter",
              "standard",
              "pro",
              "pro_plus",
              "pro_max",
              "pro_ultra"
            ],
            "default": "starter",
            "description": "Defaults to \"starter\""
          },
          "region": {
            "type": "string",
            "enum": [
              "frankfurt",
              "oregon",
              "ohio",
              "singapore"
            ],
            "default": "oregon",
            "description": "Defaults to \"oregon\""
          },
          "schedule": {
            "type": "string"
          }
        }
      },
      "servicePATCH": {
        "type": "object",
        "properties": {
          "autoDeploy": {
            "type": "string",
            "enum": [
              "yes",
              "no"
            ]
          },
          "repo": {
            "type": "string"
          },
          "branch": {
            "type": "string"
          },
          "image": {
            "type": "object",
            "required": [
              "imagePath",
              "ownerId"
            ],
            "properties": {
              "ownerId": {
                "type": "string",
                "description": "The ID of the owner for this image. This should match the owner of the service as well as the owner of any specified registry credential."
              },
              "registryCredentialId": {
                "type": "string",
                "description": "Optional reference to the registry credential passed to the image repository to retrieve this image."
              },
              "imagePath": {
                "type": "string",
                "description": "Path to the image used for this server (e.g docker.io/library/nginx:latest)."
              }
            }
          },
          "name": {
            "type": "string"
          },
          "buildFilter": {
            "type": "object",
            "required": [
              "paths",
              "ignoredPaths"
            ],
            "properties": {
              "paths": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "ignoredPaths": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "rootDir": {
            "type": "string"
          },
          "serviceDetails": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "buildCommand": {
                    "type": "string"
                  },
                  "publishPath": {
                    "type": "string"
                  },
                  "pullRequestPreviewsEnabled": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "envSpecificDetails": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "dockerCommand": {
                            "type": "string"
                          },
                          "dockerContext": {
                            "type": "string"
                          },
                          "dockerfilePath": {
                            "type": "string"
                          },
                          "registryCredentialId": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "buildCommand": {
                            "type": "string"
                          },
                          "startCommand": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "healthCheckPath": {
                    "type": "string"
                  },
                  "plan": {
                    "type": "string",
                    "enum": [
                      "starter",
                      "standard",
                      "pro",
                      "pro_plus",
                      "pro_max",
                      "pro_ultra"
                    ],
                    "default": "starter",
                    "description": "Defaults to \"starter\""
                  },
                  "preDeployCommand": {
                    "type": "string"
                  },
                  "pullRequestPreviewsEnabled": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "envSpecificDetails": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "dockerCommand": {
                            "type": "string"
                          },
                          "dockerContext": {
                            "type": "string"
                          },
                          "dockerfilePath": {
                            "type": "string"
                          },
                          "registryCredentialId": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "buildCommand": {
                            "type": "string"
                          },
                          "startCommand": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "plan": {
                    "type": "string",
                    "enum": [
                      "starter",
                      "standard",
                      "pro",
                      "pro_plus",
                      "pro_max",
                      "pro_ultra"
                    ],
                    "default": "starter",
                    "description": "Defaults to \"starter\""
                  },
                  "preDeployCommand": {
                    "type": "string"
                  },
                  "pullRequestPreviewsEnabled": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "envSpecificDetails": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "dockerCommand": {
                            "type": "string"
                          },
                          "dockerContext": {
                            "type": "string"
                          },
                          "dockerfilePath": {
                            "type": "string"
                          },
                          "registryCredentialId": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "buildCommand": {
                            "type": "string"
                          },
                          "startCommand": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "plan": {
                    "type": "string",
                    "enum": [
                      "starter",
                      "standard",
                      "pro",
                      "pro_plus",
                      "pro_max",
                      "pro_ultra"
                    ],
                    "default": "starter",
                    "description": "Defaults to \"starter\""
                  },
                  "preDeployCommand": {
                    "type": "string"
                  },
                  "pullRequestPreviewsEnabled": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "envSpecificDetails": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "dockerCommand": {
                            "type": "string"
                          },
                          "dockerContext": {
                            "type": "string"
                          },
                          "dockerfilePath": {
                            "type": "string"
                          },
                          "registryCredentialId": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "buildCommand": {
                            "type": "string"
                          },
                          "startCommand": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "plan": {
                    "type": "string",
                    "enum": [
                      "starter",
                      "standard",
                      "pro",
                      "pro_plus",
                      "pro_max",
                      "pro_ultra"
                    ],
                    "default": "starter",
                    "description": "Defaults to \"starter\""
                  },
                  "schedule": {
                    "type": "string"
                  }
                }
              }
            ]
          }
        }
      },
      "dockerDetailsPATCH": {
        "type": "object",
        "properties": {
          "dockerCommand": {
            "type": "string"
          },
          "dockerContext": {
            "type": "string"
          },
          "dockerfilePath": {
            "type": "string"
          },
          "registryCredentialId": {
            "type": "string"
          }
        }
      },
      "nativeEnvironmentDetailsPATCH": {
        "type": "object",
        "properties": {
          "buildCommand": {
            "type": "string"
          },
          "startCommand": {
            "type": "string"
          }
        }
      },
      "staticSiteDetailsPATCH": {
        "type": "object",
        "properties": {
          "buildCommand": {
            "type": "string"
          },
          "publishPath": {
            "type": "string"
          },
          "pullRequestPreviewsEnabled": {
            "type": "string",
            "enum": [
              "yes",
              "no"
            ]
          }
        }
      },
      "webServiceDetailsPATCH": {
        "type": "object",
        "properties": {
          "envSpecificDetails": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "dockerCommand": {
                    "type": "string"
                  },
                  "dockerContext": {
                    "type": "string"
                  },
                  "dockerfilePath": {
                    "type": "string"
                  },
                  "registryCredentialId": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "buildCommand": {
                    "type": "string"
                  },
                  "startCommand": {
                    "type": "string"
                  }
                }
              }
            ]
          },
          "healthCheckPath": {
            "type": "string"
          },
          "plan": {
            "type": "string",
            "enum": [
              "starter",
              "standard",
              "pro",
              "pro_plus",
              "pro_max",
              "pro_ultra"
            ],
            "default": "starter",
            "description": "Defaults to \"starter\""
          },
          "preDeployCommand": {
            "type": "string"
          },
          "pullRequestPreviewsEnabled": {
            "type": "string",
            "enum": [
              "yes",
              "no"
            ]
          }
        }
      },
      "privateServiceDetailsPATCH": {
        "type": "object",
        "properties": {
          "envSpecificDetails": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "dockerCommand": {
                    "type": "string"
                  },
                  "dockerContext": {
                    "type": "string"
                  },
                  "dockerfilePath": {
                    "type": "string"
                  },
                  "registryCredentialId": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "buildCommand": {
                    "type": "string"
                  },
                  "startCommand": {
                    "type": "string"
                  }
                }
              }
            ]
          },
          "plan": {
            "type": "string",
            "enum": [
              "starter",
              "standard",
              "pro",
              "pro_plus",
              "pro_max",
              "pro_ultra"
            ],
            "default": "starter",
            "description": "Defaults to \"starter\""
          },
          "preDeployCommand": {
            "type": "string"
          },
          "pullRequestPreviewsEnabled": {
            "type": "string",
            "enum": [
              "yes",
              "no"
            ]
          }
        }
      },
      "backgroundWorkerDetailsPATCH": {
        "type": "object",
        "properties": {
          "envSpecificDetails": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "dockerCommand": {
                    "type": "string"
                  },
                  "dockerContext": {
                    "type": "string"
                  },
                  "dockerfilePath": {
                    "type": "string"
                  },
                  "registryCredentialId": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "buildCommand": {
                    "type": "string"
                  },
                  "startCommand": {
                    "type": "string"
                  }
                }
              }
            ]
          },
          "plan": {
            "type": "string",
            "enum": [
              "starter",
              "standard",
              "pro",
              "pro_plus",
              "pro_max",
              "pro_ultra"
            ],
            "default": "starter",
            "description": "Defaults to \"starter\""
          },
          "preDeployCommand": {
            "type": "string"
          },
          "pullRequestPreviewsEnabled": {
            "type": "string",
            "enum": [
              "yes",
              "no"
            ]
          }
        }
      },
      "cronJobDetailsPATCH": {
        "type": "object",
        "properties": {
          "envSpecificDetails": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "dockerCommand": {
                    "type": "string"
                  },
                  "dockerContext": {
                    "type": "string"
                  },
                  "dockerfilePath": {
                    "type": "string"
                  },
                  "registryCredentialId": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "buildCommand": {
                    "type": "string"
                  },
                  "startCommand": {
                    "type": "string"
                  }
                }
              }
            ]
          },
          "plan": {
            "type": "string",
            "enum": [
              "starter",
              "standard",
              "pro",
              "pro_plus",
              "pro_max",
              "pro_ultra"
            ],
            "default": "starter",
            "description": "Defaults to \"starter\""
          },
          "schedule": {
            "type": "string"
          }
        }
      },
      "envVarInputArray": {
        "type": "array",
        "items": {
          "type": "object",
          "oneOf": [
            {
              "type": "object",
              "required": [
                "key",
                "value"
              ],
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            },
            {
              "type": "object",
              "required": [
                "key",
                "generateValue"
              ],
              "properties": {
                "key": {
                  "type": "string"
                },
                "generateValue": {
                  "type": "boolean"
                }
              }
            }
          ]
        }
      },
      "envVarInput": {
        "type": "object",
        "oneOf": [
          {
            "type": "object",
            "required": [
              "key",
              "value"
            ],
            "properties": {
              "key": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "key",
              "generateValue"
            ],
            "properties": {
              "key": {
                "type": "string"
              },
              "generateValue": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "envVarKeyValue": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "envVarValue": {
        "type": "object",
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "envVarKeyGenerateValue": {
        "type": "object",
        "required": [
          "key",
          "generateValue"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "generateValue": {
            "type": "boolean"
          }
        }
      },
      "envVarGenerateValue": {
        "type": "object",
        "required": [
          "generateValue"
        ],
        "properties": {
          "generateValue": {
            "type": "boolean"
          }
        }
      },
      "addUpdateEnvVarInput": {
        "type": "object",
        "oneOf": [
          {
            "type": "object",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "generateValue"
            ],
            "properties": {
              "generateValue": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "previewInput": {
        "type": "object",
        "required": [
          "imagePath"
        ],
        "properties": {
          "imagePath": {
            "type": "string",
            "example": "docker.io/library/nginx:latest",
            "description": "Must be either a full URL or the relative path to an image. If a relative path, Render uses the base service's image URL as its root. For example, if the base service's image URL is `docker.io/library/nginx:latest`, then valid values are: `docker.io/library/nginx:<any tag or SHA>`, `library/nginx:<any tag or SHA>`, or `nginx:<any tag or SHA>`. Note that the path must match (only the tag or SHA can vary)."
          },
          "name": {
            "type": "string",
            "example": "preview",
            "description": "A name for the service preview instance. If not specified, Render generates the name using the base service's name and the specified tag or SHA."
          },
          "plan": {
            "type": "string",
            "enum": [
              "starter",
              "starter_plus",
              "standard",
              "standard_plus",
              "pro",
              "pro_plus",
              "pro_max",
              "pro_ultra",
              "free",
              "custom"
            ],
            "example": "starter",
            "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
          }
        }
      },
      "plan": {
        "type": "string",
        "enum": [
          "starter",
          "starter_plus",
          "standard",
          "standard_plus",
          "pro",
          "pro_plus",
          "pro_max",
          "pro_ultra",
          "free",
          "custom"
        ],
        "example": "starter",
        "description": "The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type."
      },
      "autoscalingConfig": {
        "type": "object",
        "required": [
          "enabled",
          "min",
          "max",
          "criteria"
        ],
        "properties": {
          "enabled": {
            "type": "boolean",
            "default": false
          },
          "min": {
            "type": "integer",
            "description": "The minimum number of instances for the service"
          },
          "max": {
            "type": "integer",
            "description": "The maximum number of instances for the service"
          },
          "criteria": {
            "type": "object",
            "required": [
              "cpu",
              "memory"
            ],
            "properties": {
              "cpu": {
                "type": "object",
                "required": [
                  "enabled",
                  "percentage"
                ],
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "default": false
                  },
                  "percentage": {
                    "type": "integer",
                    "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                  }
                }
              },
              "memory": {
                "type": "object",
                "required": [
                  "enabled",
                  "percentage"
                ],
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "default": false
                  },
                  "percentage": {
                    "type": "integer",
                    "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
                  }
                }
              }
            }
          }
        }
      },
      "autoscalingCriteria": {
        "type": "object",
        "required": [
          "cpu",
          "memory"
        ],
        "properties": {
          "cpu": {
            "type": "object",
            "required": [
              "enabled",
              "percentage"
            ],
            "properties": {
              "enabled": {
                "type": "boolean",
                "default": false
              },
              "percentage": {
                "type": "integer",
                "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
              }
            }
          },
          "memory": {
            "type": "object",
            "required": [
              "enabled",
              "percentage"
            ],
            "properties": {
              "enabled": {
                "type": "boolean",
                "default": false
              },
              "percentage": {
                "type": "integer",
                "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
              }
            }
          }
        }
      },
      "autoscalingCriteriaPercentage": {
        "type": "object",
        "required": [
          "enabled",
          "percentage"
        ],
        "properties": {
          "enabled": {
            "type": "boolean",
            "default": false
          },
          "percentage": {
            "type": "integer",
            "description": "Determines when your service will be scaled. If the average resource utilization is significantly above/below the target, we will increase/decrease the number of instances.\n"
          }
        }
      },
      "header": {
        "type": "object",
        "required": [
          "id",
          "path",
          "name",
          "value"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "headerInput": {
        "type": "object",
        "required": [
          "path",
          "name",
          "value"
        ],
        "properties": {
          "path": {
            "type": "string",
            "description": "The request path to add the header to. Wildcards will cause headers to be applied to all matching paths.",
            "example": "/static/*"
          },
          "name": {
            "type": "string",
            "description": "Header name",
            "example": "Cache-Control"
          },
          "value": {
            "type": "string",
            "description": "Header value",
            "example": "public, max-age=604800"
          }
        }
      },
      "notificationSetting": {
        "type": "object",
        "required": [
          "ownerId",
          "slackEnabled",
          "emailEnabled",
          "previewNotificationsEnabled",
          "notificationsToSend"
        ],
        "properties": {
          "ownerId": {
            "type": "string"
          },
          "slackEnabled": {
            "type": "boolean"
          },
          "emailEnabled": {
            "type": "boolean"
          },
          "previewNotificationsEnabled": {
            "type": "boolean"
          },
          "notificationsToSend": {
            "type": "string",
            "enum": [
              "none",
              "failure",
              "all"
            ]
          }
        }
      },
      "notificationSettingPATCH": {
        "type": "object",
        "properties": {
          "emailEnabled": {
            "type": "boolean"
          },
          "previewNotificationsEnabled": {
            "type": "boolean"
          },
          "notificationsToSend": {
            "type": "string",
            "enum": [
              "none",
              "failure",
              "all"
            ]
          }
        }
      },
      "notificationOverrideWithCursor": {
        "required": [
          "override",
          "cursor"
        ],
        "type": "object",
        "properties": {
          "override": {
            "type": "object",
            "required": [
              "type",
              "id",
              "previewNotificationsEnabled",
              "notificationsToSend"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "service"
                ]
              },
              "id": {
                "type": "string"
              },
              "previewNotificationsEnabled": {
                "type": "string",
                "enum": [
                  "default",
                  false,
                  true
                ]
              },
              "notificationsToSend": {
                "type": "string",
                "enum": [
                  "default",
                  "none",
                  "failure",
                  "all"
                ]
              }
            }
          },
          "cursor": {
            "type": "string"
          }
        }
      },
      "notificationOverride": {
        "type": "object",
        "required": [
          "type",
          "id",
          "previewNotificationsEnabled",
          "notificationsToSend"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "service"
            ]
          },
          "id": {
            "type": "string"
          },
          "previewNotificationsEnabled": {
            "type": "string",
            "enum": [
              "default",
              false,
              true
            ]
          },
          "notificationsToSend": {
            "type": "string",
            "enum": [
              "default",
              "none",
              "failure",
              "all"
            ]
          }
        }
      },
      "notificationServiceOverride": {
        "type": "object",
        "required": [
          "serviceId",
          "previewNotificationsEnabled",
          "notificationsToSend"
        ],
        "properties": {
          "serviceId": {
            "type": "string"
          },
          "previewNotificationsEnabled": {
            "type": "string",
            "enum": [
              "default",
              false,
              true
            ]
          },
          "notificationsToSend": {
            "type": "string",
            "enum": [
              "default",
              "none",
              "failure",
              "all"
            ]
          }
        }
      },
      "notificationServiceOverridePATCH": {
        "type": "object",
        "properties": {
          "previewNotificationsEnabled": {
            "type": "string",
            "enum": [
              "default",
              false,
              true
            ]
          },
          "notificationsToSend": {
            "type": "string",
            "enum": [
              "default",
              "none",
              "failure",
              "all"
            ]
          }
        }
      },
      "owner": {
        "type": "object",
        "required": [
          "id",
          "name",
          "email",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "user",
              "team"
            ]
          }
        }
      },
      "route": {
        "type": "object",
        "required": [
          "id",
          "type",
          "source",
          "destination",
          "priority"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "redirect",
              "rewrite"
            ]
          },
          "source": {
            "type": "string"
          },
          "destination": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "description": "Redirect and Rewrite Rules are applied in priority order starting at 0"
          }
        }
      },
      "headerWithCursor": {
        "type": "object",
        "required": [
          "header",
          "cursor"
        ],
        "properties": {
          "header": {
            "type": "object",
            "required": [
              "id",
              "path",
              "name",
              "value"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            }
          },
          "cursor": {
            "type": "string"
          }
        }
      },
      "routeWithCursor": {
        "type": "object",
        "required": [
          "route",
          "cursor"
        ],
        "properties": {
          "route": {
            "type": "object",
            "required": [
              "id",
              "type",
              "source",
              "destination",
              "priority"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "redirect",
                  "rewrite"
                ]
              },
              "source": {
                "type": "string"
              },
              "destination": {
                "type": "string"
              },
              "priority": {
                "type": "integer",
                "description": "Redirect and Rewrite Rules are applied in priority order starting at 0"
              }
            }
          },
          "cursor": {
            "type": "string"
          }
        }
      },
      "routePost": {
        "type": "object",
        "required": [
          "type",
          "source",
          "destination"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "redirect",
              "rewrite"
            ]
          },
          "source": {
            "type": "string",
            "example": "/:bar/foo"
          },
          "destination": {
            "type": "string",
            "example": "/foo/:bar"
          },
          "priority": {
            "type": "integer",
            "description": "Redirect and Rewrite Rules are applied in priority order starting at 0. Defaults to last in the priority list."
          }
        }
      },
      "routePatch": {
        "type": "object",
        "required": [
          "priority"
        ],
        "properties": {
          "priority": {
            "x-go-type": "*int",
            "type": "integer",
            "description": "Redirect and Rewrite Rules are applied in priority order starting at 0. Moves this route to the specified priority and adjusts other route priorities accordingly."
          }
        }
      },
      "routePut": {
        "type": "object",
        "required": [
          "type",
          "source",
          "destination"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "redirect",
              "rewrite"
            ]
          },
          "source": {
            "type": "string",
            "example": "/:bar/foo"
          },
          "destination": {
            "type": "string",
            "example": "/foo/:bar"
          }
        }
      },
      "routeType": {
        "type": "string",
        "enum": [
          "redirect",
          "rewrite"
        ]
      },
      "serviceType": {
        "type": "string",
        "enum": [
          "static_site",
          "web_service",
          "private_service",
          "background_worker",
          "cron_job"
        ]
      },
      "serviceTypeShort": {
        "type": "string",
        "enum": [
          "static",
          "web",
          "pserv",
          "worker",
          "cron"
        ]
      },
      "serviceEnv": {
        "type": "string",
        "enum": [
          "docker",
          "elixir",
          "go",
          "node",
          "python",
          "ruby",
          "rust",
          "image"
        ],
        "description": "Environment (runtime)"
      },
      "region": {
        "type": "string",
        "enum": [
          "frankfurt",
          "oregon",
          "ohio",
          "singapore"
        ],
        "default": "oregon",
        "description": "Defaults to \"oregon\""
      },
      "notifySetting": {
        "type": "string",
        "enum": [
          "default",
          "notify",
          "ignore"
        ]
      },
      "notifySettingV2": {
        "type": "string",
        "enum": [
          "none",
          "failure",
          "all"
        ]
      },
      "notifyOverride": {
        "type": "string",
        "enum": [
          "default",
          "none",
          "failure",
          "all"
        ]
      },
      "notifyPreviewOverride": {
        "type": "string",
        "enum": [
          "default",
          false,
          true
        ]
      },
      "suspenderType": {
        "type": "string",
        "enum": [
          "admin",
          "billing",
          "user",
          "parent_service",
          "unknown"
        ]
      },
      "deploy": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "commit": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "image": {
            "description": "Image information used when creating the deploy. Not present for Git-backed deploys",
            "type": "object",
            "properties": {
              "ref": {
                "description": "Image reference used when creating the deploy",
                "type": "string"
              },
              "sha": {
                "description": "SHA that the image reference was resolved to when creating the deploy",
                "type": "string"
              },
              "registryCredential": {
                "description": "Name of credential used to pull the image, if provided",
                "type": "string"
              }
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "created",
              "build_in_progress",
              "update_in_progress",
              "live",
              "deactivated",
              "build_failed",
              "update_failed",
              "canceled",
              "pre_deploy_in_progress",
              "pre_deploy_failed"
            ]
          },
          "trigger": {
            "type": "string",
            "enum": [
              "api",
              "blueprint_sync",
              "deploy_hook",
              "deployed_by_render",
              "manual",
              "other",
              "new_commit",
              "rollback",
              "service_resumed",
              "service_updated"
            ]
          },
          "finishedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "envVar": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "envVarWithCursor": {
        "type": "object",
        "required": [
          "envVar",
          "cursor"
        ],
        "properties": {
          "envVar": {
            "type": "object",
            "required": [
              "key",
              "value"
            ],
            "properties": {
              "key": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            }
          },
          "cursor": {
            "type": "string"
          }
        }
      },
      "customDomainWithCursor": {
        "required": [
          "disk",
          "cursor"
        ],
        "type": "object",
        "properties": {
          "customDomain": {
            "type": "object",
            "required": [
              "id",
              "name",
              "domainType",
              "publicSuffix",
              "verificationStatus",
              "createdAt",
              "redirectForName"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "domainType": {
                "type": "string",
                "enum": [
                  "apex",
                  "subdomain"
                ]
              },
              "publicSuffix": {
                "type": "string"
              },
              "redirectForName": {
                "type": "string"
              },
              "verificationStatus": {
                "type": "string",
                "enum": [
                  "verified",
                  "unverified"
                ]
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "server": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "cursor": {
            "type": "string"
          }
        }
      },
      "customDomain": {
        "type": "object",
        "required": [
          "id",
          "name",
          "domainType",
          "publicSuffix",
          "verificationStatus",
          "createdAt",
          "redirectForName"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "domainType": {
            "type": "string",
            "enum": [
              "apex",
              "subdomain"
            ]
          },
          "publicSuffix": {
            "type": "string"
          },
          "redirectForName": {
            "type": "string"
          },
          "verificationStatus": {
            "type": "string",
            "enum": [
              "verified",
              "unverified"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "server": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          }
        }
      },
      "job": {
        "type": "object",
        "required": [
          "id",
          "serviceId",
          "startCommand",
          "planId",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "job-xxxxx"
          },
          "serviceId": {
            "type": "string",
            "example": "srv-xxxxx"
          },
          "startCommand": {
            "type": "string",
            "example": "echo 'hello world'"
          },
          "planId": {
            "type": "string",
            "example": "plan-srv-004"
          },
          "status": {
            "type": "string",
            "example": "succeeded"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2021-07-15T07:20:05.777035-07:00"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2021-07-15T07:20:05.777035-07:00"
          },
          "finishedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2021-07-15T07:20:05.777035-07:00"
          }
        }
      },
      "serverPort": {
        "type": "object",
        "required": [
          "port",
          "protocol"
        ],
        "properties": {
          "port": {
            "type": "integer",
            "example": 10000
          },
          "protocol": {
            "type": "string",
            "enum": [
              "TCP",
              "UDP"
            ]
          }
        }
      },
      "error": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "maybeDeploy": {
        "type": "object",
        "properties": {
          "triggeringDeploy": {
            "type": "string",
            "enum": [
              "yes",
              "no"
            ]
          }
        }
      },
      "timeSeriesCollection": {
        "type": "array",
        "description": "A collection of time series",
        "required": [
          "items"
        ],
        "items": {
          "type": "object",
          "description": "A time series data point",
          "required": [
            "labels",
            "values",
            "unit"
          ],
          "properties": {
            "labels": {
              "type": "array",
              "description": "List of labels describing the time series",
              "items": {
                "type": "object",
                "description": "A time series datapoint label",
                "required": [
                  "field",
                  "value"
                ],
                "properties": {
                  "field": {
                    "type": "string",
                    "example": "service"
                  },
                  "value": {
                    "type": "string",
                    "example": "srv-xxxxx"
                  }
                }
              }
            },
            "values": {
              "type": "array",
              "description": "The values of the time series",
              "items": {
                "description": "A time series datapoint value",
                "type": "object",
                "required": [
                  "timestamp",
                  "value",
                  "unit"
                ],
                "properties": {
                  "timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-06-17T08:15:30Z"
                  },
                  "value": {
                    "type": "number",
                    "example": 1
                  }
                }
              }
            },
            "unit": {
              "type": "string",
              "example": "GB"
            }
          }
        }
      },
      "timeSeries": {
        "type": "object",
        "description": "A time series data point",
        "required": [
          "labels",
          "values",
          "unit"
        ],
        "properties": {
          "labels": {
            "type": "array",
            "description": "List of labels describing the time series",
            "items": {
              "type": "object",
              "description": "A time series datapoint label",
              "required": [
                "field",
                "value"
              ],
              "properties": {
                "field": {
                  "type": "string",
                  "example": "service"
                },
                "value": {
                  "type": "string",
                  "example": "srv-xxxxx"
                }
              }
            }
          },
          "values": {
            "type": "array",
            "description": "The values of the time series",
            "items": {
              "description": "A time series datapoint value",
              "type": "object",
              "required": [
                "timestamp",
                "value",
                "unit"
              ],
              "properties": {
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2021-06-17T08:15:30Z"
                },
                "value": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          },
          "unit": {
            "type": "string",
            "example": "GB"
          }
        }
      },
      "filterApplicationValuesCollection": {
        "type": "array",
        "description": "A collection of filter values for application metrics",
        "required": [
          "items"
        ],
        "items": {
          "type": "object",
          "properties": {
            "filter": {
              "type": "string",
              "enum": [
                "instance"
              ]
            },
            "values": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "srv-xxxxx-yyyy"
              }
            }
          }
        }
      },
      "filterHTTPValuesCollection": {
        "type": "array",
        "description": "A collection of filter values for HTTP metrics",
        "required": [
          "items"
        ],
        "items": {
          "type": "object",
          "properties": {
            "filter": {
              "type": "string",
              "enum": [
                "host",
                "statusCode"
              ]
            },
            "values": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "api.example.com"
              }
            }
          }
        }
      },
      "filterPathValuesCollection": {
        "type": "array",
        "description": "A collection of suggested paths to filter by",
        "required": [
          "items"
        ],
        "items": {
          "type": "string",
          "example": "/user/*"
        }
      },
      "label": {
        "type": "object",
        "description": "A time series datapoint label",
        "required": [
          "field",
          "value"
        ],
        "properties": {
          "field": {
            "type": "string",
            "example": "service"
          },
          "value": {
            "type": "string",
            "example": "srv-xxxxx"
          }
        }
      },
      "timeSeriesValue": {
        "description": "A time series datapoint value",
        "type": "object",
        "required": [
          "timestamp",
          "value",
          "unit"
        ],
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2021-06-17T08:15:30Z"
          },
          "value": {
            "type": "number",
            "example": 1
          }
        }
      },
      "unit": {
        "type": "string",
        "example": "GB"
      },
      "pullRequestPreviewsEnabled": {
        "type": "string",
        "enum": [
          "yes",
          "no"
        ]
      },
      "buildPlan": {
        "type": "string",
        "enum": [
          "starter",
          "performance"
        ],
        "default": "starter"
      },
      "redisPOSTInput": {
        "type": "object",
        "description": "Input type for creating a Redis instance",
        "required": [
          "name",
          "ownerId",
          "plan"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the Redis instance"
          },
          "ownerId": {
            "type": "string",
            "description": "The ID of the owner of the Redis instance"
          },
          "plan": {
            "type": "string",
            "enum": [
              "free",
              "starter",
              "standard",
              "pro",
              "pro_plus",
              "custom"
            ]
          },
          "region": {
            "type": "string",
            "description": "The region where the Redis instance is located"
          },
          "environmentId": {
            "type": "string"
          },
          "maxmemoryPolicy": {
            "type": "string",
            "description": "The eviction policy for the Redis instance",
            "enum": [
              "noeviction",
              "allkeys_lfu",
              "allkeys_lru",
              "allkeys_random",
              "volatile_lfu",
              "volatile_lru",
              "volatile_random",
              "volatile_ttl"
            ]
          },
          "ipAllowList": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "cidrBlock",
                "description"
              ],
              "properties": {
                "cidrBlock": {
                  "type": "string"
                },
                "description": {
                  "description": "User-provided description of the CIDR block",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "redisPATCHInput": {
        "type": "object",
        "description": "Input type for updating a Redis instance",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the Redis instance"
          },
          "plan": {
            "type": "string",
            "enum": [
              "free",
              "starter",
              "standard",
              "pro",
              "pro_plus",
              "custom"
            ]
          },
          "maxmemoryPolicy": {
            "type": "string",
            "description": "The eviction policy for the Redis instance",
            "enum": [
              "noeviction",
              "allkeys_lfu",
              "allkeys_lru",
              "allkeys_random",
              "volatile_lfu",
              "volatile_lru",
              "volatile_random",
              "volatile_ttl"
            ]
          },
          "ipAllowList": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "cidrBlock",
                "description"
              ],
              "properties": {
                "cidrBlock": {
                  "type": "string"
                },
                "description": {
                  "description": "User-provided description of the CIDR block",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "maxmemoryPolicy": {
        "type": "string",
        "description": "The eviction policy for the Redis instance",
        "enum": [
          "noeviction",
          "allkeys_lfu",
          "allkeys_lru",
          "allkeys_random",
          "volatile_lfu",
          "volatile_lru",
          "volatile_random",
          "volatile_ttl"
        ]
      },
      "redis": {
        "type": "object",
        "description": "A Redis instance",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "status",
          "region",
          "plan",
          "name",
          "owner",
          "options",
          "externalConnectionString",
          "redisCLICommand",
          "ipAllowList",
          "version"
        ],
        "properties": {
          "id": {
            "description": "The ID of the Redis instance",
            "type": "string"
          },
          "createdAt": {
            "description": "The creation time of the Redis instance",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "description": "The last updated time of the Redis instance",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "creating",
              "available",
              "unavailable",
              "config_restart",
              "suspended",
              "maintenance_scheduled",
              "maintenance_in_progress",
              "recovery_failed",
              "recovery_in_progress",
              "unknown",
              "updating_instance"
            ]
          },
          "region": {
            "type": "string",
            "enum": [
              "frankfurt",
              "oregon",
              "ohio",
              "singapore"
            ],
            "default": "oregon",
            "description": "Defaults to \"oregon\""
          },
          "plan": {
            "type": "string",
            "enum": [
              "free",
              "starter",
              "standard",
              "pro",
              "pro_plus",
              "custom"
            ]
          },
          "name": {
            "description": "The name of the Redis instance",
            "type": "string"
          },
          "owner": {
            "type": "object",
            "required": [
              "id",
              "name",
              "email",
              "type"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "user",
                  "team"
                ]
              }
            }
          },
          "options": {
            "description": "Options for a Redis instance",
            "type": "object",
            "properties": {
              "maxmemoryPolicy": {
                "type": "string"
              }
            }
          },
          "ipAllowList": {
            "description": "The IP allow list for the Redis instance",
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "cidrBlock",
                "description"
              ],
              "properties": {
                "cidrBlock": {
                  "type": "string"
                },
                "description": {
                  "description": "User-provided description of the CIDR block",
                  "type": "string"
                }
              }
            }
          },
          "environmentId": {
            "description": "The ID of the environment the Redis instance is associated with",
            "type": "string"
          },
          "version": {
            "description": "The version of Redis",
            "type": "string"
          }
        }
      },
      "redisOptions": {
        "description": "Options for a Redis instance",
        "type": "object",
        "properties": {
          "maxmemoryPolicy": {
            "type": "string"
          }
        }
      },
      "cidrBlockAndDescription": {
        "type": "object",
        "required": [
          "cidrBlock",
          "description"
        ],
        "properties": {
          "cidrBlock": {
            "type": "string"
          },
          "description": {
            "description": "User-provided description of the CIDR block",
            "type": "string"
          }
        }
      },
      "postgresPlans": {
        "type": "string",
        "enum": [
          "free",
          "starter",
          "standard",
          "pro",
          "pro_plus",
          "custom"
        ]
      },
      "redisPlan": {
        "type": "string",
        "enum": [
          "free",
          "starter",
          "standard",
          "pro",
          "pro_plus",
          "custom"
        ]
      },
      "databaseStatus": {
        "type": "string",
        "enum": [
          "creating",
          "available",
          "unavailable",
          "config_restart",
          "suspended",
          "maintenance_scheduled",
          "maintenance_in_progress",
          "recovery_failed",
          "recovery_in_progress",
          "unknown",
          "updating_instance"
        ]
      },
      "projectWithCursor": {
        "type": "object",
        "required": [
          "project",
          "cursor"
        ],
        "properties": {
          "project": {
            "description": "A project is a collection of environments",
            "type": "object",
            "required": [
              "id",
              "createdAt",
              "updatedAt",
              "name",
              "owner",
              "environmentIds"
            ],
            "properties": {
              "id": {
                "description": "The ID of the project",
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "name": {
                "description": "The name of the project",
                "type": "string"
              },
              "owner": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "email",
                  "type"
                ],
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "user",
                      "team"
                    ]
                  }
                }
              },
              "environmentIds": {
                "description": "The environments associated with the project",
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "The ID of the environment"
                }
              }
            }
          },
          "cursor": {
            "type": "string"
          }
        }
      },
      "project": {
        "description": "A project is a collection of environments",
        "type": "object",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "owner",
          "environmentIds"
        ],
        "properties": {
          "id": {
            "description": "The ID of the project",
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "description": "The name of the project",
            "type": "string"
          },
          "owner": {
            "type": "object",
            "required": [
              "id",
              "name",
              "email",
              "type"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "user",
                  "team"
                ]
              }
            }
          },
          "environmentIds": {
            "description": "The environments associated with the project",
            "type": "array",
            "items": {
              "type": "string",
              "description": "The ID of the environment"
            }
          }
        }
      },
      "projectPOSTInput": {
        "type": "object",
        "required": [
          "name",
          "ownerId",
          "environments"
        ],
        "properties": {
          "name": {
            "description": "The name of the project",
            "type": "string"
          },
          "ownerId": {
            "description": "The ID of the owner that the project belongs to",
            "type": "string"
          },
          "environments": {
            "description": "The environments to create when creating the project",
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "databasesIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "redisIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "servicesIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "envGroupsIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "protectedStatus": {
                  "type": "string",
                  "description": "Indicates whether an environment is `unprotected` or `protected`. Only admin users can perform destructive actions in `protected` environments.",
                  "enum": [
                    "unprotected",
                    "protected"
                  ]
                }
              }
            }
          }
        }
      },
      "projectPATCHInput": {
        "description": "Input type for updating a project",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "projectPOSTEnvironmentInput": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "databasesIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "redisIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "servicesIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "envGroupsIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "protectedStatus": {
            "type": "string",
            "description": "Indicates whether an environment is `unprotected` or `protected`. Only admin users can perform destructive actions in `protected` environments.",
            "enum": [
              "unprotected",
              "protected"
            ]
          }
        }
      },
      "environmentPOSTInput": {
        "type": "object",
        "required": [
          "name",
          "projectId"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "databasesIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "redisIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "serviceIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "envGroupIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "protectedStatus": {
            "type": "string",
            "description": "Indicates whether an environment is `unprotected` or `protected`. Only admin users can perform destructive actions in `protected` environments.",
            "enum": [
              "unprotected",
              "protected"
            ]
          }
        }
      },
      "environmentResourcesPOSTInput": {
        "type": "object",
        "required": [
          "resourceIds"
        ],
        "properties": {
          "resourceIds": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "The ID of an env group, a service, a Postgres instance, or a Redis instance"
            }
          }
        }
      },
      "environmentPATCHInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "protectedStatus": {
            "type": "string",
            "description": "Indicates whether an environment is `unprotected` or `protected`. Only admin users can perform destructive actions in `protected` environments.",
            "enum": [
              "unprotected",
              "protected"
            ]
          }
        }
      },
      "environment": {
        "type": "object",
        "required": [
          "id",
          "name",
          "projectId",
          "databasesIds",
          "redisIds",
          "serviceIds",
          "envGroupIds",
          "protectedStatus"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "databasesIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "redisIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "serviceIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "envGroupIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "protectedStatus": {
            "type": "string",
            "description": "Indicates whether an environment is `unprotected` or `protected`. Only admin users can perform destructive actions in `protected` environments.",
            "enum": [
              "unprotected",
              "protected"
            ]
          }
        }
      },
      "environmentWithCursor": {
        "type": "object",
        "description": "An environment with a cursor",
        "required": [
          "environment",
          "cursor"
        ],
        "properties": {
          "environment": {
            "type": "object",
            "required": [
              "id",
              "name",
              "projectId",
              "databasesIds",
              "redisIds",
              "serviceIds",
              "envGroupIds",
              "protectedStatus"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "projectId": {
                "type": "string"
              },
              "databasesIds": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "redisIds": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "serviceIds": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "envGroupIds": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "protectedStatus": {
                "type": "string",
                "description": "Indicates whether an environment is `unprotected` or `protected`. Only admin users can perform destructive actions in `protected` environments.",
                "enum": [
                  "unprotected",
                  "protected"
                ]
              }
            }
          },
          "cursor": {
            "type": "string"
          }
        }
      },
      "protectedStatus": {
        "type": "string",
        "description": "Indicates whether an environment is `unprotected` or `protected`. Only admin users can perform destructive actions in `protected` environments.",
        "enum": [
          "unprotected",
          "protected"
        ]
      },
      "envGroupPOSTInput": {
        "type": "object",
        "required": [
          "name",
          "ownerId",
          "envVars"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "ownerId": {
            "type": "string"
          },
          "envVars": {
            "type": "array",
            "items": {
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "required": [
                    "key",
                    "value"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "key",
                    "generateValue"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "generateValue": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "secretFiles": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "name",
                "content"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "content": {
                  "type": "string"
                }
              }
            }
          },
          "serviceIds": {
            "type": "array",
            "items": {
              "description": "List of serviceIds to link the envGroup to",
              "type": "string"
            }
          },
          "environmentId": {
            "type": "string"
          }
        }
      },
      "envGroupPATCHInput": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "secretFileInput": {
        "type": "object",
        "required": [
          "name",
          "content"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        }
      },
      "envGroup": {
        "type": "object",
        "required": [
          "id",
          "name",
          "ownerId",
          "envVars",
          "secretFiles",
          "serviceLinks"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "ownerId": {
            "type": "string"
          },
          "envVars": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "key",
                "value"
              ],
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "secretFiles": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "name",
                "content"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "content": {
                  "type": "string"
                }
              }
            }
          },
          "serviceLinks": {
            "description": "List of serviceIds linked to the envGroup",
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "name",
                "type"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "static",
                    "web",
                    "pserv",
                    "worker",
                    "cron"
                  ]
                }
              }
            }
          },
          "environmentId": {
            "type": "string"
          }
        }
      },
      "envGroupMeta": {
        "type": "object",
        "required": [
          "id",
          "name",
          "ownerId",
          "serviceLinks"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "ownerId": {
            "type": "string"
          },
          "serviceLinks": {
            "description": "List of serviceIds linked to the envGroup",
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "name",
                "type"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "static",
                    "web",
                    "pserv",
                    "worker",
                    "cron"
                  ]
                }
              }
            }
          },
          "environmentId": {
            "type": "string"
          }
        }
      },
      "secretFile": {
        "type": "object",
        "required": [
          "name",
          "content"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        }
      },
      "secretFileWithCursor": {
        "type": "object",
        "required": [
          "secretFile",
          "cursor"
        ],
        "properties": {
          "secretFile": {
            "type": "object",
            "required": [
              "name",
              "content"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "content": {
                "type": "string"
              }
            }
          },
          "cursor": {
            "type": "string"
          }
        }
      },
      "serviceLink": {
        "type": "object",
        "required": [
          "id",
          "name",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "static",
              "web",
              "pserv",
              "worker",
              "cron"
            ]
          }
        }
      },
      "postgresPOSTInput": {
        "type": "object",
        "required": [
          "name",
          "plan",
          "ownerId",
          "version"
        ],
        "properties": {
          "databaseName": {
            "type": "string",
            "default": "randomly generated"
          },
          "databaseUser": {
            "type": "string",
            "default": "randomly generated"
          },
          "datadogAPIKey": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "The name of the database as it will appear in the Render dashboard"
          },
          "enableHighAvailability": {
            "type": "boolean",
            "default": false
          },
          "environmentId": {
            "type": "string"
          },
          "ownerId": {
            "type": "string",
            "description": "The ID of the owner (team or personal user) whose resources should be returned"
          },
          "plan": {
            "type": "string",
            "enum": [
              "free",
              "starter",
              "standard",
              "pro",
              "pro_plus",
              "custom"
            ]
          },
          "region": {
            "type": "string"
          },
          "ipAllowList": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "cidrBlock",
                "description"
              ],
              "properties": {
                "cidrBlock": {
                  "type": "string"
                },
                "description": {
                  "description": "User-provided description of the CIDR block",
                  "type": "string"
                }
              }
            }
          },
          "readReplicas": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The display name of the replica instance."
                }
              },
              "required": [
                "name"
              ]
            }
          },
          "version": {
            "type": "string",
            "description": "The PostgreSQL version",
            "enum": [
              11,
              12,
              13,
              14,
              15,
              16
            ]
          }
        },
        "description": "Input for creating a database"
      },
      "postgresPATCHInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "plan": {
            "type": "string",
            "enum": [
              "free",
              "starter",
              "standard",
              "pro",
              "pro_plus",
              "custom"
            ]
          },
          "enableHighAvailability": {
            "type": "boolean"
          },
          "datadogAPIKey": {
            "type": "string"
          },
          "ipAllowList": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "cidrBlock",
                "description"
              ],
              "properties": {
                "cidrBlock": {
                  "type": "string"
                },
                "description": {
                  "description": "User-provided description of the CIDR block",
                  "type": "string"
                }
              }
            }
          },
          "readReplicas": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The display name of the replica instance."
                }
              },
              "required": [
                "name"
              ]
            }
          }
        }
      },
      "readReplicas": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The replica instance identifier."
            },
            "name": {
              "type": "string",
              "description": "The display name of the replica instance."
            }
          },
          "required": [
            "id",
            "name"
          ]
        }
      },
      "readReplica": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The replica instance identifier."
          },
          "name": {
            "type": "string",
            "description": "The display name of the replica instance."
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "readReplicasInput": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The display name of the replica instance."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      "readReplicaInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The display name of the replica instance."
          }
        },
        "required": [
          "name"
        ]
      },
      "postgresSecrets": {
        "type": "object",
        "required": [
          "password",
          "internalConnectionString",
          "externalConnectionString",
          "psqlCommand"
        ],
        "properties": {
          "password": {
            "type": "string",
            "format": "password"
          },
          "internalConnectionString": {
            "type": "string",
            "format": "password"
          },
          "externalConnectionString": {
            "type": "string",
            "format": "password"
          },
          "psqlCommand": {
            "type": "string",
            "format": "password"
          }
        }
      },
      "postgres": {
        "type": "object",
        "required": [
          "id",
          "ipAllowList",
          "createdAt",
          "updatedAt",
          "databaseName",
          "databaseUser",
          "highAvailabilityEnabled",
          "name",
          "owner",
          "project",
          "plan",
          "region",
          "readReplicas",
          "role",
          "status",
          "version",
          "suspended",
          "suspenders"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "ipAllowList": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "cidrBlock",
                "description"
              ],
              "properties": {
                "cidrBlock": {
                  "type": "string"
                },
                "description": {
                  "description": "User-provided description of the CIDR block",
                  "type": "string"
                }
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "expiresAt": {
            "description": "The time at which the database will be expire. Applies to free tier databases only.",
            "type": "string",
            "format": "date-time"
          },
          "databaseName": {
            "type": "string"
          },
          "databaseUser": {
            "type": "string"
          },
          "environmentId": {
            "type": "string"
          },
          "highAvailabilityEnabled": {
            "type": "boolean"
          },
          "maintenance": {
            "type": "object",
            "required": [
              "id",
              "type",
              "scheduledAt",
              "state"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "scheduledAt": {
                "type": "string",
                "format": "date-time"
              },
              "pendingMaintenanceBy": {
                "type": "string",
                "format": "date-time"
              },
              "state": {
                "type": "string",
                "enum": [
                  "scheduled",
                  "notified",
                  "in_progress",
                  "user_fix_required",
                  "cancelled",
                  "succeeded",
                  "failed"
                ]
              }
            }
          },
          "name": {
            "type": "string"
          },
          "owner": {
            "type": "object",
            "required": [
              "id",
              "name",
              "email",
              "type"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "user",
                  "team"
                ]
              }
            }
          },
          "plan": {
            "type": "string",
            "enum": [
              "free",
              "starter",
              "standard",
              "pro",
              "pro_plus",
              "custom"
            ]
          },
          "primaryPostgresID": {
            "type": "string"
          },
          "region": {
            "type": "string",
            "enum": [
              "frankfurt",
              "oregon",
              "ohio",
              "singapore"
            ],
            "default": "oregon",
            "description": "Defaults to \"oregon\""
          },
          "readReplicas": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The replica instance identifier."
                },
                "name": {
                  "type": "string",
                  "description": "The display name of the replica instance."
                }
              },
              "required": [
                "id",
                "name"
              ]
            }
          },
          "role": {
            "type": "string",
            "enum": [
              "primary",
              "replica"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "creating",
              "available",
              "unavailable",
              "config_restart",
              "suspended",
              "maintenance_scheduled",
              "maintenance_in_progress",
              "recovery_failed",
              "recovery_in_progress",
              "unknown",
              "updating_instance"
            ]
          },
          "version": {
            "type": "string",
            "description": "The PostgreSQL version",
            "enum": [
              11,
              12,
              13,
              14,
              15,
              16
            ]
          },
          "suspended": {
            "type": "string",
            "enum": [
              "suspended",
              "not_suspended"
            ]
          },
          "suspenders": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "admin",
                "billing",
                "user",
                "parent_service",
                "unknown"
              ]
            }
          }
        }
      },
      "postgresVersion": {
        "type": "string",
        "description": "The PostgreSQL version",
        "enum": [
          11,
          12,
          13,
          14,
          15,
          16
        ]
      },
      "databaseRole": {
        "type": "string",
        "enum": [
          "primary",
          "replica"
        ]
      },
      "maintenanceInfo": {
        "type": "object",
        "required": [
          "id",
          "type",
          "scheduledAt",
          "state"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "scheduledAt": {
            "type": "string",
            "format": "date-time"
          },
          "pendingMaintenanceBy": {
            "type": "string",
            "format": "date-time"
          },
          "state": {
            "type": "string",
            "enum": [
              "scheduled",
              "notified",
              "in_progress",
              "user_fix_required",
              "cancelled",
              "succeeded",
              "failed"
            ]
          }
        }
      },
      "maintenanceState": {
        "type": "string",
        "enum": [
          "scheduled",
          "notified",
          "in_progress",
          "user_fix_required",
          "cancelled",
          "succeeded",
          "failed"
        ]
      },
      "paidPlan": {
        "type": "string",
        "enum": [
          "starter",
          "standard",
          "pro",
          "pro_plus",
          "pro_max",
          "pro_ultra"
        ],
        "default": "starter",
        "description": "Defaults to \"starter\""
      }
    },
    "responses": {
      "400BadRequest": {
        "description": "The request could not be understood by the server.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "401Unauthorized": {
        "description": "Authorization information is missing or invalid.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "402PaymentRequired": {
        "description": "You must enter payment information to perform this request.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "403Forbidden": {
        "description": "You do not have permissions for the requested resource.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "404NotFound": {
        "description": "Unable to find the requested resource.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "406NotAcceptable": {
        "description": "Unable to generate preferred media types as specified by Accept request header.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "409Conflict": {
        "description": "The current state of the resource conflicts with this request.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "410Gone": {
        "description": "The requested resource is no longer available.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "429RateLimit": {
        "description": "Rate limit has been surpassed.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "500InternalServerError": {
        "description": "An unexpected server error has occurred.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "503ServiceUnavailable": {
        "description": "Server currently unavailable.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Metrics200Response": {
        "description": "A successful response",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "description": "A collection of time series",
              "required": [
                "items"
              ],
              "items": {
                "type": "object",
                "description": "A time series data point",
                "required": [
                  "labels",
                  "values",
                  "unit"
                ],
                "properties": {
                  "labels": {
                    "type": "array",
                    "description": "List of labels describing the time series",
                    "items": {
                      "type": "object",
                      "description": "A time series datapoint label",
                      "required": [
                        "field",
                        "value"
                      ],
                      "properties": {
                        "field": {
                          "type": "string",
                          "example": "service"
                        },
                        "value": {
                          "type": "string",
                          "example": "srv-xxxxx"
                        }
                      }
                    }
                  },
                  "values": {
                    "type": "array",
                    "description": "The values of the time series",
                    "items": {
                      "description": "A time series datapoint value",
                      "type": "object",
                      "required": [
                        "timestamp",
                        "value",
                        "unit"
                      ],
                      "properties": {
                        "timestamp": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2021-06-17T08:15:30Z"
                        },
                        "value": {
                          "type": "number",
                          "example": 1
                        }
                      }
                    }
                  },
                  "unit": {
                    "type": "string",
                    "example": "GB"
                  }
                }
              }
            }
          }
        }
      },
      "MetricsFiltersApplication200Response": {
        "description": "A successful response",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "description": "A collection of filter values for application metrics",
              "required": [
                "items"
              ],
              "items": {
                "type": "object",
                "properties": {
                  "filter": {
                    "type": "string",
                    "enum": [
                      "instance"
                    ]
                  },
                  "values": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "srv-xxxxx-yyyy"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "MetricsFiltersHTTP200Response": {
        "description": "A successful response",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "description": "A collection of filter values for HTTP metrics",
              "required": [
                "items"
              ],
              "items": {
                "type": "object",
                "properties": {
                  "filter": {
                    "type": "string",
                    "enum": [
                      "host",
                      "statusCode"
                    ]
                  },
                  "values": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "api.example.com"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "MetricsFiltersPath200Response": {
        "description": "A successful response",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "description": "A collection of suggested paths to filter by",
              "required": [
                "items"
              ],
              "items": {
                "type": "string",
                "example": "/user/*"
              }
            }
          }
        }
      }
    },
    "headers": {
      "RateLimitRemaining": {
        "schema": {
          "type": "integer"
        },
        "description": "The number of requests left for this time period."
      }
    }
  }
}